

Microchip Technology PIC18 PRO Macro Assembler V1.11 build 48931 
                                                                                               Thu Dec 13 15:49:44 2012

HI-TECH Software Omniscient Code Generator (PRO mode) build 48931
     1                           	processor	18F24K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	idataCOMRAM
    25  003DBD                     __pidataCOMRAM:
    26                           	opt stack 0
    27                           
    28                           ;initializer for main@F3878
    29  003DBD  4D                 	db	77
    30  003DBE  69                 	db	105
    31  003DBF  63                 	db	99
    32  003DC0  72                 	db	114
    33  003DC1  6F                 	db	111
    34  003DC2  63                 	db	99
    35  003DC3  68                 	db	104
    36  003DC4  69                 	db	105
    37  003DC5  70                 	db	112
    38  003DC6  20                 	db	32
    39  003DC7  52                 	db	82
    40  003DC8  6F                 	db	111
    41  003DC9  63                 	db	99
    42  003DCA  6B                 	db	107
    43  003DCB  73                 	db	115
    44  003DCC  00                 	db	0
    45  003DCD  00                 	db	0
    46  0000                     _ANSEL	set	3966
    47  0000                     _LATAbits	set	3977
    48  0000                     _OSCCONbits	set	4051
    49  0000                     _PIR1bits	set	3998
    50  0000                     _SSPBUF	set	4041
    51  0000                     _SSPCON1	set	4038
    52  0000                     _SSPCON1bits	set	4038
    53  0000                     _SSPSTAT	set	4039
    54  0000                     _SSPSTATbits	set	4039
    55  0000                     _TRISAbits	set	3986
    56  0000                     _TRISCbits	set	3988
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  003E5E                     __pcinit:
    62                           	opt stack 0
    63  003E5E                     start_initialization:
    64                           	opt stack 0
    65  003E5E                     __initialization:
    66                           	opt stack 0
    67                           
    68                           ; Initialize objects allocated to COMRAM (17 bytes)
    69                           ; load TBLPTR registers with __pidataCOMRAM
    70  003E5E  0EBD               	movlw	low __pidataCOMRAM
    71  003E60  6EF6               	movwf	tblptrl,c
    72  003E62  0E3D               	movlw	high __pidataCOMRAM
    73  003E64  6EF7               	movwf	tblptrh,c
    74  003E66  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    75  003E68  6EF8               	movwf	tblptru,c
    76  003E6A  EE00  F036         	lfsr	0,__pdataCOMRAM
    77  003E6E  EE10 F011          	lfsr	1,17
    78  003E72                     copy_data0:
    79  003E72  0009               	tblrd		*+
    80  003E74  CFF5 FFEE          	movff	tablat,postinc0
    81  003E78  50E5               	movf	postdec1,w,c
    82  003E7A  50E1               	movf	fsr1l,w,c
    83  003E7C  E1FA               	bnz	copy_data0
    84  003E7E                     end_of_initialization:
    85                           	opt stack 0
    86  003E7E                     __end_of__initialization:
    87                           	opt stack 0
    88  003E7E  0100               	movlb	0
    89  003E80  EFB5  F01F         	goto	_main	;jump to C main() function
    90                           tblptru	equ	0xFF8
    91                           tblptrh	equ	0xFF7
    92                           tblptrl	equ	0xFF6
    93                           tablat	equ	0xFF5
    94                           postinc0	equ	0xFEE
    95                           postdec1	equ	0xFE5
    96                           fsr1l	equ	0xFE1
    97                           
    98                           	psect	dataCOMRAM
    99  000036                     __pdataCOMRAM:
   100                           	opt stack 0
   101  000036                     main@F3878:
   102                           	opt stack 0
   103  000036                     	ds	17
   104                           tblptru	equ	0xFF8
   105                           tblptrh	equ	0xFF7
   106                           tblptrl	equ	0xFF6
   107                           tablat	equ	0xFF5
   108                           postinc0	equ	0xFEE
   109                           postdec1	equ	0xFE5
   110                           fsr1l	equ	0xFE1
   111                           
   112                           	psect	cstackCOMRAM
   113  000001                     __pcstackCOMRAM:
   114                           	opt stack 0
   115  000001                     ?_OpenSPI:
   116                           	opt stack 0
   117  000001                     ?_getsSPI:
   118                           	opt stack 0
   119  000001                     getsSPI@length:
   120                           	opt stack 0
   121  000001                     OpenSPI@bus_mode:
   122                           	opt stack 0
   123  000001                     putsSPI@wrptr:
   124                           	opt stack 0
   125  000001                     WriteSPI@data_out:
   126                           	opt stack 0
   127                           
   128                           ; 1 bytes @ 0x0
   129  000001                     	ds	1
   130  000002                     ?_Write_SPI_Page:
   131                           	opt stack 0
   132  000002                     ?_Read_Multiple_SPI_Bytes:
   133                           	opt stack 0
   134  000002                     ?_Read_SPI_Byte:
   135                           	opt stack 0
   136  000002                     ?_Read_SPI_StatusReg:
   137                           	opt stack 0
   138  000002                     getsSPI@rdptr:
   139                           	opt stack 0
   140  000002                     OpenSPI@smp_phase:
   141                           	opt stack 0
   142  000002                     Write_SPI_Page@address:
   143                           	opt stack 0
   144  000002                     Read_SPI_Byte@address:
   145                           	opt stack 0
   146  000002                     Read_Multiple_SPI_Bytes@address:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0x1
   150  000002                     	ds	1
   151  000003                     OpenSPI@sync_mode:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0x2
   155  000003                     	ds	1
   156  000004                     Write_SPI_Page@address_hi:
   157                           	opt stack 0
   158  000004                     Read_SPI_Byte@data_read:
   159                           	opt stack 0
   160  000004                     Read_Multiple_SPI_Bytes@address_hi:
   161                           	opt stack 0
   162  000004                     Read_SPI_StatusReg@data_read:
   163                           	opt stack 0
   164                           
   165                           ; 2 bytes @ 0x3
   166  000004                     	ds	1
   167  000005                     Write_SPI_Page@address_lo:
   168                           	opt stack 0
   169  000005                     Read_SPI_Byte@address_hi:
   170                           	opt stack 0
   171  000005                     Read_Multiple_SPI_Bytes@address_lo:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x4
   175  000005                     	ds	1
   176  000006                     ?_Write_SPI_Byte:
   177                           	opt stack 0
   178  000006                     Read_SPI_Byte@address_lo:
   179                           	opt stack 0
   180  000006                     Write_SPI_Byte@address:
   181                           	opt stack 0
   182                           
   183                           ; 2 bytes @ 0x5
   184  000006                     	ds	2
   185  000008                     Write_SPI_Byte@data:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x7
   189  000008                     	ds	2
   190  00000A                     Write_SPI_Byte@address_hi:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x9
   194  00000A                     	ds	1
   195  00000B                     Write_SPI_Byte@address_lo:
   196                           	opt stack 0
   197                           
   198                           ; 1 bytes @ 0xA
   199  00000B                     	ds	1
   200  00000C                     main@incoming_data_string:
   201                           	opt stack 0
   202                           
   203                           ; 20 bytes @ 0xB
   204  00000C                     	ds	20
   205  000020                     main@data_string:
   206                           	opt stack 0
   207                           
   208                           ; 17 bytes @ 0x1F
   209  000020                     	ds	20
   210  000034                     main@eeprom_data:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x33
   214  000034                     	ds	1
   215  000035                     main@eeprom_address:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x34
   219  000035                     	ds	1
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           postdec1	equ	0xFE5
   226                           fsr1l	equ	0xFE1
   227                           
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 173 in file "../PIC18_SPI_Examples.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  incoming_dat   20   11[COMRAM] unsigned char [20]
   238 ;;  data_string    17   31[COMRAM] unsigned char [17]
   239 ;;  eeprom_addre    1   52[COMRAM] volatile unsigned char 
   240 ;;  eeprom_data     1   51[COMRAM] volatile unsigned char 
   241 ;;  smp_phase       1    0        unsigned char 
   242 ;;  bus_mode        1    0        unsigned char 
   243 ;;  sync_mode       1    0        unsigned char 
   244 ;; Return value:  Size  Location     Type
   245 ;;		None               void
   246 ;; Registers used:
   247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   253 ;;      Params:         0       0       0       0
   254 ;;      Locals:        42       0       0       0
   255 ;;      Temps:          0       0       0       0
   256 ;;      Totals:        42       0       0       0
   257 ;;Total ram usage:       42 bytes
   258 ;; Hardware stack levels required when called:    3
   259 ;; This function calls:
   260 ;;		_OpenSPI
   261 ;;		_Write_SPI_Byte
   262 ;;		_Read_SPI_Byte
   263 ;;		_Write_SPI_Page
   264 ;;		_putsSPI
   265 ;;		_Read_SPI_StatusReg
   266 ;;		_Read_Multiple_SPI_Bytes
   267 ;;		_getsSPI
   268 ;; This function is called by:
   269 ;;		Startup code after reset
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text0
   274  003F6A                     __ptext0:
   275                           	opt stack 0
   276  003F6A                     _main:
   277                           	opt stack 28
   278                           
   279                           ;PIC18_SPI_Examples.c: 174: volatile unsigned char eeprom_address,eeprom_data;
   280                           ;PIC18_SPI_Examples.c: 175: unsigned char sync_mode;
   281                           ;PIC18_SPI_Examples.c: 176: unsigned char bus_mode;
   282                           ;PIC18_SPI_Examples.c: 177: unsigned char smp_phase;
   283                           ;PIC18_SPI_Examples.c: 180: OSCCONbits.IRCF=0x07;
   284  003F6A  0E70               	movlw	112
   285  003F6C  12D3               	iorwf	4051,f,c	;volatile
   286                           
   287                           ;PIC18_SPI_Examples.c: 181: OSCCONbits.SCS=0x02;
   288  003F6E  50D3               	movf	4051,w,c	;volatile
   289  003F70  0BFC               	andlw	-4
   290  003F72  0902               	iorlw	2
   291  003F74  6ED3               	movwf	4051,c	;volatile
   292                           
   293                           ;PIC18_SPI_Examples.c: 183: LATAbits.LATA7=1;
   294  003F76  8E89               	bsf	3977,7,c	;volatile
   295                           
   296                           ;PIC18_SPI_Examples.c: 184: LATAbits.LATA6=1;
   297  003F78  8C89               	bsf	3977,6,c	;volatile
   298                           
   299                           ;PIC18_SPI_Examples.c: 187: TRISAbits.TRISA6 = 0;
   300  003F7A  9C92               	bcf	3986,6,c	;volatile
   301                           
   302                           ;PIC18_SPI_Examples.c: 188: TRISAbits.TRISA7 = 0;
   303  003F7C  9E92               	bcf	3986,7,c	;volatile
   304                           
   305                           ;PIC18_SPI_Examples.c: 215: OpenSPI(sync_mode,bus_mode,smp_phase );
   306  003F7E  6A01               	clrf	?_OpenSPI,c
   307  003F80  6A02               	clrf	?_OpenSPI+1,c
   308  003F82  0E01               	movlw	1
   309  003F84  EC8D  F01F         	call	_OpenSPI
   310                           
   311                           ;PIC18_SPI_Examples.c: 224: eeprom_address=0x01;
   312  003F88  0E01               	movlw	1
   313  003F8A  6E35               	movwf	main@eeprom_address,c	;volatile
   314                           
   315                           ;PIC18_SPI_Examples.c: 225: eeprom_data=0xA5;
   316  003F8C  0EA5               	movlw	165
   317  003F8E  6E34               	movwf	main@eeprom_data,c	;volatile
   318                           
   319                           ;PIC18_SPI_Examples.c: 226: Write_SPI_Byte(eeprom_address,eeprom_data);
   320  003F90  C035  F006         	movff	main@eeprom_address,?_Write_SPI_Byte	;volatile
   321  003F94  6A07               	clrf	?_Write_SPI_Byte+1,c
   322  003F96  C034  F008         	movff	main@eeprom_data,?_Write_SPI_Byte+2	;volatile
   323  003F9A  6A09               	clrf	?_Write_SPI_Byte+3,c
   324  003F9C  EC6D  F01F         	call	_Write_SPI_Byte	;wreg free
   325                           
   326                           ;PIC18_SPI_Examples.c: 232: eeprom_address=0x01;
   327  003FA0  0E01               	movlw	1
   328  003FA2  6E35               	movwf	main@eeprom_address,c	;volatile
   329                           
   330                           ;PIC18_SPI_Examples.c: 233: eeprom_data = Read_SPI_Byte(eeprom_address);
   331  003FA4  C035  F002         	movff	main@eeprom_address,?_Read_SPI_Byte	;volatile
   332  003FA8  6A03               	clrf	?_Read_SPI_Byte+1,c
   333  003FAA  EC42  F01F         	call	_Read_SPI_Byte	;wreg free
   334  003FAE  6E34               	movwf	main@eeprom_data,c	;volatile
   335                           
   336                           ;PIC18_SPI_Examples.c: 235: if (eeprom_data == 0xA5)
   337  003FB0  5034               	movf	main@eeprom_data,w,c	;volatile
   338  003FB2  0AA5               	xorlw	165
   339  003FB4  B4D8               	btfsc	status,2,c
   340                           
   341                           ;PIC18_SPI_Examples.c: 236: eeprom_address++;
   342  003FB6  2A35               	incf	main@eeprom_address,f,c	;volatile
   343                           
   344                           ;PIC18_SPI_Examples.c: 243: unsigned char data_string[17] = "Microchip Rocks\0";
   345  003FB8  EE20  F036         	lfsr	2,main@F3878
   346  003FBC  EE10  F020         	lfsr	1,main@data_string
   347  003FC0  0E11               	movlw	17
   348  003FC2                     u91:
   349  003FC2  CFDE FFE6          	movff	postinc2,postinc1
   350  003FC6  2EE8               	decfsz	wreg,f,c
   351  003FC8  D7FC               	goto	u91
   352                           
   353                           ;PIC18_SPI_Examples.c: 245: eeprom_address=0x00;
   354  003FCA  6A35               	clrf	main@eeprom_address,c	;volatile
   355                           
   356                           ;PIC18_SPI_Examples.c: 246: Write_SPI_Page(eeprom_address);
   357  003FCC  C035  F002         	movff	main@eeprom_address,?_Write_SPI_Page	;volatile
   358  003FD0  6A03               	clrf	?_Write_SPI_Page+1,c
   359  003FD2  EC56  F01F         	call	_Write_SPI_Page	;wreg free
   360                           
   361                           ;PIC18_SPI_Examples.c: 247: putsSPI(data_string);
   362  003FD6  0E20               	movlw	main@data_string& (0+255)
   363  003FD8  EC1D  F01F         	call	_putsSPI
   364                           
   365                           ;PIC18_SPI_Examples.c: 248: LATAbits.LATA6=1;
   366  003FDC  8C89               	bsf	3977,6,c	;volatile
   367  003FDE                     l902:
   368  003FDE  EC0F  F01F         	call	_Read_SPI_StatusReg	;wreg free
   369  003FE2  B002               	btfsc	?_Read_SPI_StatusReg,0,c
   370  003FE4  D7FC               	goto	l902
   371                           
   372                           ;PIC18_SPI_Examples.c: 255: unsigned char incoming_data_string[20];
   373                           ;PIC18_SPI_Examples.c: 256: eeprom_address=0x00;
   374  003FE6  6A35               	clrf	main@eeprom_address,c	;volatile
   375                           
   376                           ;PIC18_SPI_Examples.c: 257: Read_Multiple_SPI_Bytes(eeprom_address);
   377  003FE8  C035  F002         	movff	main@eeprom_address,?_Read_Multiple_SPI_Bytes	;volatile
   378  003FEC  6A03               	clrf	?_Read_Multiple_SPI_Bytes+1,c
   379  003FEE  EC01  F01F         	call	_Read_Multiple_SPI_Bytes	;wreg free
   380                           
   381                           ;PIC18_SPI_Examples.c: 258: getsSPI(incoming_data_string,20);
   382  003FF2  0E14               	movlw	20
   383  003FF4  6E01               	movwf	?_getsSPI,c
   384  003FF6  0E0C               	movlw	main@incoming_data_string& (0+255)
   385  003FF8  ECF3  F01E         	call	_getsSPI
   386                           
   387                           ;PIC18_SPI_Examples.c: 261: (SSPCON1 &=0xDF);
   388  003FFC  9AC6               	bcf	4038,5,c	;volatile
   389  003FFE                     l53:
   390  003FFE  D7FF               	goto	l53
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postinc1	equ	0xFE6
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           postinc2	equ	0xFDE
   401                           status	equ	0xFD8
   402                           
   403 ;; *************** function _Write_SPI_Byte *****************
   404 ;; Defined at:
   405 ;;		line 54 in file "../PIC18_SPI_Examples.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;  address         2    5[COMRAM] unsigned int 
   408 ;;  data            2    7[COMRAM] unsigned int 
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  address_lo      1   10[COMRAM] unsigned char 
   411 ;;  address_hi      1    9[COMRAM] unsigned char 
   412 ;; Return value:  Size  Location     Type
   413 ;;		None               void
   414 ;; Registers used:
   415 ;;		wreg, status,2, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   421 ;;      Params:         4       0       0       0
   422 ;;      Locals:         2       0       0       0
   423 ;;      Temps:          0       0       0       0
   424 ;;      Totals:         6       0       0       0
   425 ;;Total ram usage:        6 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; Hardware stack levels required when called:    2
   428 ;; This function calls:
   429 ;;		_WriteSPI
   430 ;;		_Read_SPI_StatusReg
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text1
   437  003EDA                     __ptext1:
   438                           	opt stack 0
   439  003EDA                     __end_of_main:
   440                           	opt stack 0
   441  003EDA                     _Write_SPI_Byte:
   442                           	opt stack 28
   443                           
   444                           ;PIC18_SPI_Examples.c: 55: unsigned char address_hi, address_lo;
   445                           ;PIC18_SPI_Examples.c: 58: address_hi = (address & 0xFF00) >> 8;
   446  003EDA  5007               	movf	Write_SPI_Byte@address+1,w,c
   447  003EDC  6E0A               	movwf	Write_SPI_Byte@address_hi,c
   448                           
   449                           ;PIC18_SPI_Examples.c: 59: address_lo = (address & 0x00FF);
   450  003EDE  C006  F00B         	movff	Write_SPI_Byte@address,Write_SPI_Byte@address_lo
   451                           
   452                           ;PIC18_SPI_Examples.c: 62: LATAbits.LATA6=0;
   453  003EE2  9C89               	bcf	3977,6,c	;volatile
   454                           
   455                           ;PIC18_SPI_Examples.c: 63: WriteSPI(0x06);
   456  003EE4  0E06               	movlw	6
   457  003EE6  ECE7  F01E         	call	_WriteSPI
   458                           
   459                           ;PIC18_SPI_Examples.c: 64: LATAbits.LATA6=1;
   460  003EEA  8C89               	bsf	3977,6,c	;volatile
   461                           
   462                           ;PIC18_SPI_Examples.c: 65: _delay((unsigned long)((10)*(16000000/4000000.0)));
   463  003EEC  0E0D               	movlw	13
   464  003EEE                     u117:
   465  003EEE  2EE8               	decfsz	wreg,f,c
   466  003EF0  D7FE               	goto	u117
   467  003EF2  F000               	nop	
   468                           
   469                           ;PIC18_SPI_Examples.c: 67: LATAbits.LATA6=0;
   470  003EF4  9C89               	bcf	3977,6,c	;volatile
   471                           
   472                           ;PIC18_SPI_Examples.c: 68: WriteSPI(0x02);
   473  003EF6  0E02               	movlw	2
   474  003EF8  ECE7  F01E         	call	_WriteSPI
   475                           
   476                           ;PIC18_SPI_Examples.c: 69: WriteSPI(address_hi);
   477  003EFC  500A               	movf	Write_SPI_Byte@address_hi,w,c
   478  003EFE  ECE7  F01E         	call	_WriteSPI
   479                           
   480                           ;PIC18_SPI_Examples.c: 70: WriteSPI(address_lo);
   481  003F02  500B               	movf	Write_SPI_Byte@address_lo,w,c
   482  003F04  ECE7  F01E         	call	_WriteSPI
   483                           
   484                           ;PIC18_SPI_Examples.c: 71: WriteSPI(data);
   485  003F08  5008               	movf	Write_SPI_Byte@data,w,c
   486  003F0A  ECE7  F01E         	call	_WriteSPI
   487                           
   488                           ;PIC18_SPI_Examples.c: 72: LATAbits.LATA6=1;
   489  003F0E  8C89               	bsf	3977,6,c	;volatile
   490  003F10                     l860:
   491  003F10  EC0F  F01F         	call	_Read_SPI_StatusReg	;wreg free
   492  003F14  A002               	btfss	?_Read_SPI_StatusReg,0,c
   493  003F16  0012               	return	
   494  003F18  D7FB               	goto	l860
   495  003F1A                     __end_of_Write_SPI_Byte:
   496                           	opt stack 0
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           postinc1	equ	0xFE6
   504                           postdec1	equ	0xFE5
   505                           fsr1l	equ	0xFE1
   506                           postinc2	equ	0xFDE
   507                           status	equ	0xFD8
   508                           
   509 ;; *************** function _Read_SPI_StatusReg *****************
   510 ;; Defined at:
   511 ;;		line 42 in file "../PIC18_SPI_Examples.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  data_read       2    3[COMRAM] unsigned int 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  2    1[COMRAM] unsigned int 
   518 ;; Registers used:
   519 ;;		wreg, status,2, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: FFFFFFFF/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   525 ;;      Params:         2       0       0       0
   526 ;;      Locals:         2       0       0       0
   527 ;;      Temps:          0       0       0       0
   528 ;;      Totals:         4       0       0       0
   529 ;;Total ram usage:        4 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; Hardware stack levels required when called:    1
   532 ;; This function calls:
   533 ;;		_WriteSPI
   534 ;;		_ReadSPI
   535 ;; This function is called by:
   536 ;;		_Write_SPI_Byte
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text2
   542  003E1E                     __ptext2:
   543                           	opt stack 0
   544  003E1E                     _Read_SPI_StatusReg:
   545                           	opt stack 29
   546                           
   547                           ;PIC18_SPI_Examples.c: 43: unsigned int data_read;
   548                           ;PIC18_SPI_Examples.c: 44: LATAbits.LATA6=0;
   549  003E1E  9C89               	bcf	3977,6,c	;volatile
   550                           
   551                           ;PIC18_SPI_Examples.c: 45: WriteSPI(0x05);
   552  003E20  0E05               	movlw	5
   553  003E22  ECE7  F01E         	call	_WriteSPI
   554                           
   555                           ;PIC18_SPI_Examples.c: 46: data_read = ReadSPI();
   556  003E26  ECD7  F01E         	call	_ReadSPI	;wreg free
   557  003E2A  6E04               	movwf	Read_SPI_StatusReg@data_read,c
   558  003E2C  6A05               	clrf	Read_SPI_StatusReg@data_read+1,c
   559                           
   560                           ;PIC18_SPI_Examples.c: 47: LATAbits.LATA6=1;
   561  003E2E  8C89               	bsf	3977,6,c	;volatile
   562                           
   563                           ;PIC18_SPI_Examples.c: 49: return(data_read);
   564  003E30  C004  F002         	movff	Read_SPI_StatusReg@data_read,?_Read_SPI_StatusReg
   565  003E34  C005  F003         	movff	Read_SPI_StatusReg@data_read+1,?_Read_SPI_StatusReg+1
   566  003E38  0012               	return	
   567  003E3A                     __end_of_Read_SPI_StatusReg:
   568                           	opt stack 0
   569                           tblptru	equ	0xFF8
   570                           tblptrh	equ	0xFF7
   571                           tblptrl	equ	0xFF6
   572                           tablat	equ	0xFF5
   573                           postinc0	equ	0xFEE
   574                           wreg	equ	0xFE8
   575                           postinc1	equ	0xFE6
   576                           postdec1	equ	0xFE5
   577                           fsr1l	equ	0xFE1
   578                           postinc2	equ	0xFDE
   579                           status	equ	0xFD8
   580                           
   581 ;; *************** function _Write_SPI_Page *****************
   582 ;; Defined at:
   583 ;;		line 84 in file "../PIC18_SPI_Examples.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  address         2    1[COMRAM] unsigned int 
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  address_lo      1    4[COMRAM] unsigned char 
   588 ;;  address_hi      1    3[COMRAM] unsigned char 
   589 ;; Return value:  Size  Location     Type
   590 ;;		None               void
   591 ;; Registers used:
   592 ;;		wreg, status,2, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   598 ;;      Params:         2       0       0       0
   599 ;;      Locals:         2       0       0       0
   600 ;;      Temps:          0       0       0       0
   601 ;;      Totals:         4       0       0       0
   602 ;;Total ram usage:        4 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; Hardware stack levels required when called:    1
   605 ;; This function calls:
   606 ;;		_WriteSPI
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text3
   613  003EAC                     __ptext3:
   614                           	opt stack 0
   615  003EAC                     _Write_SPI_Page:
   616                           	opt stack 29
   617                           
   618                           ;PIC18_SPI_Examples.c: 85: unsigned char address_hi, address_lo;
   619                           ;PIC18_SPI_Examples.c: 88: address_hi = (address & 0xFF00) >> 8;
   620  003EAC  5003               	movf	Write_SPI_Page@address+1,w,c
   621  003EAE  6E04               	movwf	Write_SPI_Page@address_hi,c
   622                           
   623                           ;PIC18_SPI_Examples.c: 89: address_lo = (address & 0x00FF);
   624  003EB0  C002  F005         	movff	Write_SPI_Page@address,Write_SPI_Page@address_lo
   625                           
   626                           ;PIC18_SPI_Examples.c: 92: LATAbits.LATA6=0;
   627  003EB4  9C89               	bcf	3977,6,c	;volatile
   628                           
   629                           ;PIC18_SPI_Examples.c: 93: WriteSPI(0x06);
   630  003EB6  0E06               	movlw	6
   631  003EB8  ECE7  F01E         	call	_WriteSPI
   632                           
   633                           ;PIC18_SPI_Examples.c: 94: LATAbits.LATA6=1;
   634  003EBC  8C89               	bsf	3977,6,c	;volatile
   635                           
   636                           ;PIC18_SPI_Examples.c: 95: _delay((unsigned long)((10)*(16000000/4000000.0)));
   637  003EBE  0E0D               	movlw	13
   638  003EC0                     u127:
   639  003EC0  2EE8               	decfsz	wreg,f,c
   640  003EC2  D7FE               	goto	u127
   641  003EC4  F000               	nop	
   642                           
   643                           ;PIC18_SPI_Examples.c: 97: LATAbits.LATA6=0;
   644  003EC6  9C89               	bcf	3977,6,c	;volatile
   645                           
   646                           ;PIC18_SPI_Examples.c: 98: WriteSPI(0x02);
   647  003EC8  0E02               	movlw	2
   648  003ECA  ECE7  F01E         	call	_WriteSPI
   649                           
   650                           ;PIC18_SPI_Examples.c: 99: WriteSPI(address_hi);
   651  003ECE  5004               	movf	Write_SPI_Page@address_hi,w,c
   652  003ED0  ECE7  F01E         	call	_WriteSPI
   653                           
   654                           ;PIC18_SPI_Examples.c: 100: WriteSPI(address_lo);
   655  003ED4  5005               	movf	Write_SPI_Page@address_lo,w,c
   656  003ED6  EFE7  F01E         	goto	_WriteSPI
   657  003EDA                     __end_of_Write_SPI_Page:
   658                           	opt stack 0
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           postinc1	equ	0xFE6
   666                           postdec1	equ	0xFE5
   667                           fsr1l	equ	0xFE1
   668                           postinc2	equ	0xFDE
   669                           status	equ	0xFD8
   670                           
   671 ;; *************** function _Read_SPI_Byte *****************
   672 ;; Defined at:
   673 ;;		line 113 in file "../PIC18_SPI_Examples.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  address         2    1[COMRAM] unsigned int 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  address_lo      1    5[COMRAM] unsigned char 
   678 ;;  address_hi      1    4[COMRAM] unsigned char 
   679 ;;  data_read       1    3[COMRAM] unsigned char 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      unsigned char 
   682 ;; Registers used:
   683 ;;		wreg, status,2, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: FFFFFFFF/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   689 ;;      Params:         2       0       0       0
   690 ;;      Locals:         3       0       0       0
   691 ;;      Temps:          0       0       0       0
   692 ;;      Totals:         5       0       0       0
   693 ;;Total ram usage:        5 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    1
   696 ;; This function calls:
   697 ;;		_WriteSPI
   698 ;;		_ReadSPI
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text4
   705  003E84                     __ptext4:
   706                           	opt stack 0
   707  003E84                     _Read_SPI_Byte:
   708                           	opt stack 29
   709                           
   710                           ;PIC18_SPI_Examples.c: 114: unsigned char data_read;
   711                           ;PIC18_SPI_Examples.c: 115: unsigned char address_hi, address_lo;
   712                           ;PIC18_SPI_Examples.c: 118: address_hi = (address & 0xFF00) >> 8;
   713  003E84  5003               	movf	Read_SPI_Byte@address+1,w,c
   714  003E86  6E05               	movwf	Read_SPI_Byte@address_hi,c
   715                           
   716                           ;PIC18_SPI_Examples.c: 119: address_lo = (address & 0x00FF);
   717  003E88  C002  F006         	movff	Read_SPI_Byte@address,Read_SPI_Byte@address_lo
   718                           
   719                           ;PIC18_SPI_Examples.c: 121: LATAbits.LATA6=0;
   720  003E8C  9C89               	bcf	3977,6,c	;volatile
   721                           
   722                           ;PIC18_SPI_Examples.c: 122: WriteSPI(0x03);
   723  003E8E  0E03               	movlw	3
   724  003E90  ECE7  F01E         	call	_WriteSPI
   725                           
   726                           ;PIC18_SPI_Examples.c: 123: WriteSPI(address_hi);
   727  003E94  5005               	movf	Read_SPI_Byte@address_hi,w,c
   728  003E96  ECE7  F01E         	call	_WriteSPI
   729                           
   730                           ;PIC18_SPI_Examples.c: 124: WriteSPI(address_lo);
   731  003E9A  5006               	movf	Read_SPI_Byte@address_lo,w,c
   732  003E9C  ECE7  F01E         	call	_WriteSPI
   733                           
   734                           ;PIC18_SPI_Examples.c: 125: data_read = ReadSPI();
   735  003EA0  ECD7  F01E         	call	_ReadSPI	;wreg free
   736  003EA4  6E04               	movwf	Read_SPI_Byte@data_read,c
   737                           
   738                           ;PIC18_SPI_Examples.c: 126: LATAbits.LATA6=1;
   739  003EA6  8C89               	bsf	3977,6,c	;volatile
   740                           
   741                           ;PIC18_SPI_Examples.c: 127: return(data_read);
   742  003EA8  5004               	movf	Read_SPI_Byte@data_read,w,c
   743  003EAA  0012               	return	
   744  003EAC                     __end_of_Read_SPI_Byte:
   745                           	opt stack 0
   746                           tblptru	equ	0xFF8
   747                           tblptrh	equ	0xFF7
   748                           tblptrl	equ	0xFF6
   749                           tablat	equ	0xFF5
   750                           postinc0	equ	0xFEE
   751                           wreg	equ	0xFE8
   752                           postinc1	equ	0xFE6
   753                           postdec1	equ	0xFE5
   754                           fsr1l	equ	0xFE1
   755                           postinc2	equ	0xFDE
   756                           status	equ	0xFD8
   757                           
   758 ;; *************** function _Read_Multiple_SPI_Bytes *****************
   759 ;; Defined at:
   760 ;;		line 136 in file "../PIC18_SPI_Examples.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  address         2    1[COMRAM] unsigned int 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  address_lo      1    4[COMRAM] unsigned char 
   765 ;;  address_hi      1    3[COMRAM] unsigned char 
   766 ;; Return value:  Size  Location     Type
   767 ;;		None               void
   768 ;; Registers used:
   769 ;;		wreg, status,2, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: FFFFFFFF/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   775 ;;      Params:         2       0       0       0
   776 ;;      Locals:         2       0       0       0
   777 ;;      Temps:          0       0       0       0
   778 ;;      Totals:         4       0       0       0
   779 ;;Total ram usage:        4 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; Hardware stack levels required when called:    1
   782 ;; This function calls:
   783 ;;		_WriteSPI
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text5
   790  003E02                     __ptext5:
   791                           	opt stack 0
   792  003E02                     _Read_Multiple_SPI_Bytes:
   793                           	opt stack 29
   794                           
   795                           ;PIC18_SPI_Examples.c: 138: unsigned char address_hi, address_lo;
   796                           ;PIC18_SPI_Examples.c: 141: address_hi = (address & 0xFF00) >> 8;
   797  003E02  5003               	movf	Read_Multiple_SPI_Bytes@address+1,w,c
   798  003E04  6E04               	movwf	Read_Multiple_SPI_Bytes@address_hi,c
   799                           
   800                           ;PIC18_SPI_Examples.c: 142: address_lo = (address & 0x00FF);
   801  003E06  C002  F005         	movff	Read_Multiple_SPI_Bytes@address,Read_Multiple_SPI_Bytes@address_lo
   802                           
   803                           ;PIC18_SPI_Examples.c: 144: LATAbits.LATA6=0;
   804  003E0A  9C89               	bcf	3977,6,c	;volatile
   805                           
   806                           ;PIC18_SPI_Examples.c: 145: WriteSPI(0x03);
   807  003E0C  0E03               	movlw	3
   808  003E0E  ECE7  F01E         	call	_WriteSPI
   809                           
   810                           ;PIC18_SPI_Examples.c: 146: WriteSPI(address_hi);
   811  003E12  5004               	movf	Read_Multiple_SPI_Bytes@address_hi,w,c
   812  003E14  ECE7  F01E         	call	_WriteSPI
   813                           
   814                           ;PIC18_SPI_Examples.c: 147: WriteSPI(address_lo);
   815  003E18  5005               	movf	Read_Multiple_SPI_Bytes@address_lo,w,c
   816  003E1A  EFE7  F01E         	goto	_WriteSPI
   817  003E1E                     __end_of_Read_Multiple_SPI_Bytes:
   818                           	opt stack 0
   819                           tblptru	equ	0xFF8
   820                           tblptrh	equ	0xFF7
   821                           tblptrl	equ	0xFF6
   822                           tablat	equ	0xFF5
   823                           postinc0	equ	0xFEE
   824                           wreg	equ	0xFE8
   825                           postinc1	equ	0xFE6
   826                           postdec1	equ	0xFE5
   827                           fsr1l	equ	0xFE1
   828                           postinc2	equ	0xFDE
   829                           status	equ	0xFD8
   830                           
   831 ;; *************** function _WriteSPI *****************
   832 ;; Defined at:
   833 ;;		line 14 in file "plib/SPI/spi_writ.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  data_out        1    wreg     unsigned char 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  data_out        1    0[COMRAM] unsigned char 
   838 ;;  TempVar         1    0        unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      char 
   841 ;; Registers used:
   842 ;;		wreg
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: FFFFFFFF/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   848 ;;      Params:         0       0       0       0
   849 ;;      Locals:         1       0       0       0
   850 ;;      Temps:          0       0       0       0
   851 ;;      Totals:         1       0       0       0
   852 ;;Total ram usage:        1 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_Read_SPI_StatusReg
   858 ;;		_Write_SPI_Byte
   859 ;;		_Write_SPI_Page
   860 ;;		_Read_SPI_Byte
   861 ;;		_Read_Multiple_SPI_Bytes
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text6
   866  003DCE                     __ptext6:
   867                           	opt stack 0
   868  003DCE                     _WriteSPI:
   869                           	opt stack 29
   870                           
   871                           ;WriteSPI@data_out stored from wreg
   872  003DCE  CFE8 F001          	movff	wreg,WriteSPI@data_out
   873  003DD2  50C9               	movf	4041,w,c	;volatile
   874  003DD4  969E               	bcf	3998,3,c	;volatile
   875  003DD6  9EC6               	bcf	4038,7,c	;volatile
   876  003DD8  C001  FFC9         	movff	WriteSPI@data_out,4041	;volatile
   877  003DDC  BEC6               	btfsc	4038,7,c	;volatile
   878  003DDE  0012               	return	
   879  003DE0                     l129:
   880  003DE0  B69E               	btfsc	3998,3,c	;volatile
   881  003DE2  0012               	return	
   882  003DE4  D7FD               	goto	l129
   883  003DE6                     __end_of_WriteSPI:
   884                           	opt stack 0
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           postinc0	equ	0xFEE
   890                           wreg	equ	0xFE8
   891                           postinc1	equ	0xFE6
   892                           postdec1	equ	0xFE5
   893                           fsr1l	equ	0xFE1
   894                           postinc2	equ	0xFDE
   895                           status	equ	0xFD8
   896                           
   897 ;; *************** function _OpenSPI *****************
   898 ;; Defined at:
   899 ;;		line 15 in file "plib/SPI/spi_open.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  sync_mode       1    wreg     unsigned char 
   902 ;;  bus_mode        1    0[COMRAM] unsigned char 
   903 ;;  smp_phase       1    1[COMRAM] unsigned char 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  sync_mode       1    2[COMRAM] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;		None               void
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: FFFFFFFF/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   915 ;;      Params:         2       0       0       0
   916 ;;      Locals:         1       0       0       0
   917 ;;      Temps:          0       0       0       0
   918 ;;      Totals:         3       0       0       0
   919 ;;Total ram usage:        3 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text7
   929  003F1A                     __ptext7:
   930                           	opt stack 0
   931  003F1A                     _OpenSPI:
   932                           	opt stack 30
   933                           
   934                           ;OpenSPI@sync_mode stored from wreg
   935  003F1A  CFE8 F003          	movff	wreg,OpenSPI@sync_mode
   936  003F1E  0E3F               	movlw	63
   937  003F20  16C7               	andwf	4039,f,c	;volatile
   938  003F22  6AC6               	clrf	4038,c	;volatile
   939  003F24  5003               	movf	OpenSPI@sync_mode,w,c
   940  003F26  12C6               	iorwf	4038,f,c	;volatile
   941  003F28  5002               	movf	OpenSPI@smp_phase,w,c
   942  003F2A  12C7               	iorwf	4039,f,c	;volatile
   943  003F2C  D005               	goto	l744
   944  003F2E                     l82:
   945  003F2E  8CC7               	bsf	4039,6,c	;volatile
   946  003F30  D012               	goto	l750
   947  003F32                     l84:
   948  003F32  8CC7               	bsf	4039,6,c	;volatile
   949  003F34                     l85:
   950  003F34  88C6               	bsf	4038,4,c	;volatile
   951  003F36  D00F               	goto	l750
   952  003F38                     l744:
   953  003F38  5001               	movf	OpenSPI@bus_mode,w,c
   954                           
   955                           ; Switch size 1, requested type "speed"
   956                           ; Number of cases is 3, Range of values is 0 to 3
   957                           ; switch strategies available:
   958                           ; Name         Instructions Cycles
   959                           ; simple_byte           10     6 (average)
   960                           ;	Chosen strategy is simple_byte
   961  003F3A  E0F9               	bz	l82
   962  003F3C  0A02               	xorlw	2	; case 2
   963  003F3E  E0F9               	bz	l84
   964  003F40  0A01               	xorlw	1	; case 3
   965  003F42  E0F8               	bz	l85
   966  003F44  D008               	goto	l750
   967  003F46                     l88:
   968  003F46  8694               	bsf	3988,3,c	;volatile
   969  003F48  8A92               	bsf	3986,5,c	;volatile
   970  003F4A  987E               	bcf	3966,4,c	;volatile
   971  003F4C  D00A               	goto	l89
   972  003F4E                     l90:
   973  003F4E  8694               	bsf	3988,3,c	;volatile
   974  003F50  D008               	goto	l89
   975  003F52                     l91:
   976  003F52  9694               	bcf	3988,3,c	;volatile
   977  003F54  D006               	goto	l89
   978  003F56                     l750:
   979  003F56  5003               	movf	OpenSPI@sync_mode,w,c
   980                           
   981                           ; Switch size 1, requested type "speed"
   982                           ; Number of cases is 2, Range of values is 4 to 5
   983                           ; switch strategies available:
   984                           ; Name         Instructions Cycles
   985                           ; simple_byte            7     4 (average)
   986                           ;	Chosen strategy is simple_byte
   987  003F58  0A04               	xorlw	4	; case 4
   988  003F5A  E0F5               	bz	l88
   989  003F5C  0A01               	xorlw	1	; case 5
   990  003F5E  E0F7               	bz	l90
   991  003F60  D7F8               	goto	l91
   992  003F62                     l89:
   993  003F62  8894               	bsf	3988,4,c	;volatile
   994  003F64  9A94               	bcf	3988,5,c	;volatile
   995  003F66  8AC6               	bsf	4038,5,c	;volatile
   996  003F68  0012               	return	
   997  003F6A                     __end_of_OpenSPI:
   998                           	opt stack 0
   999                           tblptru	equ	0xFF8
  1000                           tblptrh	equ	0xFF7
  1001                           tblptrl	equ	0xFF6
  1002                           tablat	equ	0xFF5
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           postinc1	equ	0xFE6
  1006                           postdec1	equ	0xFE5
  1007                           fsr1l	equ	0xFE1
  1008                           postinc2	equ	0xFDE
  1009                           status	equ	0xFD8
  1010                           
  1011 ;; *************** function _putsSPI *****************
  1012 ;; Defined at:
  1013 ;;		line 13 in file "plib/SPI/spi_puts.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  wrptr           1    wreg     PTR unsigned char 
  1016 ;;		 -> main@data_string(17), 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  wrptr           1    0[COMRAM] PTR unsigned char 
  1019 ;;		 -> main@data_string(17), 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;		None               void
  1022 ;; Registers used:
  1023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: FFFFFFFF/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1029 ;;      Params:         0       0       0       0
  1030 ;;      Locals:         1       0       0       0
  1031 ;;      Temps:          0       0       0       0
  1032 ;;      Totals:         1       0       0       0
  1033 ;;Total ram usage:        1 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text8
  1043  003E3A                     __ptext8:
  1044                           	opt stack 0
  1045  003E3A                     _putsSPI:
  1046                           	opt stack 30
  1047                           
  1048                           ;putsSPI@wrptr stored from wreg
  1049  003E3A  CFE8 F001          	movff	wreg,putsSPI@wrptr
  1050  003E3E  D008               	goto	l760
  1051  003E40                     l756:
  1052  003E40  5001               	movf	putsSPI@wrptr,w,c
  1053  003E42  6ED9               	movwf	fsr2l,c
  1054  003E44  6ADA               	clrf	fsr2h,c
  1055  003E46  50DF               	movf	indf2,w,c
  1056  003E48  6EC9               	movwf	4041,c	;volatile
  1057  003E4A  2A01               	incf	putsSPI@wrptr,f,c
  1058  003E4C                     l101:
  1059  003E4C  A0C7               	btfss	4039,0,c	;volatile
  1060  003E4E  D7FE               	goto	l101
  1061  003E50                     l760:
  1062  003E50  5001               	movf	putsSPI@wrptr,w,c
  1063  003E52  6ED9               	movwf	fsr2l,c
  1064  003E54  6ADA               	clrf	fsr2h,c
  1065  003E56  50DF               	movf	indf2,w,c
  1066  003E58  B4D8               	btfsc	status,2,c
  1067  003E5A  0012               	return	
  1068  003E5C  D7F1               	goto	l756
  1069  003E5E                     __end_of_putsSPI:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postinc1	equ	0xFE6
  1078                           postdec1	equ	0xFE5
  1079                           fsr1l	equ	0xFE1
  1080                           indf2	equ	0xFDF
  1081                           postinc2	equ	0xFDE
  1082                           fsr2h	equ	0xFDA
  1083                           fsr2l	equ	0xFD9
  1084                           status	equ	0xFD8
  1085                           
  1086 ;; *************** function _getsSPI *****************
  1087 ;; Defined at:
  1088 ;;		line 15 in file "plib/SPI/spi_gets.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  rdptr           1    wreg     PTR unsigned char 
  1091 ;;		 -> main@incoming_data_string(20), 
  1092 ;;  length          1    0[COMRAM] unsigned char 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  rdptr           1    1[COMRAM] PTR unsigned char 
  1095 ;;		 -> main@incoming_data_string(20), 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;		None               void
  1098 ;; Registers used:
  1099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: FFFFFFFF/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1105 ;;      Params:         1       0       0       0
  1106 ;;      Locals:         1       0       0       0
  1107 ;;      Temps:          0       0       0       0
  1108 ;;      Totals:         2       0       0       0
  1109 ;;Total ram usage:        2 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    1
  1112 ;; This function calls:
  1113 ;;		_ReadSPI
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text9
  1120  003DE6                     __ptext9:
  1121                           	opt stack 0
  1122  003DE6                     _getsSPI:
  1123                           	opt stack 29
  1124                           
  1125                           ;getsSPI@rdptr stored from wreg
  1126  003DE6  CFE8 F002          	movff	wreg,getsSPI@rdptr
  1127  003DEA  D008               	goto	l834
  1128  003DEC                     l828:
  1129  003DEC  5002               	movf	getsSPI@rdptr,w,c
  1130  003DEE  6ED9               	movwf	fsr2l,c
  1131  003DF0  6ADA               	clrf	fsr2h,c
  1132  003DF2  ECD7  F01E         	call	_ReadSPI	;wreg free
  1133  003DF6  6EDF               	movwf	indf2,c
  1134  003DF8  2A02               	incf	getsSPI@rdptr,f,c
  1135  003DFA  0601               	decf	getsSPI@length,f,c
  1136  003DFC                     l834:
  1137  003DFC  6601               	tstfsz	getsSPI@length,c
  1138  003DFE  D7F6               	goto	l828
  1139  003E00  0012               	return	
  1140  003E02                     __end_of_getsSPI:
  1141                           	opt stack 0
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           postinc0	equ	0xFEE
  1147                           wreg	equ	0xFE8
  1148                           postinc1	equ	0xFE6
  1149                           postdec1	equ	0xFE5
  1150                           fsr1l	equ	0xFE1
  1151                           indf2	equ	0xFDF
  1152                           postinc2	equ	0xFDE
  1153                           fsr2h	equ	0xFDA
  1154                           fsr2l	equ	0xFD9
  1155                           status	equ	0xFD8
  1156                           
  1157 ;; *************** function _ReadSPI *****************
  1158 ;; Defined at:
  1159 ;;		line 13 in file "plib/SPI/spi_read.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  TempVar         1    0        unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      unsigned char 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: FFFFFFFF/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1173 ;;      Params:         0       0       0       0
  1174 ;;      Locals:         0       0       0       0
  1175 ;;      Temps:          0       0       0       0
  1176 ;;      Totals:         0       0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_Read_SPI_StatusReg
  1183 ;;		_Read_SPI_Byte
  1184 ;;		_getsSPI
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text10
  1189  003DAE                     __ptext10:
  1190                           	opt stack 0
  1191  003DAE                     _ReadSPI:
  1192                           	opt stack 29
  1193  003DAE  50C9               	movf	4041,w,c	;volatile
  1194  003DB0  969E               	bcf	3998,3,c	;volatile
  1195  003DB2  6AC9               	clrf	4041,c	;volatile
  1196  003DB4                     l112:
  1197  003DB4  A69E               	btfss	3998,3,c	;volatile
  1198  003DB6  D7FE               	goto	l112
  1199  003DB8  50C9               	movf	4041,w,c	;volatile
  1200  003DBA  0012               	return	
  1201  003DBC                     __end_of_ReadSPI:
  1202                           	opt stack 0
  1203  0000                     tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postinc1	equ	0xFE6
  1210                           postdec1	equ	0xFE5
  1211                           fsr1l	equ	0xFE1
  1212                           indf2	equ	0xFDF
  1213                           postinc2	equ	0xFDE
  1214                           fsr2h	equ	0xFDA
  1215                           fsr2l	equ	0xFD9
  1216                           status	equ	0xFD8
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           postinc1	equ	0xFE6
  1224                           postdec1	equ	0xFE5
  1225                           fsr1l	equ	0xFE1
  1226                           indf2	equ	0xFDF
  1227                           postinc2	equ	0xFDE
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8
  1231                           
  1232                           	psect	text11
  1233  000000                     __ptext11:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           postinc0	equ	0xFEE
  1240                           wreg	equ	0xFE8
  1241                           postinc1	equ	0xFE6
  1242                           postdec1	equ	0xFE5
  1243                           fsr1l	equ	0xFE1
  1244                           indf2	equ	0xFDF
  1245                           postinc2	equ	0xFDE
  1246                           fsr2h	equ	0xFDA
  1247                           fsr2l	equ	0xFD9
  1248                           status	equ	0xFD8
  1249                           
  1250                           	psect	rparam
  1251  0000                     tblptru	equ	0xFF8
  1252                           tblptrh	equ	0xFF7
  1253                           tblptrl	equ	0xFF6
  1254                           tablat	equ	0xFF5
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           postinc1	equ	0xFE6
  1258                           postdec1	equ	0xFE5
  1259                           fsr1l	equ	0xFE1
  1260                           indf2	equ	0xFDF
  1261                           postinc2	equ	0xFDE
  1262                           fsr2h	equ	0xFDA
  1263                           fsr2l	equ	0xFD9
  1264                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      70
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    ?_Read_SPI_StatusReg	unsigned int  size(1) Largest target is 0

    putsSPI@wrptr	PTR unsigned char  size(1) Largest target is 17
		 -> main@data_string(COMRAM[17]), 

    getsSPI@rdptr	PTR unsigned char  size(1) Largest target is 20
		 -> main@incoming_data_string(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_Write_SPI_Byte
    _Write_SPI_Byte->_Read_SPI_StatusReg
    _Read_SPI_StatusReg->_WriteSPI
    _Write_SPI_Page->_WriteSPI
    _Read_SPI_Byte->_WriteSPI
    _Read_Multiple_SPI_Bytes->_WriteSPI

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0     675
                                             11 COMRAM    42    42      0
                            _OpenSPI
                     _Write_SPI_Byte
                      _Read_SPI_Byte
                     _Write_SPI_Page
                            _putsSPI
                 _Read_SPI_StatusReg
            _Read_Multiple_SPI_Bytes
                            _getsSPI
 ---------------------------------------------------------------------------------
 (1) _Write_SPI_Byte                                       6     2      4     120
                                              5 COMRAM     6     2      4
                           _WriteSPI
                 _Read_SPI_StatusReg
 ---------------------------------------------------------------------------------
 (1) _Read_SPI_StatusReg                                   4     2      2      30
                                              1 COMRAM     4     2      2
                           _WriteSPI
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _Write_SPI_Page                                       4     2      2      75
                                              1 COMRAM     4     2      2
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _Read_SPI_Byte                                        5     3      2      90
                                              1 COMRAM     5     3      2
                           _WriteSPI
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _Read_Multiple_SPI_Bytes                              4     2      2      75
                                              1 COMRAM     4     2      2
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             2     2      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenSPI                                              3     1      2      60
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _putsSPI                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getsSPI                                              2     1      1      30
                                              0 COMRAM     2     1      1
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (2) _ReadSPI                                              1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenSPI
   _Write_SPI_Byte
     _WriteSPI
     _Read_SPI_StatusReg
       _WriteSPI
       _ReadSPI
   _Read_SPI_Byte
     _WriteSPI
     _ReadSPI
   _Write_SPI_Page
     _WriteSPI
   _putsSPI
   _Read_SPI_StatusReg
     _WriteSPI
     _ReadSPI
   _Read_Multiple_SPI_Bytes
     _WriteSPI
   _getsSPI
     _ReadSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      46       1       73.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       3       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      46       3        0.0%
DATA                 0      0      49      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.11 build 48931 
Symbol Table                                                                                   Thu Dec 13 15:49:44 2012

                      _SSPSTATbits 000FC7                                 l53 3FFE  
                               l90 3F4E                                 l82 3F2E  
                               l91 3F52                                 l84 3F32  
                               l85 3F34                                 l88 3F46  
                               l89 3F62                                 u91 3FC2  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     getsSPI@rdptr 0002                                l101 3E4C  
                              l112 3DB4                                l129 3DE0  
                              l750 3F56                                l902 3FDE  
                              l760 3E50                                l744 3F38  
                              l834 3DFC                                l828 3DEC  
                              l756 3E40                                l860 3F10  
                              u117 3EEE                                u127 3EC0  
                     __CFG_CPD$OFF 000000                       __CFG_BORV$27 000000  
                              wreg 000FE8  Read_Multiple_SPI_Bytes@address_hi 0004  
Read_Multiple_SPI_Bytes@address_lo 0005                      getsSPI@length 0001  
                     __CFG_LVP$OFF 000000                               _main 3F6A  
                             fsr2h 000FDA                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             start 0000                      __CFG_IESO$OFF 000000  
                  __end_of_ReadSPI 3DBC                      _Read_SPI_Byte 3E84  
                  __end_of_OpenSPI 3F6A                              ?_main 0001  
                            _ANSEL 000F7E           ?_Read_Multiple_SPI_Bytes 0002  
                   __CFG_FCMEN$OFF 000000                    __end_of_getsSPI 3E02  
                   __CFG_BOREN$OFF 000000                              tablat 000FF5  
                  __end_of_putsSPI 3E5E                              status 000FD8  
                  __initialization 3E5E                     ?_Read_SPI_Byte 0002  
                     __end_of_main 3EDA                             ??_main 000C  
          __size_of_Write_SPI_Page 002E                      __activetblptr 000000  
          __size_of_Write_SPI_Byte 0040         __end_of_Read_SPI_StatusReg 3E3A  
                     putsSPI@wrptr 0001                   __end_of_WriteSPI 3DE6  
                   __CFG_WDTEN$OFF 000000                             _SSPBUF 000FC9  
                        ??_ReadSPI 0001                          ??_OpenSPI 0003  
                   __CFG_STVREN$ON 000000    __end_of_Read_Multiple_SPI_Bytes 3E1E  
                        ??_getsSPI 0002                       __pdataCOMRAM 0036  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ??_putsSPI 0001  
               main@eeprom_address 0035            Read_SPI_Byte@address_hi 0005  
          Read_SPI_Byte@address_lo 0006                         __accesstop 0060  
          __end_of__initialization 3E7E                    __CFG_PBADEN$OFF 000000  
                  ??_Read_SPI_Byte 0004                     __pcstackCOMRAM 0001  
      Read_SPI_StatusReg@data_read 0004                 __CFG_CCP2MX$PORTBE 000000  
                        ?_WriteSPI 0001                     _Write_SPI_Page 3EAC  
                   _Write_SPI_Byte 3EDA                            _SSPCON1 000FC6  
                          _SSPSTAT 000FC7                            _ReadSPI 3DAE  
 __size_of_Read_Multiple_SPI_Bytes 001C                            _OpenSPI 3F1A  
                          __Hparam 0000                            __Lparam 0000  
           __end_of_Write_SPI_Page 3EDA             __end_of_Write_SPI_Byte 3F1A  
                          __pcinit 3E5E                            __ramtop 0300  
                       ??_WriteSPI 0001                            __ptext0 3F6A  
                          __ptext1 3EDA                            __ptext2 3E1E  
                          __ptext3 3EAC                            __ptext4 3E84  
                          __ptext5 3E02                            __ptext6 3DCE  
                          __ptext7 3F1A                            __ptext8 3E3A  
                          __ptext9 3DE6                            _getsSPI 3DE6  
         Write_SPI_Page@address_hi 0004           Write_SPI_Page@address_lo 0005  
                          _putsSPI 3E3A               end_of_initialization 3E7E  
               _Read_SPI_StatusReg 3E1E                ?_Read_SPI_StatusReg 0002  
                          postdec1 000FE5                   WriteSPI@data_out 0001  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                    ?_Write_SPI_Page 0002  
                  ?_Write_SPI_Byte 0006               ??_Read_SPI_StatusReg 0004  
                        _TRISAbits 000F92                          _TRISCbits 000F94  
                    __pidataCOMRAM 3DBD                   OpenSPI@smp_phase 0002  
            Write_SPI_Page@address 0002                start_initialization 3E5E  
                 OpenSPI@sync_mode 0003                    main@data_string 0020  
          _Read_Multiple_SPI_Bytes 3E02              Write_SPI_Byte@address 0006  
            __end_of_Read_SPI_Byte 3EAC                  __size_of_WriteSPI 0018  
           Read_SPI_Byte@data_read 0004               Read_SPI_Byte@address 0002  
                  main@eeprom_data 0034                           ?_ReadSPI 0001  
                         ?_OpenSPI 0001                           ?_getsSPI 0001  
                         ?_putsSPI 0001          ??_Read_Multiple_SPI_Bytes 0004  
                         _LATAbits 000F89                   ??_Write_SPI_Page 0004  
                 ??_Write_SPI_Byte 000A                           _PIR1bits 000F9E  
                        main@F3878 0036                    OpenSPI@bus_mode 0001  
         main@incoming_data_string 000C           Write_SPI_Byte@address_hi 000A  
                        copy_data0 3E72           Write_SPI_Byte@address_lo 000B  
                 __size_of_ReadSPI 000E                           __Hrparam 0000  
                         __Lrparam 0000                   __size_of_OpenSPI 0050  
                         _WriteSPI 3DCE                   __size_of_getsSPI 001C  
      __size_of_Read_SPI_StatusReg 001C                           __ptext10 3DAE  
                         __ptext11 0000                   __size_of_putsSPI 0024  
                    __size_of_main FF70     Read_Multiple_SPI_Bytes@address 0002  
                       _OSCCONbits 000FD3                 Write_SPI_Byte@data 0008  
                      _SSPCON1bits 000FC6             __size_of_Read_SPI_Byte 0028  
                __CFG_FOSC$INTIO67 000000  
