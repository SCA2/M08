

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue Nov 05 17:30:17 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           	psect	idataCOMRAM
    51  002924                     __pidataCOMRAM:
    52                           	opt stack 0
    53                           
    54                           ;initializer for _channel_num
    55  002924  02                 	db	2
    56                           
    57                           	psect	idataBANK0
    58  0028EA                     __pidataBANK0:
    59                           	opt stack 0
    60                           
    61                           ;initializer for _getBuffer
    62  0028EA  00                 	db	0
    63  0028EB  00                 	db	0
    64  0028EC  00                 	db	0
    65  0028ED  01                 	db	1
    66  0028EE  02                 	db	2
    67  0028EF  00                 	db	0
    68  0028F0  00                 	db	0
    69  0028F1  00                 	db	0
    70  0028F2  00                 	db	0
    71  0028F3  00                 	db	0
    72  0028F4  03                 	db	3
    73  0028F5  04                 	db	4
    74  0028F6  05                 	db	5
    75                           
    76                           ;initializer for _nextChannel
    77  0028F7  00                 	db	0
    78  0028F8  00                 	db	0
    79  0028F9  03                 	db	3
    80  0028FA  0A                 	db	10
    81  0028FB  04                 	db	4
    82  0028FC  00                 	db	0
    83  0028FD  00                 	db	0
    84  0028FE  00                 	db	0
    85  0028FF  00                 	db	0
    86  002900  00                 	db	0
    87  002901  0C                 	db	12
    88  002902  0B                 	db	11
    89  002903  02                 	db	2
    90                           
    91                           	psect	smallconst
    92  000F00                     __psmallconst:
    93                           	opt stack 0
    94  000F00                     _init_grn:
    95                           	opt stack 0
    96  000F00  0F                 	db	15
    97  000F01  0F                 	db	15
    98  000F02  1F                 	db	31
    99  000F03  1F                 	db	31
   100  000F04  3F                 	db	63
   101  000F05  3F                 	db	63
   102  000F06  7F                 	db	127
   103  000F07  7F                 	db	127
   104  000F08                     __end_of_init_grn:
   105                           	opt stack 0
   106  000F08                     _init_red:
   107                           	opt stack 0
   108  000F08  F0                 	db	240
   109  000F09  F0                 	db	240
   110  000F0A  E0                 	db	224
   111  000F0B  E0                 	db	224
   112  000F0C  C0                 	db	192
   113  000F0D  C0                 	db	192
   114  000F0E  80                 	db	128
   115  000F0F  80                 	db	128
   116  000F10                     __end_of_init_red:
   117                           	opt stack 0
   118  0000                     _ADCON0bits	set	4034
   119  0000                     _ADCON1bits	set	4033
   120  0000                     _ADCTRIGbits	set	3768
   121  0000                     _ADRESH	set	4036
   122  0000                     _ADRESL	set	4035
   123  0000                     _ANCON0bits	set	3912
   124  0000                     _ANCON1bits	set	3913
   125  0000                     _CCP1CONbits	set	4026
   126  0000                     _CCP2CONbits	set	4020
   127  0000                     _CCPR1H	set	4028
   128  0000                     _CCPR1L	set	4027
   129  0000                     _CCPR2H	set	4022
   130  0000                     _CCPR2L	set	4021
   131  0000                     _CCPTMRS0bits	set	3922
   132  0000                     _INTCONbits	set	4082
   133  0000                     _LATAbits	set	3977
   134  0000                     _LATBbits	set	3978
   135  0000                     _OSCCON2bits	set	3975
   136  0000                     _OSCCONbits	set	4051
   137  0000                     _OSCTUNEbits	set	3995
   138  0000                     _PIE1bits	set	3997
   139  0000                     _PIE2bits	set	4000
   140  0000                     _PIR1bits	set	3998
   141  0000                     _PIR2bits	set	4001
   142  0000                     _PORTAbits	set	3968
   143  0000                     _PORTBbits	set	3969
   144  0000                     _SSP1BUF	set	4041
   145  0000                     _SSP1CON1	set	4038
   146  0000                     _SSP1CON1bits	set	4038
   147  0000                     _SSP1STATbits	set	4039
   148  0000                     _SSPCON1bits	set	4038
   149  0000                     _T1CON	set	4045
   150  0000                     _T1CONbits	set	4045
   151  0000                     _T1GCONbits	set	3994
   152  0000                     _T3CON	set	3961
   153  0000                     _T3CONbits	set	3961
   154  0000                     _T3GCONbits	set	3991
   155  0000                     _TMR1H	set	4047
   156  0000                     _TMR1L	set	4046
   157  0000                     _TMR3H	set	3963
   158  0000                     _TMR3L	set	3962
   159  0000                     _TRISAbits	set	3986
   160  0000                     _TRISBbits	set	3987
   161  0000                     _TRISCbits	set	3988
   162                           
   163                           ; #config settings
   164  000F10  00                 	db	0	; dummy byte at the end
   165  0000                     
   166                           	psect	cinit
   167  002746                     __pcinit:
   168                           	opt stack 0
   169  002746                     start_initialization:
   170                           	opt stack 0
   171  002746                     __initialization:
   172                           	opt stack 0
   173                           
   174                           ; Clear objects allocated to BANK1 (192 bytes)
   175  002746  EE01  F000         	lfsr	0,__pbssBANK1
   176  00274A  0EC0               	movlw	192
   177  00274C                     clear_0:
   178  00274C  6AEE               	clrf	postinc0,c
   179  00274E  06E8               	decf	wreg,f,c
   180  002750  E1FD               	bnz	clear_0
   181                           
   182                           ; Clear objects allocated to BANK0 (90 bytes)
   183  002752  EE00  F060         	lfsr	0,__pbssBANK0
   184  002756  0E5A               	movlw	90
   185  002758                     clear_1:
   186  002758  6AEE               	clrf	postinc0,c
   187  00275A  06E8               	decf	wreg,f,c
   188  00275C  E1FD               	bnz	clear_1
   189                           
   190                           ; Clear objects allocated to COMRAM (22 bytes)
   191  00275E  EE00  F027         	lfsr	0,__pbssCOMRAM
   192  002762  0E16               	movlw	22
   193  002764                     clear_2:
   194  002764  6AEE               	clrf	postinc0,c
   195  002766  06E8               	decf	wreg,f,c
   196  002768  E1FD               	bnz	clear_2
   197                           
   198                           ; Initialize objects allocated to BANK0 (26 bytes)
   199                           ; load TBLPTR registers with __pidataBANK0
   200  00276A  0EEA               	movlw	low __pidataBANK0
   201  00276C  6EF6               	movwf	tblptrl,c
   202  00276E  0E28               	movlw	high __pidataBANK0
   203  002770  6EF7               	movwf	tblptrh,c
   204  002772  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   205  002774  6EF8               	movwf	tblptru,c
   206  002776  EE00  F0E6         	lfsr	0,__pdataBANK0
   207  00277A  EE10 F01A          	lfsr	1,26
   208  00277E                     copy_data0:
   209  00277E  0009               	tblrd		*+
   210  002780  CFF5 FFEE          	movff	tablat,postinc0
   211  002784  50E5               	movf	postdec1,w,c
   212  002786  50E1               	movf	fsr1l,w,c
   213  002788  E1FA               	bnz	copy_data0
   214                           
   215                           ; Initialize objects allocated to COMRAM (1 bytes)
   216                           ; load TBLPTR registers with __pidataCOMRAM
   217  00278A  0E24               	movlw	low __pidataCOMRAM
   218  00278C  6EF6               	movwf	tblptrl,c
   219  00278E  0E29               	movlw	high __pidataCOMRAM
   220  002790  6EF7               	movwf	tblptrh,c
   221  002792  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   222  002794  6EF8               	movwf	tblptru,c
   223  002796  0009               	tblrd		*+	;fetch initializer
   224  002798  CFF5 F03D          	movff	tablat,__pdataCOMRAM
   225  00279C                     end_of_initialization:
   226                           	opt stack 0
   227  00279C                     __end_of__initialization:
   228                           	opt stack 0
   229  00279C  0100               	movlb	0
   230  00279E  EF89  F007         	goto	_main	;jump to C main() function
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	bssCOMRAM
   241  000027                     __pbssCOMRAM:
   242                           	opt stack 0
   243  000027                     _x:
   244                           	opt stack 0
   245  000027                     	ds	4
   246  00002B                     _y:
   247                           	opt stack 0
   248  00002B                     	ds	4
   249  00002F                     _errno:
   250                           	opt stack 0
   251  00002F                     	ds	2
   252  000031                     _TIMERbits:
   253                           	opt stack 0
   254  000031                     	ds	1
   255  000032                     _buffer_full:
   256                           	opt stack 0
   257  000032                     	ds	1
   258  000033                     _buffer_num:
   259                           	opt stack 0
   260  000033                     	ds	1
   261  000034                     _channel:
   262                           	opt stack 0
   263  000034                     	ds	1
   264  000035                     _sample_num:
   265                           	opt stack 0
   266  000035                     	ds	1
   267  000036                     _slice:
   268                           	opt stack 0
   269  000036                     	ds	1
   270  000037                     _p:
   271                           	opt stack 0
   272  000037                     	ds	6
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	dataCOMRAM
   283  00003D                     __pdataCOMRAM:
   284                           	opt stack 0
   285  00003D                     _channel_num:
   286                           	opt stack 0
   287  00003D                     	ds	1
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1l	equ	0xFE1
   296                           
   297                           	psect	bssBANK0
   298  000060                     __pbssBANK0:
   299                           	opt stack 0
   300  000060                     _ChnlA:
   301                           	opt stack 0
   302  000060                     	ds	45
   303  00008D                     _ChnlB:
   304                           	opt stack 0
   305  00008D                     	ds	45
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315                           	psect	dataBANK0
   316  0000E6                     __pdataBANK0:
   317                           	opt stack 0
   318  0000E6                     _getBuffer:
   319                           	opt stack 0
   320  0000E6                     	ds	13
   321  0000F3                     _nextChannel:
   322                           	opt stack 0
   323  0000F3                     	ds	13
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           postdec1	equ	0xFE5
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	bssBANK1
   334  000100                     __pbssBANK1:
   335                           	opt stack 0
   336  000100                     _BufferA:
   337                           	opt stack 0
   338  000100                     	ds	96
   339  000160                     _BufferB:
   340                           	opt stack 0
   341  000160                     	ds	96
   342                           tblptru	equ	0xFF8
   343                           tblptrh	equ	0xFF7
   344                           tblptrl	equ	0xFF6
   345                           tablat	equ	0xFF5
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           postdec1	equ	0xFE5
   349                           fsr1l	equ	0xFE1
   350                           
   351                           	psect	cstackBANK1
   352  0001C0                     __pcstackBANK1:
   353                           	opt stack 0
   354  0001C0                     
   355                           ; 2 bytes @ 0x0
   356  0001C0                     	ds	2
   357  0001C2                     
   358                           ; 3 bytes @ 0x2
   359  0001C2                     	ds	3
   360  0001C5                     ??_main:
   361                           
   362                           ; 0 bytes @ 0x5
   363  0001C5                     	ds	4
   364  0001C9                     main@z:
   365                           	opt stack 0
   366                           
   367                           ; 4 bytes @ 0x9
   368  0001C9                     	ds	4
   369  0001CD                     main@x:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0xD
   373  0001CD                     	ds	2
   374  0001CF                     main@y:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0xF
   378  0001CF                     	ds	2
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	cstackBANK0
   389  0000BA                     __pcstackBANK0:
   390                           	opt stack 0
   391  0000BA                     ?_sm24x24:
   392                           	opt stack 0
   393  0000BA                     ??_makeInt24:
   394  0000BA                     ?_strncpy:
   395                           	opt stack 0
   396  0000BA                     ?___lmul:
   397                           	opt stack 0
   398  0000BA                     strncpy@to:
   399                           	opt stack 0
   400  0000BA                     sm16x16@q:
   401                           	opt stack 0
   402  0000BA                     sm24x24@x:
   403                           	opt stack 0
   404  0000BA                     ___lmul@multiplier:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x0
   408  0000BA                     	ds	2
   409  0000BC                     strncpy@from:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x2
   413  0000BC                     	ds	2
   414  0000BE                     strncpy@size:
   415                           	opt stack 0
   416  0000BE                     sm24x24@y:
   417                           	opt stack 0
   418  0000BE                     makeInt24@r:
   419                           	opt stack 0
   420  0000BE                     ___lmul@multiplicand:
   421                           	opt stack 0
   422                           
   423                           ; 4 bytes @ 0x4
   424  0000BE                     	ds	2
   425  0000C0                     ?_MeterChannel_init:
   426                           	opt stack 0
   427  0000C0                     MeterChannel_init@c:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x6
   431  0000C0                     	ds	2
   432  0000C2                     ?_log2fix:
   433                           	opt stack 0
   434  0000C2                     log2fix@x:
   435                           	opt stack 0
   436  0000C2                     makeInt24@t:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x8
   440  0000C2                     	ds	4
   441  0000C6                     ?_ProcessAC:
   442                           	opt stack 0
   443  0000C6                     ProcessAC@samples:
   444                           	opt stack 0
   445  0000C6                     log2fix@precision:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0xC
   449  0000C6                     	ds	2
   450  0000C8                     ??_log2fix:
   451  0000C8                     
   452                           ; 2 bytes @ 0xE
   453  0000C8                     	ds	1
   454  0000C9                     log2fix@i:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0xF
   458  0000C9                     	ds	1
   459  0000CA                     ProcessAC@c:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x10
   463  0000CA                     	ds	1
   464  0000CB                     log2fix@z:
   465                           	opt stack 0
   466                           
   467                           ; 4 bytes @ 0x11
   468  0000CB                     	ds	1
   469  0000CC                     ??_ProcessAC:
   470                           
   471                           ; 0 bytes @ 0x12
   472  0000CC                     	ds	3
   473  0000CF                     log2fix@b:
   474                           	opt stack 0
   475                           
   476                           ; 4 bytes @ 0x15
   477  0000CF                     	ds	4
   478  0000D3                     log2fix@y:
   479                           	opt stack 0
   480                           
   481                           ; 4 bytes @ 0x19
   482  0000D3                     	ds	1
   483  0000D4                     ProcessAC@VU_Attack:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x1A
   487  0000D4                     	ds	3
   488  0000D7                     log2fix@scale_2:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x1D
   492  0000D7                     	ds	1
   493  0000D8                     ProcessAC@PPM_Attack:
   494                           	opt stack 0
   495                           
   496                           ; 4 bytes @ 0x1E
   497  0000D8                     	ds	3
   498  0000DB                     log2fix@scale_1:
   499                           	opt stack 0
   500                           
   501                           ; 4 bytes @ 0x21
   502  0000DB                     	ds	1
   503  0000DC                     ProcessAC@i:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x22
   507  0000DC                     	ds	2
   508  0000DE                     ProcessAC@t2:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0x24
   512  0000DE                     	ds	4
   513  0000E2                     ProcessAC@t1:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0x28
   517  0000E2                     	ds	4
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	cstackCOMRAM
   528  000001                     __pcstackCOMRAM:
   529                           	opt stack 0
   530  000001                     ??_ISR_ADC:
   531  000001                     ?_SPI1_write:
   532                           	opt stack 0
   533  000001                     ?_interleave:
   534                           	opt stack 0
   535  000001                     ?_maskBar:
   536                           	opt stack 0
   537  000001                     ?_maskDot:
   538                           	opt stack 0
   539  000001                     ?_reverse:
   540                           	opt stack 0
   541  000001                     interleave@red:
   542                           	opt stack 0
   543  000001                     SPI1_write@d:
   544                           	opt stack 0
   545  000001                     maskBar@a:
   546                           	opt stack 0
   547  000001                     maskDot@a:
   548                           	opt stack 0
   549  000001                     reverse@v:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x0
   553  000001                     	ds	1
   554  000002                     interleave@grn:
   555                           	opt stack 0
   556  000002                     SPI1_write@TempVar:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x1
   560  000002                     	ds	1
   561  000003                     ??_interleave:
   562  000003                     ??_reverse:
   563  000003                     ?_write_LEDs:
   564                           	opt stack 0
   565  000003                     maskBar@leds:
   566                           	opt stack 0
   567  000003                     maskDot@leds:
   568                           	opt stack 0
   569  000003                     write_LEDs@leds:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x2
   573  000003                     	ds	1
   574  000004                     ISR_ADC@tmp:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x3
   578  000004                     	ds	1
   579  000005                     ??_maskBar:
   580  000005                     ??_maskDot:
   581  000005                     ??_write_LEDs:
   582  000005                     reverse@r:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x4
   586  000005                     	ds	1
   587  000006                     write_LEDs@lo8:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x5
   591  000006                     	ds	1
   592  000007                     write_LEDs@hi8:
   593                           	opt stack 0
   594  000007                     reverse@s:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x6
   598  000007                     	ds	1
   599  000008                     interleave@bitnum:
   600                           	opt stack 0
   601  000008                     maskBar@mask:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x7
   605  000008                     	ds	2
   606  00000A                     interleave@leds:
   607                           	opt stack 0
   608  00000A                     maskBar@bitnum:
   609                           	opt stack 0
   610  00000A                     maskDot@bitnum:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x9
   614  00000A                     	ds	2
   615  00000C                     interleave@mask:
   616                           	opt stack 0
   617  00000C                     maskDot@mask:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0xB
   621  00000C                     	ds	2
   622  00000E                     interleave@i:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0xD
   626  00000E                     	ds	2
   627  000010                     ??_ISR_ECCP1:
   628                           
   629                           ; 0 bytes @ 0xF
   630  000010                     	ds	1
   631  000011                     ISR_ECCP1@red:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x10
   635  000011                     	ds	1
   636  000012                     ISR_ECCP1@grn:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x11
   640  000012                     	ds	1
   641  000013                     ISR_ECCP1@leds:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x12
   645  000013                     	ds	2
   646  000015                     ??_ISR_All:
   647                           
   648                           ; 0 bytes @ 0x14
   649  000015                     	ds	14
   650  000023                     ??_TLC59281_init:
   651  000023                     ??_SPI1_init:
   652  000023                     ??_strncpy:
   653  000023                     ?_sm16x16:
   654                           	opt stack 0
   655  000023                     ?_makeInt24:
   656                           	opt stack 0
   657  000023                     sm16x16@a:
   658                           	opt stack 0
   659  000023                     makeInt24@p:
   660                           	opt stack 0
   661  000023                     ___lmul@product:
   662                           	opt stack 0
   663                           
   664                           ; 4 bytes @ 0x22
   665  000023                     	ds	2
   666  000025                     sm16x16@b:
   667                           	opt stack 0
   668  000025                     strncpy@cp:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x24
   672  000025                     	ds	2
   673  000027                     tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           postinc0	equ	0xFEE
   678                           wreg	equ	0xFE8
   679                           postdec1	equ	0xFE5
   680                           fsr1l	equ	0xFE1
   681                           
   682                           ; 0 bytes @ 0x26
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 61 in file "../main.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  argc            2    0[BANK1 ] int 
   691 ;;  argv            3    2[BANK1 ] PTR PTR unsigned char 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  z               4    9[BANK1 ] long 
   694 ;;  y               2   15[BANK1 ] int 
   695 ;;  x               2   13[BANK1 ] int 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  2    0[BANK1 ] int 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   705 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   706 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   707 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   708 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   709 ;;Total ram usage:       17 bytes
   710 ;; Hardware stack levels required when called:    6
   711 ;; This function calls:
   712 ;;		_OSC_init
   713 ;;		_ADC_init
   714 ;;		_Timer1_init
   715 ;;		_Timer3_init
   716 ;;		_ECCP1_init
   717 ;;		_ECCP2_init
   718 ;;		_TLC59281_init
   719 ;;		_SPI1_init
   720 ;;		_MeterChannel_init
   721 ;;		_ProcessAC
   722 ;;		_log2fix
   723 ;;		_sm16x16
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text0
   730  000F12                     __ptext0:
   731                           	opt stack 0
   732  000F12                     _main:
   733                           	opt stack 25
   734                           
   735                           ;main.c: 65: OSC_init();
   736                           
   737                           ;incstack = 0
   738                           ;incstack = 0
   739  000F12  ECF9  F013         	call	_OSC_init	;wreg free
   740                           
   741                           ;main.c: 66: ADC_init();
   742  000F16  EC35  F013         	call	_ADC_init	;wreg free
   743                           
   744                           ;main.c: 67: Timer1_init();
   745  000F1A  EC64  F014         	call	_Timer1_init	;wreg free
   746                           
   747                           ;main.c: 68: Timer3_init();
   748  000F1E  EC53  F014         	call	_Timer3_init	;wreg free
   749                           
   750                           ;main.c: 69: ECCP1_init();
   751  000F22  EC3E  F014         	call	_ECCP1_init	;wreg free
   752                           
   753                           ;main.c: 70: ECCP2_init();
   754  000F26  EC28  F014         	call	_ECCP2_init	;wreg free
   755                           
   756                           ;main.c: 71: TLC59281_init();
   757  000F2A  ECCB  F011         	call	_TLC59281_init	;wreg free
   758                           
   759                           ;main.c: 72: SPI1_init();
   760  000F2E  EC12  F014         	call	_SPI1_init	;wreg free
   761                           
   762                           ;main.c: 73: MeterChannel_init(&ChnlA);
   763  000F32  0100               	movlb	0	; () banked
   764  000F34  0E00               	movlw	high _ChnlA
   765  000F36  0100               	movlb	0	; () banked
   766  000F38  0100               	movlb	0	; () banked
   767  000F3A  6FC1               	movwf	(?_MeterChannel_init+1)& (0+255),b
   768  000F3C  0100               	movlb	0	; () banked
   769  000F3E  0E60               	movlw	low _ChnlA
   770  000F40  0100               	movlb	0	; () banked
   771  000F42  6FC0               	movwf	?_MeterChannel_init& (0+255),b
   772  000F44  EC72  F00E         	call	_MeterChannel_init	;wreg free
   773                           
   774                           ;main.c: 74: MeterChannel_init(&ChnlB);
   775  000F48  0100               	movlb	0	; () banked
   776  000F4A  0E00               	movlw	high _ChnlB
   777  000F4C  0100               	movlb	0	; () banked
   778  000F4E  0100               	movlb	0	; () banked
   779  000F50  6FC1               	movwf	(?_MeterChannel_init+1)& (0+255),b
   780  000F52  0100               	movlb	0	; () banked
   781  000F54  0E8D               	movlw	low _ChnlB
   782  000F56  0100               	movlb	0	; () banked
   783  000F58  6FC0               	movwf	?_MeterChannel_init& (0+255),b
   784  000F5A  EC72  F00E         	call	_MeterChannel_init	;wreg free
   785                           
   786                           ;main.c: 76: INTCONbits.GIE = 1;
   787  000F5E  8EF2               	bsf	intcon,7,c	;volatile
   788                           
   789                           ;main.c: 77: INTCONbits.PEIE = 1;
   790  000F60  8CF2               	bsf	intcon,6,c	;volatile
   791                           
   792                           ;main.c: 79: int16_t x = 0;
   793  000F62  0E00               	movlw	0
   794  000F64  0101               	movlb	1	; () banked
   795  000F66  0101               	movlb	1	; () banked
   796  000F68  6FCE               	movwf	(main@x+1)& (0+255),b
   797  000F6A  0E00               	movlw	0
   798  000F6C  0101               	movlb	1	; () banked
   799  000F6E  6FCD               	movwf	main@x& (0+255),b
   800                           
   801                           ; BSR set to: 1
   802                           ;main.c: 80: int16_t y = 0;
   803  000F70  0E00               	movlw	0
   804  000F72  0101               	movlb	1	; () banked
   805  000F74  0101               	movlb	1	; () banked
   806  000F76  6FD0               	movwf	(main@y+1)& (0+255),b
   807  000F78  0E00               	movlw	0
   808  000F7A  0101               	movlb	1	; () banked
   809  000F7C  6FCF               	movwf	main@y& (0+255),b
   810                           
   811                           ; BSR set to: 1
   812                           ;main.c: 81: int32_t z = 0;
   813  000F7E  0E00               	movlw	0
   814  000F80  0101               	movlb	1	; () banked
   815  000F82  0101               	movlb	1	; () banked
   816  000F84  6FC9               	movwf	main@z& (0+255),b
   817  000F86  0E00               	movlw	0
   818  000F88  0101               	movlb	1	; () banked
   819  000F8A  6FCA               	movwf	(main@z+1)& (0+255),b
   820  000F8C  0E00               	movlw	0
   821  000F8E  0101               	movlb	1	; () banked
   822  000F90  6FCB               	movwf	(main@z+2)& (0+255),b
   823  000F92  0E00               	movlw	0
   824  000F94  0101               	movlb	1	; () banked
   825  000F96  6FCC               	movwf	(main@z+3)& (0+255),b
   826  000F98                     l2256:
   827                           
   828                           ;main.c: 87: if(buffer_full) {
   829  000F98  5032               	movf	_buffer_full,w,c
   830  000F9A  B4D8               	btfsc	status,2,c
   831  000F9C  D7FD               	goto	l2256
   832                           
   833                           ;main.c: 88: if(buffer_num) {
   834  000F9E  5033               	movf	_buffer_num,w,c
   835  000FA0  B4D8               	btfsc	status,2,c
   836  000FA2  D03B               	goto	l2262
   837                           
   838                           ;main.c: 89: ProcessAC(&BufferA[3][0], &BufferA[0][0], &ChnlA);
   839  000FA4  0101               	movlb	1	; () banked
   840  000FA6  0E01               	movlw	high (_BufferA+48)
   841  000FA8  0100               	movlb	0	; () banked
   842  000FAA  0100               	movlb	0	; () banked
   843  000FAC  6FC7               	movwf	(?_ProcessAC+1)& (0+255),b
   844  000FAE  0101               	movlb	1	; () banked
   845  000FB0  0E30               	movlw	low (_BufferA+48)
   846  000FB2  0100               	movlb	0	; () banked
   847  000FB4  6FC6               	movwf	?_ProcessAC& (0+255),b
   848  000FB6  0101               	movlb	1	; () banked
   849  000FB8  0E01               	movlw	high _BufferA
   850  000FBA  0100               	movlb	0	; () banked
   851  000FBC  0100               	movlb	0	; () banked
   852  000FBE  6FC9               	movwf	(?_ProcessAC+3)& (0+255),b
   853  000FC0  0101               	movlb	1	; () banked
   854  000FC2  0E00               	movlw	low _BufferA
   855  000FC4  0100               	movlb	0	; () banked
   856  000FC6  6FC8               	movwf	(?_ProcessAC+2)& (0+255),b
   857  000FC8  0100               	movlb	0	; () banked
   858  000FCA  0E00               	movlw	high _ChnlA
   859  000FCC  0100               	movlb	0	; () banked
   860  000FCE  0100               	movlb	0	; () banked
   861  000FD0  6FCB               	movwf	(?_ProcessAC+5)& (0+255),b
   862  000FD2  0100               	movlb	0	; () banked
   863  000FD4  0E60               	movlw	low _ChnlA
   864  000FD6  0100               	movlb	0	; () banked
   865  000FD8  6FCA               	movwf	(?_ProcessAC+4)& (0+255),b
   866  000FDA  ECCC  F00B         	call	_ProcessAC	;wreg free
   867                           
   868                           ;main.c: 90: ProcessAC(&BufferA[5][0], &BufferA[1][0], &ChnlB);
   869  000FDE  0101               	movlb	1	; () banked
   870  000FE0  0E01               	movlw	high (_BufferA+80)
   871  000FE2  0100               	movlb	0	; () banked
   872  000FE4  0100               	movlb	0	; () banked
   873  000FE6  6FC7               	movwf	(?_ProcessAC+1)& (0+255),b
   874  000FE8  0101               	movlb	1	; () banked
   875  000FEA  0E50               	movlw	low (_BufferA+80)
   876  000FEC  0100               	movlb	0	; () banked
   877  000FEE  6FC6               	movwf	?_ProcessAC& (0+255),b
   878  000FF0  0101               	movlb	1	; () banked
   879  000FF2  0E01               	movlw	high (_BufferA+16)
   880  000FF4  0100               	movlb	0	; () banked
   881  000FF6  0100               	movlb	0	; () banked
   882  000FF8  6FC9               	movwf	(?_ProcessAC+3)& (0+255),b
   883  000FFA  0101               	movlb	1	; () banked
   884  000FFC  0E10               	movlw	low (_BufferA+16)
   885  000FFE  0100               	movlb	0	; () banked
   886  001000  6FC8               	movwf	(?_ProcessAC+2)& (0+255),b
   887  001002  0100               	movlb	0	; () banked
   888  001004  0E00               	movlw	high _ChnlB
   889  001006  0100               	movlb	0	; () banked
   890  001008  0100               	movlb	0	; () banked
   891  00100A  6FCB               	movwf	(?_ProcessAC+5)& (0+255),b
   892  00100C  0100               	movlb	0	; () banked
   893  00100E  0E8D               	movlw	low _ChnlB
   894  001010  0100               	movlb	0	; () banked
   895  001012  6FCA               	movwf	(?_ProcessAC+4)& (0+255),b
   896  001014  ECCC  F00B         	call	_ProcessAC	;wreg free
   897                           
   898                           ;main.c: 91: } else {
   899  001018  D03A               	goto	l2264
   900  00101A                     l2262:
   901                           
   902                           ;main.c: 92: ProcessAC(&BufferB[3][0], &BufferB[0][0], &ChnlA);
   903  00101A  0101               	movlb	1	; () banked
   904  00101C  0E01               	movlw	high (_BufferB+48)
   905  00101E  0100               	movlb	0	; () banked
   906  001020  0100               	movlb	0	; () banked
   907  001022  6FC7               	movwf	(?_ProcessAC+1)& (0+255),b
   908  001024  0101               	movlb	1	; () banked
   909  001026  0E90               	movlw	low (_BufferB+48)
   910  001028  0100               	movlb	0	; () banked
   911  00102A  6FC6               	movwf	?_ProcessAC& (0+255),b
   912  00102C  0101               	movlb	1	; () banked
   913  00102E  0E01               	movlw	high _BufferB
   914  001030  0100               	movlb	0	; () banked
   915  001032  0100               	movlb	0	; () banked
   916  001034  6FC9               	movwf	(?_ProcessAC+3)& (0+255),b
   917  001036  0101               	movlb	1	; () banked
   918  001038  0E60               	movlw	low _BufferB
   919  00103A  0100               	movlb	0	; () banked
   920  00103C  6FC8               	movwf	(?_ProcessAC+2)& (0+255),b
   921  00103E  0100               	movlb	0	; () banked
   922  001040  0E00               	movlw	high _ChnlA
   923  001042  0100               	movlb	0	; () banked
   924  001044  0100               	movlb	0	; () banked
   925  001046  6FCB               	movwf	(?_ProcessAC+5)& (0+255),b
   926  001048  0100               	movlb	0	; () banked
   927  00104A  0E60               	movlw	low _ChnlA
   928  00104C  0100               	movlb	0	; () banked
   929  00104E  6FCA               	movwf	(?_ProcessAC+4)& (0+255),b
   930  001050  ECCC  F00B         	call	_ProcessAC	;wreg free
   931                           
   932                           ;main.c: 93: ProcessAC(&BufferB[5][0], &BufferB[1][0], &ChnlB);
   933  001054  0101               	movlb	1	; () banked
   934  001056  0E01               	movlw	high (_BufferB+80)
   935  001058  0100               	movlb	0	; () banked
   936  00105A  0100               	movlb	0	; () banked
   937  00105C  6FC7               	movwf	(?_ProcessAC+1)& (0+255),b
   938  00105E  0101               	movlb	1	; () banked
   939  001060  0EB0               	movlw	low (_BufferB+80)
   940  001062  0100               	movlb	0	; () banked
   941  001064  6FC6               	movwf	?_ProcessAC& (0+255),b
   942  001066  0101               	movlb	1	; () banked
   943  001068  0E01               	movlw	high (_BufferB+16)
   944  00106A  0100               	movlb	0	; () banked
   945  00106C  0100               	movlb	0	; () banked
   946  00106E  6FC9               	movwf	(?_ProcessAC+3)& (0+255),b
   947  001070  0101               	movlb	1	; () banked
   948  001072  0E70               	movlw	low (_BufferB+16)
   949  001074  0100               	movlb	0	; () banked
   950  001076  6FC8               	movwf	(?_ProcessAC+2)& (0+255),b
   951  001078  0100               	movlb	0	; () banked
   952  00107A  0E00               	movlw	high _ChnlB
   953  00107C  0100               	movlb	0	; () banked
   954  00107E  0100               	movlb	0	; () banked
   955  001080  6FCB               	movwf	(?_ProcessAC+5)& (0+255),b
   956  001082  0100               	movlb	0	; () banked
   957  001084  0E8D               	movlw	low _ChnlB
   958  001086  0100               	movlb	0	; () banked
   959  001088  6FCA               	movwf	(?_ProcessAC+4)& (0+255),b
   960  00108A  ECCC  F00B         	call	_ProcessAC	;wreg free
   961  00108E                     l2264:
   962                           
   963                           ;main.c: 94: }
   964                           ;main.c: 96: if(ChnlA.nAVG > 0) {
   965  00108E  0100               	movlb	0	; () banked
   966  001090  0100               	movlb	0	; () banked
   967  001092  5163               	movf	(_ChnlA+3)& (0+255),w,b
   968  001094  1160               	iorwf	_ChnlA& (0+255),w,b
   969  001096  1161               	iorwf	(_ChnlA+1)& (0+255),w,b
   970  001098  1162               	iorwf	(_ChnlA+2)& (0+255),w,b
   971  00109A  B4D8               	btfsc	status,2,c
   972  00109C  D03A               	goto	l2272
   973                           
   974                           ; BSR set to: 0
   975                           ;main.c: 97: x = log2fix((ChnlA.nAVG << 8), 8);
   976  00109E  0100               	movlb	0	; () banked
   977  0010A0  C060  F1C6         	movff	_ChnlA,??_main+1
   978  0010A4  0100               	movlb	0	; () banked
   979  0010A6  C061  F1C7         	movff	_ChnlA+1,??_main+2
   980  0010AA  0100               	movlb	0	; () banked
   981  0010AC  C062  F1C8         	movff	_ChnlA+2,??_main+3
   982  0010B0  0101               	movlb	1	; () banked
   983  0010B2  6BC5               	clrf	??_main& (0+255),b
   984  0010B4  C1C8  F0C5         	movff	??_main+3,?_log2fix+3
   985  0010B8  C1C7  F0C4         	movff	??_main+2,?_log2fix+2
   986  0010BC  C1C6  F0C3         	movff	??_main+1,?_log2fix+1
   987  0010C0  C1C5  F0C2         	movff	??_main,?_log2fix
   988  0010C4  0E00               	movlw	0
   989  0010C6  0100               	movlb	0	; () banked
   990  0010C8  0100               	movlb	0	; () banked
   991  0010CA  6FC7               	movwf	(?_log2fix+5)& (0+255),b
   992  0010CC  0E08               	movlw	8
   993  0010CE  0100               	movlb	0	; () banked
   994  0010D0  6FC6               	movwf	(?_log2fix+4)& (0+255),b
   995  0010D2  EC16  F00A         	call	_log2fix	;wreg free
   996  0010D6  C0C2  F1CD         	movff	?_log2fix,main@x
   997  0010DA  C0C3  F1CE         	movff	?_log2fix+1,main@x+1
   998                           
   999                           ;main.c: 98: y = (uint16_t)0x0302;
  1000  0010DE  0E03               	movlw	3
  1001  0010E0  0101               	movlb	1	; () banked
  1002  0010E2  0101               	movlb	1	; () banked
  1003  0010E4  6FD0               	movwf	(main@y+1)& (0+255),b
  1004  0010E6  0E02               	movlw	2
  1005  0010E8  0101               	movlb	1	; () banked
  1006  0010EA  6FCF               	movwf	main@y& (0+255),b
  1007                           
  1008                           ; BSR set to: 1
  1009                           ;main.c: 99: ChnlA.dBAVG = sm16x16(x, y);
  1010  0010EC  C1CD  F023         	movff	main@x,?_sm16x16
  1011  0010F0  C1CE  F024         	movff	main@x+1,?_sm16x16+1
  1012  0010F4  C1CF  F025         	movff	main@y,?_sm16x16+2
  1013  0010F8  C1D0  F026         	movff	main@y+1,?_sm16x16+3
  1014  0010FC  EC26  F012         	call	_sm16x16	;wreg free
  1015  001100  C026  F067         	movff	?_sm16x16+3,_ChnlA+7
  1016  001104  C025  F066         	movff	?_sm16x16+2,_ChnlA+6
  1017  001108  C024  F065         	movff	?_sm16x16+1,_ChnlA+5
  1018  00110C  C023  F064         	movff	?_sm16x16,_ChnlA+4
  1019                           
  1020                           ;main.c: 100: } else {
  1021  001110  D00D               	goto	l2274
  1022  001112                     l2272:
  1023                           
  1024                           ;main.c: 101: ChnlA.dBAVG = 0;
  1025  001112  0E00               	movlw	0
  1026  001114  0100               	movlb	0	; () banked
  1027  001116  0100               	movlb	0	; () banked
  1028  001118  6F64               	movwf	(_ChnlA+4)& (0+255),b
  1029  00111A  0E00               	movlw	0
  1030  00111C  0100               	movlb	0	; () banked
  1031  00111E  6F65               	movwf	(_ChnlA+5)& (0+255),b
  1032  001120  0E00               	movlw	0
  1033  001122  0100               	movlb	0	; () banked
  1034  001124  6F66               	movwf	(_ChnlA+6)& (0+255),b
  1035  001126  0E00               	movlw	0
  1036  001128  0100               	movlb	0	; () banked
  1037  00112A  6F67               	movwf	(_ChnlA+7)& (0+255),b
  1038  00112C                     l2274:
  1039                           
  1040                           ;main.c: 102: }
  1041                           ;main.c: 103: x = (int16_t)(ChnlA.dBAVG >> 8);
  1042  00112C  C065  F1CD         	movff	_ChnlA+5,main@x
  1043  001130  C066  F1CE         	movff	_ChnlA+6,main@x+1
  1044                           
  1045                           ;main.c: 104: y = (int16_t)0x001F;
  1046  001134  0E00               	movlw	0
  1047  001136  0101               	movlb	1	; () banked
  1048  001138  0101               	movlb	1	; () banked
  1049  00113A  6FD0               	movwf	(main@y+1)& (0+255),b
  1050  00113C  0E1F               	movlw	31
  1051  00113E  0101               	movlb	1	; () banked
  1052  001140  6FCF               	movwf	main@y& (0+255),b
  1053                           
  1054                           ; BSR set to: 1
  1055                           ;main.c: 105: z = sm16x16(x, y);
  1056  001142  C1CD  F023         	movff	main@x,?_sm16x16
  1057  001146  C1CE  F024         	movff	main@x+1,?_sm16x16+1
  1058  00114A  C1CF  F025         	movff	main@y,?_sm16x16+2
  1059  00114E  C1D0  F026         	movff	main@y+1,?_sm16x16+3
  1060  001152  EC26  F012         	call	_sm16x16	;wreg free
  1061  001156  C026  F1CC         	movff	?_sm16x16+3,main@z+3
  1062  00115A  C025  F1CB         	movff	?_sm16x16+2,main@z+2
  1063  00115E  C024  F1CA         	movff	?_sm16x16+1,main@z+1
  1064  001162  C023  F1C9         	movff	?_sm16x16,main@z
  1065                           
  1066                           ;main.c: 106: ChnlA.nBar = z >> 16;
  1067  001166  C1CB  F070         	movff	main@z+2,_ChnlA+16
  1068                           
  1069                           ;main.c: 109: if(ChnlA.nPeak > 0) {
  1070  00116A  0100               	movlb	0	; () banked
  1071  00116C  0100               	movlb	0	; () banked
  1072  00116E  516B               	movf	(_ChnlA+11)& (0+255),w,b
  1073  001170  1168               	iorwf	(_ChnlA+8)& (0+255),w,b
  1074  001172  1169               	iorwf	(_ChnlA+9)& (0+255),w,b
  1075  001174  116A               	iorwf	(_ChnlA+10)& (0+255),w,b
  1076  001176  B4D8               	btfsc	status,2,c
  1077  001178  D03A               	goto	l2288
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;main.c: 110: x = log2fix((ChnlA.nPeak << 8), 8);
  1081  00117A  0100               	movlb	0	; () banked
  1082  00117C  C068  F1C6         	movff	_ChnlA+8,??_main+1
  1083  001180  0100               	movlb	0	; () banked
  1084  001182  C069  F1C7         	movff	_ChnlA+9,??_main+2
  1085  001186  0100               	movlb	0	; () banked
  1086  001188  C06A  F1C8         	movff	_ChnlA+10,??_main+3
  1087  00118C  0101               	movlb	1	; () banked
  1088  00118E  6BC5               	clrf	??_main& (0+255),b
  1089  001190  C1C8  F0C5         	movff	??_main+3,?_log2fix+3
  1090  001194  C1C7  F0C4         	movff	??_main+2,?_log2fix+2
  1091  001198  C1C6  F0C3         	movff	??_main+1,?_log2fix+1
  1092  00119C  C1C5  F0C2         	movff	??_main,?_log2fix
  1093  0011A0  0E00               	movlw	0
  1094  0011A2  0100               	movlb	0	; () banked
  1095  0011A4  0100               	movlb	0	; () banked
  1096  0011A6  6FC7               	movwf	(?_log2fix+5)& (0+255),b
  1097  0011A8  0E08               	movlw	8
  1098  0011AA  0100               	movlb	0	; () banked
  1099  0011AC  6FC6               	movwf	(?_log2fix+4)& (0+255),b
  1100  0011AE  EC16  F00A         	call	_log2fix	;wreg free
  1101  0011B2  C0C2  F1CD         	movff	?_log2fix,main@x
  1102  0011B6  C0C3  F1CE         	movff	?_log2fix+1,main@x+1
  1103                           
  1104                           ;main.c: 111: y = (uint16_t)0x0302;
  1105  0011BA  0E03               	movlw	3
  1106  0011BC  0101               	movlb	1	; () banked
  1107  0011BE  0101               	movlb	1	; () banked
  1108  0011C0  6FD0               	movwf	(main@y+1)& (0+255),b
  1109  0011C2  0E02               	movlw	2
  1110  0011C4  0101               	movlb	1	; () banked
  1111  0011C6  6FCF               	movwf	main@y& (0+255),b
  1112                           
  1113                           ; BSR set to: 1
  1114                           ;main.c: 112: ChnlA.dBPeak = sm16x16(x, y);
  1115  0011C8  C1CD  F023         	movff	main@x,?_sm16x16
  1116  0011CC  C1CE  F024         	movff	main@x+1,?_sm16x16+1
  1117  0011D0  C1CF  F025         	movff	main@y,?_sm16x16+2
  1118  0011D4  C1D0  F026         	movff	main@y+1,?_sm16x16+3
  1119  0011D8  EC26  F012         	call	_sm16x16	;wreg free
  1120  0011DC  C026  F06F         	movff	?_sm16x16+3,_ChnlA+15
  1121  0011E0  C025  F06E         	movff	?_sm16x16+2,_ChnlA+14
  1122  0011E4  C024  F06D         	movff	?_sm16x16+1,_ChnlA+13
  1123  0011E8  C023  F06C         	movff	?_sm16x16,_ChnlA+12
  1124                           
  1125                           ;main.c: 113: } else {
  1126  0011EC  D00D               	goto	l2290
  1127  0011EE                     l2288:
  1128                           
  1129                           ;main.c: 114: ChnlA.dBPeak = 0;
  1130  0011EE  0E00               	movlw	0
  1131  0011F0  0100               	movlb	0	; () banked
  1132  0011F2  0100               	movlb	0	; () banked
  1133  0011F4  6F6C               	movwf	(_ChnlA+12)& (0+255),b
  1134  0011F6  0E00               	movlw	0
  1135  0011F8  0100               	movlb	0	; () banked
  1136  0011FA  6F6D               	movwf	(_ChnlA+13)& (0+255),b
  1137  0011FC  0E00               	movlw	0
  1138  0011FE  0100               	movlb	0	; () banked
  1139  001200  6F6E               	movwf	(_ChnlA+14)& (0+255),b
  1140  001202  0E00               	movlw	0
  1141  001204  0100               	movlb	0	; () banked
  1142  001206  6F6F               	movwf	(_ChnlA+15)& (0+255),b
  1143  001208                     l2290:
  1144                           
  1145                           ;main.c: 115: }
  1146                           ;main.c: 116: x = (int16_t)(ChnlA.dBPeak >> 8);
  1147  001208  C06D  F1CD         	movff	_ChnlA+13,main@x
  1148  00120C  C06E  F1CE         	movff	_ChnlA+14,main@x+1
  1149                           
  1150                           ;main.c: 117: y = (int16_t)0x001F;
  1151  001210  0E00               	movlw	0
  1152  001212  0101               	movlb	1	; () banked
  1153  001214  0101               	movlb	1	; () banked
  1154  001216  6FD0               	movwf	(main@y+1)& (0+255),b
  1155  001218  0E1F               	movlw	31
  1156  00121A  0101               	movlb	1	; () banked
  1157  00121C  6FCF               	movwf	main@y& (0+255),b
  1158                           
  1159                           ; BSR set to: 1
  1160                           ;main.c: 118: z = sm16x16(x, y);
  1161  00121E  C1CD  F023         	movff	main@x,?_sm16x16
  1162  001222  C1CE  F024         	movff	main@x+1,?_sm16x16+1
  1163  001226  C1CF  F025         	movff	main@y,?_sm16x16+2
  1164  00122A  C1D0  F026         	movff	main@y+1,?_sm16x16+3
  1165  00122E  EC26  F012         	call	_sm16x16	;wreg free
  1166  001232  C026  F1CC         	movff	?_sm16x16+3,main@z+3
  1167  001236  C025  F1CB         	movff	?_sm16x16+2,main@z+2
  1168  00123A  C024  F1CA         	movff	?_sm16x16+1,main@z+1
  1169  00123E  C023  F1C9         	movff	?_sm16x16,main@z
  1170                           
  1171                           ;main.c: 119: ChnlA.nDot = z >> 16;
  1172  001242  C1CB  F071         	movff	main@z+2,_ChnlA+17
  1173                           
  1174                           ;main.c: 122: if(ChnlB.nAVG > 0) {
  1175  001246  0100               	movlb	0	; () banked
  1176  001248  0100               	movlb	0	; () banked
  1177  00124A  5190               	movf	(_ChnlB+3)& (0+255),w,b
  1178  00124C  118D               	iorwf	_ChnlB& (0+255),w,b
  1179  00124E  118E               	iorwf	(_ChnlB+1)& (0+255),w,b
  1180  001250  118F               	iorwf	(_ChnlB+2)& (0+255),w,b
  1181  001252  B4D8               	btfsc	status,2,c
  1182  001254  D03A               	goto	l2304
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;main.c: 123: x = log2fix((ChnlB.nAVG << 8), 8);
  1186  001256  0100               	movlb	0	; () banked
  1187  001258  C08D  F1C6         	movff	_ChnlB,??_main+1
  1188  00125C  0100               	movlb	0	; () banked
  1189  00125E  C08E  F1C7         	movff	_ChnlB+1,??_main+2
  1190  001262  0100               	movlb	0	; () banked
  1191  001264  C08F  F1C8         	movff	_ChnlB+2,??_main+3
  1192  001268  0101               	movlb	1	; () banked
  1193  00126A  6BC5               	clrf	??_main& (0+255),b
  1194  00126C  C1C8  F0C5         	movff	??_main+3,?_log2fix+3
  1195  001270  C1C7  F0C4         	movff	??_main+2,?_log2fix+2
  1196  001274  C1C6  F0C3         	movff	??_main+1,?_log2fix+1
  1197  001278  C1C5  F0C2         	movff	??_main,?_log2fix
  1198  00127C  0E00               	movlw	0
  1199  00127E  0100               	movlb	0	; () banked
  1200  001280  0100               	movlb	0	; () banked
  1201  001282  6FC7               	movwf	(?_log2fix+5)& (0+255),b
  1202  001284  0E08               	movlw	8
  1203  001286  0100               	movlb	0	; () banked
  1204  001288  6FC6               	movwf	(?_log2fix+4)& (0+255),b
  1205  00128A  EC16  F00A         	call	_log2fix	;wreg free
  1206  00128E  C0C2  F1CD         	movff	?_log2fix,main@x
  1207  001292  C0C3  F1CE         	movff	?_log2fix+1,main@x+1
  1208                           
  1209                           ;main.c: 124: y = (uint16_t)0x0302;
  1210  001296  0E03               	movlw	3
  1211  001298  0101               	movlb	1	; () banked
  1212  00129A  0101               	movlb	1	; () banked
  1213  00129C  6FD0               	movwf	(main@y+1)& (0+255),b
  1214  00129E  0E02               	movlw	2
  1215  0012A0  0101               	movlb	1	; () banked
  1216  0012A2  6FCF               	movwf	main@y& (0+255),b
  1217                           
  1218                           ; BSR set to: 1
  1219                           ;main.c: 125: ChnlB.dBAVG = sm16x16(x, y);
  1220  0012A4  C1CD  F023         	movff	main@x,?_sm16x16
  1221  0012A8  C1CE  F024         	movff	main@x+1,?_sm16x16+1
  1222  0012AC  C1CF  F025         	movff	main@y,?_sm16x16+2
  1223  0012B0  C1D0  F026         	movff	main@y+1,?_sm16x16+3
  1224  0012B4  EC26  F012         	call	_sm16x16	;wreg free
  1225  0012B8  C026  F094         	movff	?_sm16x16+3,_ChnlB+7
  1226  0012BC  C025  F093         	movff	?_sm16x16+2,_ChnlB+6
  1227  0012C0  C024  F092         	movff	?_sm16x16+1,_ChnlB+5
  1228  0012C4  C023  F091         	movff	?_sm16x16,_ChnlB+4
  1229                           
  1230                           ;main.c: 126: } else {
  1231  0012C8  D00D               	goto	l2306
  1232  0012CA                     l2304:
  1233                           
  1234                           ;main.c: 127: ChnlB.dBAVG = 0;
  1235  0012CA  0E00               	movlw	0
  1236  0012CC  0100               	movlb	0	; () banked
  1237  0012CE  0100               	movlb	0	; () banked
  1238  0012D0  6F91               	movwf	(_ChnlB+4)& (0+255),b
  1239  0012D2  0E00               	movlw	0
  1240  0012D4  0100               	movlb	0	; () banked
  1241  0012D6  6F92               	movwf	(_ChnlB+5)& (0+255),b
  1242  0012D8  0E00               	movlw	0
  1243  0012DA  0100               	movlb	0	; () banked
  1244  0012DC  6F93               	movwf	(_ChnlB+6)& (0+255),b
  1245  0012DE  0E00               	movlw	0
  1246  0012E0  0100               	movlb	0	; () banked
  1247  0012E2  6F94               	movwf	(_ChnlB+7)& (0+255),b
  1248  0012E4                     l2306:
  1249                           
  1250                           ;main.c: 128: }
  1251                           ;main.c: 129: x = (int16_t)(ChnlB.dBAVG >> 8);
  1252  0012E4  C092  F1CD         	movff	_ChnlB+5,main@x
  1253  0012E8  C093  F1CE         	movff	_ChnlB+6,main@x+1
  1254                           
  1255                           ;main.c: 130: y = (int16_t)0x001F;
  1256  0012EC  0E00               	movlw	0
  1257  0012EE  0101               	movlb	1	; () banked
  1258  0012F0  0101               	movlb	1	; () banked
  1259  0012F2  6FD0               	movwf	(main@y+1)& (0+255),b
  1260  0012F4  0E1F               	movlw	31
  1261  0012F6  0101               	movlb	1	; () banked
  1262  0012F8  6FCF               	movwf	main@y& (0+255),b
  1263                           
  1264                           ; BSR set to: 1
  1265                           ;main.c: 131: z = sm16x16(x, y);
  1266  0012FA  C1CD  F023         	movff	main@x,?_sm16x16
  1267  0012FE  C1CE  F024         	movff	main@x+1,?_sm16x16+1
  1268  001302  C1CF  F025         	movff	main@y,?_sm16x16+2
  1269  001306  C1D0  F026         	movff	main@y+1,?_sm16x16+3
  1270  00130A  EC26  F012         	call	_sm16x16	;wreg free
  1271  00130E  C026  F1CC         	movff	?_sm16x16+3,main@z+3
  1272  001312  C025  F1CB         	movff	?_sm16x16+2,main@z+2
  1273  001316  C024  F1CA         	movff	?_sm16x16+1,main@z+1
  1274  00131A  C023  F1C9         	movff	?_sm16x16,main@z
  1275                           
  1276                           ;main.c: 132: ChnlB.nBar = z >> 16;
  1277  00131E  C1CB  F09D         	movff	main@z+2,_ChnlB+16
  1278                           
  1279                           ;main.c: 135: if(ChnlB.nPeak > 0) {
  1280  001322  0100               	movlb	0	; () banked
  1281  001324  0100               	movlb	0	; () banked
  1282  001326  5198               	movf	(_ChnlB+11)& (0+255),w,b
  1283  001328  1195               	iorwf	(_ChnlB+8)& (0+255),w,b
  1284  00132A  1196               	iorwf	(_ChnlB+9)& (0+255),w,b
  1285  00132C  1197               	iorwf	(_ChnlB+10)& (0+255),w,b
  1286  00132E  B4D8               	btfsc	status,2,c
  1287  001330  D03A               	goto	l2320
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;main.c: 136: x = log2fix((ChnlB.nPeak << 8), 8);
  1291  001332  0100               	movlb	0	; () banked
  1292  001334  C095  F1C6         	movff	_ChnlB+8,??_main+1
  1293  001338  0100               	movlb	0	; () banked
  1294  00133A  C096  F1C7         	movff	_ChnlB+9,??_main+2
  1295  00133E  0100               	movlb	0	; () banked
  1296  001340  C097  F1C8         	movff	_ChnlB+10,??_main+3
  1297  001344  0101               	movlb	1	; () banked
  1298  001346  6BC5               	clrf	??_main& (0+255),b
  1299  001348  C1C8  F0C5         	movff	??_main+3,?_log2fix+3
  1300  00134C  C1C7  F0C4         	movff	??_main+2,?_log2fix+2
  1301  001350  C1C6  F0C3         	movff	??_main+1,?_log2fix+1
  1302  001354  C1C5  F0C2         	movff	??_main,?_log2fix
  1303  001358  0E00               	movlw	0
  1304  00135A  0100               	movlb	0	; () banked
  1305  00135C  0100               	movlb	0	; () banked
  1306  00135E  6FC7               	movwf	(?_log2fix+5)& (0+255),b
  1307  001360  0E08               	movlw	8
  1308  001362  0100               	movlb	0	; () banked
  1309  001364  6FC6               	movwf	(?_log2fix+4)& (0+255),b
  1310  001366  EC16  F00A         	call	_log2fix	;wreg free
  1311  00136A  C0C2  F1CD         	movff	?_log2fix,main@x
  1312  00136E  C0C3  F1CE         	movff	?_log2fix+1,main@x+1
  1313                           
  1314                           ;main.c: 137: y = (uint16_t)0x0302;
  1315  001372  0E03               	movlw	3
  1316  001374  0101               	movlb	1	; () banked
  1317  001376  0101               	movlb	1	; () banked
  1318  001378  6FD0               	movwf	(main@y+1)& (0+255),b
  1319  00137A  0E02               	movlw	2
  1320  00137C  0101               	movlb	1	; () banked
  1321  00137E  6FCF               	movwf	main@y& (0+255),b
  1322                           
  1323                           ; BSR set to: 1
  1324                           ;main.c: 138: ChnlB.dBPeak = sm16x16(x, y);
  1325  001380  C1CD  F023         	movff	main@x,?_sm16x16
  1326  001384  C1CE  F024         	movff	main@x+1,?_sm16x16+1
  1327  001388  C1CF  F025         	movff	main@y,?_sm16x16+2
  1328  00138C  C1D0  F026         	movff	main@y+1,?_sm16x16+3
  1329  001390  EC26  F012         	call	_sm16x16	;wreg free
  1330  001394  C026  F09C         	movff	?_sm16x16+3,_ChnlB+15
  1331  001398  C025  F09B         	movff	?_sm16x16+2,_ChnlB+14
  1332  00139C  C024  F09A         	movff	?_sm16x16+1,_ChnlB+13
  1333  0013A0  C023  F099         	movff	?_sm16x16,_ChnlB+12
  1334                           
  1335                           ;main.c: 139: } else {
  1336  0013A4  D00D               	goto	l2322
  1337  0013A6                     l2320:
  1338                           
  1339                           ;main.c: 140: ChnlB.dBPeak = 0;
  1340  0013A6  0E00               	movlw	0
  1341  0013A8  0100               	movlb	0	; () banked
  1342  0013AA  0100               	movlb	0	; () banked
  1343  0013AC  6F99               	movwf	(_ChnlB+12)& (0+255),b
  1344  0013AE  0E00               	movlw	0
  1345  0013B0  0100               	movlb	0	; () banked
  1346  0013B2  6F9A               	movwf	(_ChnlB+13)& (0+255),b
  1347  0013B4  0E00               	movlw	0
  1348  0013B6  0100               	movlb	0	; () banked
  1349  0013B8  6F9B               	movwf	(_ChnlB+14)& (0+255),b
  1350  0013BA  0E00               	movlw	0
  1351  0013BC  0100               	movlb	0	; () banked
  1352  0013BE  6F9C               	movwf	(_ChnlB+15)& (0+255),b
  1353  0013C0                     l2322:
  1354                           
  1355                           ;main.c: 141: }
  1356                           ;main.c: 142: x = (int16_t)(ChnlB.dBPeak >> 8);
  1357  0013C0  C09A  F1CD         	movff	_ChnlB+13,main@x
  1358  0013C4  C09B  F1CE         	movff	_ChnlB+14,main@x+1
  1359                           
  1360                           ;main.c: 143: y = (int16_t)0x001F;
  1361  0013C8  0E00               	movlw	0
  1362  0013CA  0101               	movlb	1	; () banked
  1363  0013CC  0101               	movlb	1	; () banked
  1364  0013CE  6FD0               	movwf	(main@y+1)& (0+255),b
  1365  0013D0  0E1F               	movlw	31
  1366  0013D2  0101               	movlb	1	; () banked
  1367  0013D4  6FCF               	movwf	main@y& (0+255),b
  1368                           
  1369                           ; BSR set to: 1
  1370                           ;main.c: 144: z = sm16x16(x, y);
  1371  0013D6  C1CD  F023         	movff	main@x,?_sm16x16
  1372  0013DA  C1CE  F024         	movff	main@x+1,?_sm16x16+1
  1373  0013DE  C1CF  F025         	movff	main@y,?_sm16x16+2
  1374  0013E2  C1D0  F026         	movff	main@y+1,?_sm16x16+3
  1375  0013E6  EC26  F012         	call	_sm16x16	;wreg free
  1376  0013EA  C026  F1CC         	movff	?_sm16x16+3,main@z+3
  1377  0013EE  C025  F1CB         	movff	?_sm16x16+2,main@z+2
  1378  0013F2  C024  F1CA         	movff	?_sm16x16+1,main@z+1
  1379  0013F6  C023  F1C9         	movff	?_sm16x16,main@z
  1380                           
  1381                           ;main.c: 145: ChnlB.nDot = z >> 16;
  1382  0013FA  C1CB  F09E         	movff	main@z+2,_ChnlB+17
  1383                           
  1384                           ;main.c: 148: buffer_full = 0;
  1385  0013FE  0101               	movlb	1	; () banked
  1386  001400  6FC5               	movwf	??_main& (0+255),b
  1387  001402  0E00               	movlw	0
  1388  001404  6E32               	movwf	_buffer_full,c
  1389  001406  0101               	movlb	1	; () banked
  1390  001408  51C5               	movf	??_main& (0+255),w,b
  1391                           
  1392                           ; BSR set to: 1
  1393                           ;main.c: 149: ChnlA.direction = 0;
  1394  00140A  0101               	movlb	1	; () banked
  1395  00140C  6FC5               	movwf	??_main& (0+255),b
  1396  00140E  0E00               	movlw	0
  1397  001410  0100               	movlb	0	; () banked
  1398  001412  0100               	movlb	0	; () banked
  1399  001414  6F7C               	movwf	(_ChnlA+28)& (0+255),b
  1400  001416  0101               	movlb	1	; () banked
  1401  001418  51C5               	movf	??_main& (0+255),w,b
  1402                           
  1403                           ; BSR set to: 1
  1404                           ;main.c: 150: ChnlB.direction = 0;
  1405  00141A  0101               	movlb	1	; () banked
  1406  00141C  6FC5               	movwf	??_main& (0+255),b
  1407  00141E  0E00               	movlw	0
  1408  001420  0100               	movlb	0	; () banked
  1409  001422  0100               	movlb	0	; () banked
  1410  001424  6FA9               	movwf	(_ChnlB+28)& (0+255),b
  1411  001426  0101               	movlb	1	; () banked
  1412  001428  51C5               	movf	??_main& (0+255),w,b
  1413  00142A  D5B6               	goto	l2256
  1414  00142C                     __end_of_main:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           intcon	equ	0xFF2
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           postdec1	equ	0xFE5
  1424                           fsr1l	equ	0xFE1
  1425                           status	equ	0xFD8
  1426                           
  1427 ;; *************** function _log2fix *****************
  1428 ;; Defined at:
  1429 ;;		line 15 in file "../FixedPoint.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  x               4    8[BANK0 ] unsigned long 
  1432 ;;  precision       2   12[BANK0 ] unsigned int 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  i               2   15[BANK0 ] unsigned int 
  1435 ;;  z               4   17[BANK0 ] unsigned long 
  1436 ;;  scale_1         4   33[BANK0 ] volatile long 
  1437 ;;  scale_2         4   29[BANK0 ] volatile long 
  1438 ;;  y               4   25[BANK0 ] volatile long 
  1439 ;;  b               4   21[BANK0 ] volatile long 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  4    8[BANK0 ] long 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1449 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1450 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1451 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1452 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1453 ;;Total ram usage:       29 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    5
  1456 ;; This function calls:
  1457 ;;		___lmul
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text1
  1464  00142C                     __ptext1:
  1465                           	opt stack 0
  1466  00142C                     _log2fix:
  1467                           	opt stack 25
  1468                           
  1469                           ;FixedPoint.c: 16: volatile int32_t b = 1U;
  1470                           
  1471                           ; BSR set to: 1
  1472                           ;incstack = 0
  1473                           ;incstack = 0
  1474  00142C  0E01               	movlw	1
  1475  00142E  0100               	movlb	0	; () banked
  1476  001430  0100               	movlb	0	; () banked
  1477  001432  6FCF               	movwf	log2fix@b& (0+255),b	;volatile
  1478  001434  0E00               	movlw	0
  1479  001436  0100               	movlb	0	; () banked
  1480  001438  6FD0               	movwf	(log2fix@b+1)& (0+255),b	;volatile
  1481  00143A  0E00               	movlw	0
  1482  00143C  0100               	movlb	0	; () banked
  1483  00143E  6FD1               	movwf	(log2fix@b+2)& (0+255),b	;volatile
  1484  001440  0E00               	movlw	0
  1485  001442  0100               	movlb	0	; () banked
  1486  001444  6FD2               	movwf	(log2fix@b+3)& (0+255),b	;volatile
  1487                           
  1488                           ;FixedPoint.c: 17: volatile int32_t y = 0;
  1489  001446  0E00               	movlw	0
  1490  001448  0100               	movlb	0	; () banked
  1491  00144A  0100               	movlb	0	; () banked
  1492  00144C  6FD3               	movwf	log2fix@y& (0+255),b	;volatile
  1493  00144E  0E00               	movlw	0
  1494  001450  0100               	movlb	0	; () banked
  1495  001452  6FD4               	movwf	(log2fix@y+1)& (0+255),b	;volatile
  1496  001454  0E00               	movlw	0
  1497  001456  0100               	movlb	0	; () banked
  1498  001458  6FD5               	movwf	(log2fix@y+2)& (0+255),b	;volatile
  1499  00145A  0E00               	movlw	0
  1500  00145C  0100               	movlb	0	; () banked
  1501  00145E  6FD6               	movwf	(log2fix@y+3)& (0+255),b	;volatile
  1502                           
  1503                           ;FixedPoint.c: 18: volatile int32_t scale_1 = 1U;
  1504  001460  0E01               	movlw	1
  1505  001462  0100               	movlb	0	; () banked
  1506  001464  0100               	movlb	0	; () banked
  1507  001466  6FDB               	movwf	log2fix@scale_1& (0+255),b	;volatile
  1508  001468  0E00               	movlw	0
  1509  00146A  0100               	movlb	0	; () banked
  1510  00146C  6FDC               	movwf	(log2fix@scale_1+1)& (0+255),b	;volatile
  1511  00146E  0E00               	movlw	0
  1512  001470  0100               	movlb	0	; () banked
  1513  001472  6FDD               	movwf	(log2fix@scale_1+2)& (0+255),b	;volatile
  1514  001474  0E00               	movlw	0
  1515  001476  0100               	movlb	0	; () banked
  1516  001478  6FDE               	movwf	(log2fix@scale_1+3)& (0+255),b	;volatile
  1517                           
  1518                           ;FixedPoint.c: 19: volatile int32_t scale_2 = 2U;
  1519  00147A  0E02               	movlw	2
  1520  00147C  0100               	movlb	0	; () banked
  1521  00147E  0100               	movlb	0	; () banked
  1522  001480  6FD7               	movwf	log2fix@scale_2& (0+255),b	;volatile
  1523  001482  0E00               	movlw	0
  1524  001484  0100               	movlb	0	; () banked
  1525  001486  6FD8               	movwf	(log2fix@scale_2+1)& (0+255),b	;volatile
  1526  001488  0E00               	movlw	0
  1527  00148A  0100               	movlb	0	; () banked
  1528  00148C  6FD9               	movwf	(log2fix@scale_2+2)& (0+255),b	;volatile
  1529  00148E  0E00               	movlw	0
  1530  001490  0100               	movlb	0	; () banked
  1531  001492  6FDA               	movwf	(log2fix@scale_2+3)& (0+255),b	;volatile
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;FixedPoint.c: 21: scale_1 <<= precision;
  1535  001494  0100               	movlb	0	; () banked
  1536  001496  0100               	movlb	0	; () banked
  1537  001498  29C6               	incf	log2fix@precision& (0+255),w,b
  1538  00149A  D00A               	goto	u1920
  1539  00149C                     u1925:
  1540  00149C  90D8               	bcf	status,0,c
  1541  00149E  0100               	movlb	0	; () banked
  1542  0014A0  0100               	movlb	0	; () banked
  1543  0014A2  37DB               	rlcf	log2fix@scale_1& (0+255),f,b	;volatile
  1544  0014A4  0100               	movlb	0	; () banked
  1545  0014A6  37DC               	rlcf	(log2fix@scale_1+1)& (0+255),f,b	;volatile
  1546  0014A8  0100               	movlb	0	; () banked
  1547  0014AA  37DD               	rlcf	(log2fix@scale_1+2)& (0+255),f,b	;volatile
  1548  0014AC  0100               	movlb	0	; () banked
  1549  0014AE  37DE               	rlcf	(log2fix@scale_1+3)& (0+255),f,b	;volatile
  1550  0014B0                     u1920:
  1551  0014B0  2EE8               	decfsz	wreg,f,c
  1552  0014B2  D7F4               	goto	u1925
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;FixedPoint.c: 22: scale_2 <<= precision;
  1556  0014B4  0100               	movlb	0	; () banked
  1557  0014B6  0100               	movlb	0	; () banked
  1558  0014B8  29C6               	incf	log2fix@precision& (0+255),w,b
  1559  0014BA  D00A               	goto	u1930
  1560  0014BC                     u1935:
  1561  0014BC  90D8               	bcf	status,0,c
  1562  0014BE  0100               	movlb	0	; () banked
  1563  0014C0  0100               	movlb	0	; () banked
  1564  0014C2  37D7               	rlcf	log2fix@scale_2& (0+255),f,b	;volatile
  1565  0014C4  0100               	movlb	0	; () banked
  1566  0014C6  37D8               	rlcf	(log2fix@scale_2+1)& (0+255),f,b	;volatile
  1567  0014C8  0100               	movlb	0	; () banked
  1568  0014CA  37D9               	rlcf	(log2fix@scale_2+2)& (0+255),f,b	;volatile
  1569  0014CC  0100               	movlb	0	; () banked
  1570  0014CE  37DA               	rlcf	(log2fix@scale_2+3)& (0+255),f,b	;volatile
  1571  0014D0                     u1930:
  1572  0014D0  2EE8               	decfsz	wreg,f,c
  1573  0014D2  D7F4               	goto	u1935
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;FixedPoint.c: 23: b <<= (precision - 1);
  1577  0014D4  C0C6  F0C8         	movff	log2fix@precision,??_log2fix
  1578  0014D8  0EFF               	movlw	255
  1579  0014DA  0100               	movlb	0	; () banked
  1580  0014DC  27C8               	addwf	??_log2fix& (0+255),f,b
  1581  0014DE  0100               	movlb	0	; () banked
  1582  0014E0  29C8               	incf	??_log2fix& (0+255),w,b
  1583  0014E2  D00A               	goto	u1940
  1584  0014E4                     u1945:
  1585  0014E4  90D8               	bcf	status,0,c
  1586  0014E6  0100               	movlb	0	; () banked
  1587  0014E8  0100               	movlb	0	; () banked
  1588  0014EA  37CF               	rlcf	log2fix@b& (0+255),f,b	;volatile
  1589  0014EC  0100               	movlb	0	; () banked
  1590  0014EE  37D0               	rlcf	(log2fix@b+1)& (0+255),f,b	;volatile
  1591  0014F0  0100               	movlb	0	; () banked
  1592  0014F2  37D1               	rlcf	(log2fix@b+2)& (0+255),f,b	;volatile
  1593  0014F4  0100               	movlb	0	; () banked
  1594  0014F6  37D2               	rlcf	(log2fix@b+3)& (0+255),f,b	;volatile
  1595  0014F8                     u1940:
  1596  0014F8  2EE8               	decfsz	wreg,f,c
  1597  0014FA  D7F4               	goto	u1945
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;FixedPoint.c: 25: if (precision < 1 || precision > 31) {
  1601  0014FC  0100               	movlb	0	; () banked
  1602  0014FE  0100               	movlb	0	; () banked
  1603  001500  51C7               	movf	(log2fix@precision+1)& (0+255),w,b
  1604  001502  11C6               	iorwf	log2fix@precision& (0+255),w,b
  1605  001504  B4D8               	btfsc	status,2,c
  1606  001506  D009               	goto	l2500
  1607                           
  1608                           ; BSR set to: 0
  1609  001508  0E20               	movlw	32
  1610  00150A  0100               	movlb	0	; () banked
  1611  00150C  0100               	movlb	0	; () banked
  1612  00150E  5DC6               	subwf	log2fix@precision& (0+255),w,b
  1613  001510  0E00               	movlw	0
  1614  001512  0100               	movlb	0	; () banked
  1615  001514  59C7               	subwfb	(log2fix@precision+1)& (0+255),w,b
  1616  001516  A0D8               	btfss	status,0,c
  1617  001518  D012               	goto	l2504
  1618  00151A                     l2500:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;FixedPoint.c: 26: errno = 1;
  1622  00151A  0E00               	movlw	0
  1623  00151C  6E30               	movwf	_errno+1,c
  1624  00151E  0E01               	movlw	1
  1625  001520  6E2F               	movwf	_errno,c
  1626                           
  1627                           ;FixedPoint.c: 27: return (2147483647L);
  1628  001522  0EFF               	movlw	255
  1629  001524  0100               	movlb	0	; () banked
  1630  001526  0100               	movlb	0	; () banked
  1631  001528  6FC2               	movwf	?_log2fix& (0+255),b
  1632  00152A  0EFF               	movlw	255
  1633  00152C  0100               	movlb	0	; () banked
  1634  00152E  6FC3               	movwf	(?_log2fix+1)& (0+255),b
  1635  001530  0EFF               	movlw	255
  1636  001532  0100               	movlb	0	; () banked
  1637  001534  6FC4               	movwf	(?_log2fix+2)& (0+255),b
  1638  001536  0E7F               	movlw	127
  1639  001538  0100               	movlb	0	; () banked
  1640  00153A  6FC5               	movwf	(?_log2fix+3)& (0+255),b
  1641  00153C  0012               	return	
  1642  00153E                     l2504:
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;FixedPoint.c: 28: }
  1646                           ;FixedPoint.c: 30: if (x == 0) {
  1647  00153E  0100               	movlb	0	; () banked
  1648  001540  0100               	movlb	0	; () banked
  1649  001542  51C5               	movf	(log2fix@x+3)& (0+255),w,b
  1650  001544  11C2               	iorwf	log2fix@x& (0+255),w,b
  1651  001546  11C3               	iorwf	(log2fix@x+1)& (0+255),w,b
  1652  001548  11C4               	iorwf	(log2fix@x+2)& (0+255),w,b
  1653  00154A  A4D8               	btfss	status,2,c
  1654  00154C  D030               	goto	l2514
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;FixedPoint.c: 31: return (-2147483648L);
  1658  00154E  0E00               	movlw	0
  1659  001550  0100               	movlb	0	; () banked
  1660  001552  0100               	movlb	0	; () banked
  1661  001554  6FC2               	movwf	?_log2fix& (0+255),b
  1662  001556  0E00               	movlw	0
  1663  001558  0100               	movlb	0	; () banked
  1664  00155A  6FC3               	movwf	(?_log2fix+1)& (0+255),b
  1665  00155C  0E00               	movlw	0
  1666  00155E  0100               	movlb	0	; () banked
  1667  001560  6FC4               	movwf	(?_log2fix+2)& (0+255),b
  1668  001562  0E80               	movlw	128
  1669  001564  0100               	movlb	0	; () banked
  1670  001566  6FC5               	movwf	(?_log2fix+3)& (0+255),b
  1671  001568  0012               	return	
  1672  00156A                     l2510:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;FixedPoint.c: 35: x <<= 1;
  1676  00156A  0100               	movlb	0	; () banked
  1677  00156C  90D8               	bcf	status,0,c
  1678  00156E  0100               	movlb	0	; () banked
  1679  001570  37C2               	rlcf	log2fix@x& (0+255),f,b
  1680  001572  0100               	movlb	0	; () banked
  1681  001574  37C3               	rlcf	(log2fix@x+1)& (0+255),f,b
  1682  001576  0100               	movlb	0	; () banked
  1683  001578  37C4               	rlcf	(log2fix@x+2)& (0+255),f,b
  1684  00157A  0100               	movlb	0	; () banked
  1685  00157C  37C5               	rlcf	(log2fix@x+3)& (0+255),f,b
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;FixedPoint.c: 36: y -= scale_1;
  1689  00157E  0100               	movlb	0	; () banked
  1690  001580  0100               	movlb	0	; () banked
  1691  001582  51DB               	movf	log2fix@scale_1& (0+255),w,b	;volatile
  1692  001584  0100               	movlb	0	; () banked
  1693  001586  0100               	movlb	0	; () banked
  1694  001588  5FD3               	subwf	log2fix@y& (0+255),f,b	;volatile
  1695  00158A  0100               	movlb	0	; () banked
  1696  00158C  0100               	movlb	0	; () banked
  1697  00158E  51DC               	movf	(log2fix@scale_1+1)& (0+255),w,b	;volatile
  1698  001590  0100               	movlb	0	; () banked
  1699  001592  0100               	movlb	0	; () banked
  1700  001594  5BD4               	subwfb	(log2fix@y+1)& (0+255),f,b	;volatile
  1701  001596  0100               	movlb	0	; () banked
  1702  001598  0100               	movlb	0	; () banked
  1703  00159A  51DD               	movf	(log2fix@scale_1+2)& (0+255),w,b	;volatile
  1704  00159C  0100               	movlb	0	; () banked
  1705  00159E  0100               	movlb	0	; () banked
  1706  0015A0  5BD5               	subwfb	(log2fix@y+2)& (0+255),f,b	;volatile
  1707  0015A2  0100               	movlb	0	; () banked
  1708  0015A4  0100               	movlb	0	; () banked
  1709  0015A6  51DE               	movf	(log2fix@scale_1+3)& (0+255),w,b	;volatile
  1710  0015A8  0100               	movlb	0	; () banked
  1711  0015AA  0100               	movlb	0	; () banked
  1712  0015AC  5BD6               	subwfb	(log2fix@y+3)& (0+255),f,b	;volatile
  1713  0015AE                     l2514:
  1714                           
  1715                           ; BSR set to: 0
  1716  0015AE  0100               	movlb	0	; () banked
  1717  0015B0  0100               	movlb	0	; () banked
  1718  0015B2  51DB               	movf	log2fix@scale_1& (0+255),w,b	;volatile
  1719  0015B4  0100               	movlb	0	; () banked
  1720  0015B6  0100               	movlb	0	; () banked
  1721  0015B8  5DC2               	subwf	log2fix@x& (0+255),w,b
  1722  0015BA  0100               	movlb	0	; () banked
  1723  0015BC  0100               	movlb	0	; () banked
  1724  0015BE  51DC               	movf	(log2fix@scale_1+1)& (0+255),w,b	;volatile
  1725  0015C0  0100               	movlb	0	; () banked
  1726  0015C2  0100               	movlb	0	; () banked
  1727  0015C4  59C3               	subwfb	(log2fix@x+1)& (0+255),w,b
  1728  0015C6  0100               	movlb	0	; () banked
  1729  0015C8  0100               	movlb	0	; () banked
  1730  0015CA  51DD               	movf	(log2fix@scale_1+2)& (0+255),w,b	;volatile
  1731  0015CC  0100               	movlb	0	; () banked
  1732  0015CE  0100               	movlb	0	; () banked
  1733  0015D0  59C4               	subwfb	(log2fix@x+2)& (0+255),w,b
  1734  0015D2  0100               	movlb	0	; () banked
  1735  0015D4  0100               	movlb	0	; () banked
  1736  0015D6  51DE               	movf	(log2fix@scale_1+3)& (0+255),w,b	;volatile
  1737  0015D8  0100               	movlb	0	; () banked
  1738  0015DA  0100               	movlb	0	; () banked
  1739  0015DC  59C5               	subwfb	(log2fix@x+3)& (0+255),w,b
  1740  0015DE  B0D8               	btfsc	status,0,c
  1741  0015E0  D023               	goto	l2520
  1742  0015E2  D7C3               	goto	l2510
  1743  0015E4                     l2516:
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;FixedPoint.c: 40: x >>= 1;
  1747  0015E4  0100               	movlb	0	; () banked
  1748  0015E6  90D8               	bcf	status,0,c
  1749  0015E8  0100               	movlb	0	; () banked
  1750  0015EA  33C5               	rrcf	(log2fix@x+3)& (0+255),f,b
  1751  0015EC  0100               	movlb	0	; () banked
  1752  0015EE  33C4               	rrcf	(log2fix@x+2)& (0+255),f,b
  1753  0015F0  0100               	movlb	0	; () banked
  1754  0015F2  33C3               	rrcf	(log2fix@x+1)& (0+255),f,b
  1755  0015F4  0100               	movlb	0	; () banked
  1756  0015F6  33C2               	rrcf	log2fix@x& (0+255),f,b
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;FixedPoint.c: 41: y += scale_1;
  1760  0015F8  0100               	movlb	0	; () banked
  1761  0015FA  0100               	movlb	0	; () banked
  1762  0015FC  51DB               	movf	log2fix@scale_1& (0+255),w,b	;volatile
  1763  0015FE  0100               	movlb	0	; () banked
  1764  001600  0100               	movlb	0	; () banked
  1765  001602  27D3               	addwf	log2fix@y& (0+255),f,b	;volatile
  1766  001604  0100               	movlb	0	; () banked
  1767  001606  0100               	movlb	0	; () banked
  1768  001608  51DC               	movf	(log2fix@scale_1+1)& (0+255),w,b	;volatile
  1769  00160A  0100               	movlb	0	; () banked
  1770  00160C  0100               	movlb	0	; () banked
  1771  00160E  23D4               	addwfc	(log2fix@y+1)& (0+255),f,b	;volatile
  1772  001610  0100               	movlb	0	; () banked
  1773  001612  0100               	movlb	0	; () banked
  1774  001614  51DD               	movf	(log2fix@scale_1+2)& (0+255),w,b	;volatile
  1775  001616  0100               	movlb	0	; () banked
  1776  001618  0100               	movlb	0	; () banked
  1777  00161A  23D5               	addwfc	(log2fix@y+2)& (0+255),f,b	;volatile
  1778  00161C  0100               	movlb	0	; () banked
  1779  00161E  0100               	movlb	0	; () banked
  1780  001620  51DE               	movf	(log2fix@scale_1+3)& (0+255),w,b	;volatile
  1781  001622  0100               	movlb	0	; () banked
  1782  001624  0100               	movlb	0	; () banked
  1783  001626  23D6               	addwfc	(log2fix@y+3)& (0+255),f,b	;volatile
  1784  001628                     l2520:
  1785                           
  1786                           ; BSR set to: 0
  1787  001628  0100               	movlb	0	; () banked
  1788  00162A  0100               	movlb	0	; () banked
  1789  00162C  51D7               	movf	log2fix@scale_2& (0+255),w,b	;volatile
  1790  00162E  0100               	movlb	0	; () banked
  1791  001630  0100               	movlb	0	; () banked
  1792  001632  5DC2               	subwf	log2fix@x& (0+255),w,b
  1793  001634  0100               	movlb	0	; () banked
  1794  001636  0100               	movlb	0	; () banked
  1795  001638  51D8               	movf	(log2fix@scale_2+1)& (0+255),w,b	;volatile
  1796  00163A  0100               	movlb	0	; () banked
  1797  00163C  0100               	movlb	0	; () banked
  1798  00163E  59C3               	subwfb	(log2fix@x+1)& (0+255),w,b
  1799  001640  0100               	movlb	0	; () banked
  1800  001642  0100               	movlb	0	; () banked
  1801  001644  51D9               	movf	(log2fix@scale_2+2)& (0+255),w,b	;volatile
  1802  001646  0100               	movlb	0	; () banked
  1803  001648  0100               	movlb	0	; () banked
  1804  00164A  59C4               	subwfb	(log2fix@x+2)& (0+255),w,b
  1805  00164C  0100               	movlb	0	; () banked
  1806  00164E  0100               	movlb	0	; () banked
  1807  001650  51DA               	movf	(log2fix@scale_2+3)& (0+255),w,b	;volatile
  1808  001652  0100               	movlb	0	; () banked
  1809  001654  0100               	movlb	0	; () banked
  1810  001656  59C5               	subwfb	(log2fix@x+3)& (0+255),w,b
  1811  001658  B0D8               	btfsc	status,0,c
  1812  00165A  D7C4               	goto	l2516
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;FixedPoint.c: 42: }
  1816                           ;FixedPoint.c: 44: uint32_t z = x;
  1817  00165C  C0C2  F0CB         	movff	log2fix@x,log2fix@z
  1818  001660  C0C3  F0CC         	movff	log2fix@x+1,log2fix@z+1
  1819  001664  C0C4  F0CD         	movff	log2fix@x+2,log2fix@z+2
  1820  001668  C0C5  F0CE         	movff	log2fix@x+3,log2fix@z+3
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;FixedPoint.c: 46: for (size_t i = 0; i < precision; i++) {
  1824  00166C  0E00               	movlw	0
  1825  00166E  0100               	movlb	0	; () banked
  1826  001670  0100               	movlb	0	; () banked
  1827  001672  6FCA               	movwf	(log2fix@i+1)& (0+255),b
  1828  001674  0E00               	movlw	0
  1829  001676  0100               	movlb	0	; () banked
  1830  001678  6FC9               	movwf	log2fix@i& (0+255),b
  1831  00167A  D077               	goto	l2534
  1832  00167C                     l2524:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;FixedPoint.c: 47: z = z * z >> precision;
  1836  00167C  C0CB  F0BA         	movff	log2fix@z,?___lmul
  1837  001680  C0CC  F0BB         	movff	log2fix@z+1,?___lmul+1
  1838  001684  C0CD  F0BC         	movff	log2fix@z+2,?___lmul+2
  1839  001688  C0CE  F0BD         	movff	log2fix@z+3,?___lmul+3
  1840  00168C  C0CB  F0BE         	movff	log2fix@z,?___lmul+4
  1841  001690  C0CC  F0BF         	movff	log2fix@z+1,?___lmul+5
  1842  001694  C0CD  F0C0         	movff	log2fix@z+2,?___lmul+6
  1843  001698  C0CE  F0C1         	movff	log2fix@z+3,?___lmul+7
  1844  00169C  ECF4  F012         	call	___lmul	;wreg free
  1845  0016A0  0100               	movlb	0	; () banked
  1846  0016A2  0100               	movlb	0	; () banked
  1847  0016A4  51C6               	movf	log2fix@precision& (0+255),w,b
  1848  0016A6  2AE8               	incf	wreg,f,c
  1849  0016A8  D00A               	goto	u2000
  1850  0016AA                     u2005:
  1851  0016AA  0100               	movlb	0	; () banked
  1852  0016AC  0100               	movlb	0	; () banked
  1853  0016AE  0100               	movlb	0	; () banked
  1854  0016B0  90D8               	bcf	status,0,c
  1855  0016B2  33BD               	rrcf	(?___lmul+3)& (0+255),f,b
  1856  0016B4  33BC               	rrcf	(?___lmul+2)& (0+255),f,b
  1857  0016B6  0100               	movlb	0	; () banked
  1858  0016B8  0100               	movlb	0	; () banked
  1859  0016BA  33BB               	rrcf	(?___lmul+1)& (0+255),f,b
  1860  0016BC  33BA               	rrcf	?___lmul& (0+255),f,b
  1861  0016BE                     u2000:
  1862  0016BE  0100               	movlb	0	; () banked
  1863  0016C0  2EE8               	decfsz	wreg,f,c
  1864  0016C2  D7F3               	goto	u2005
  1865  0016C4  C0BD  F0CE         	movff	?___lmul+3,log2fix@z+3
  1866  0016C8  C0BC  F0CD         	movff	?___lmul+2,log2fix@z+2
  1867  0016CC  C0BB  F0CC         	movff	?___lmul+1,log2fix@z+1
  1868  0016D0  C0BA  F0CB         	movff	?___lmul,log2fix@z
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;FixedPoint.c: 48: if (z >= scale_2) {
  1872  0016D4  0100               	movlb	0	; () banked
  1873  0016D6  0100               	movlb	0	; () banked
  1874  0016D8  51D7               	movf	log2fix@scale_2& (0+255),w,b	;volatile
  1875  0016DA  0100               	movlb	0	; () banked
  1876  0016DC  0100               	movlb	0	; () banked
  1877  0016DE  5DCB               	subwf	log2fix@z& (0+255),w,b
  1878  0016E0  0100               	movlb	0	; () banked
  1879  0016E2  0100               	movlb	0	; () banked
  1880  0016E4  51D8               	movf	(log2fix@scale_2+1)& (0+255),w,b	;volatile
  1881  0016E6  0100               	movlb	0	; () banked
  1882  0016E8  0100               	movlb	0	; () banked
  1883  0016EA  59CC               	subwfb	(log2fix@z+1)& (0+255),w,b
  1884  0016EC  0100               	movlb	0	; () banked
  1885  0016EE  0100               	movlb	0	; () banked
  1886  0016F0  51D9               	movf	(log2fix@scale_2+2)& (0+255),w,b	;volatile
  1887  0016F2  0100               	movlb	0	; () banked
  1888  0016F4  0100               	movlb	0	; () banked
  1889  0016F6  59CD               	subwfb	(log2fix@z+2)& (0+255),w,b
  1890  0016F8  0100               	movlb	0	; () banked
  1891  0016FA  0100               	movlb	0	; () banked
  1892  0016FC  51DA               	movf	(log2fix@scale_2+3)& (0+255),w,b	;volatile
  1893  0016FE  0100               	movlb	0	; () banked
  1894  001700  0100               	movlb	0	; () banked
  1895  001702  59CE               	subwfb	(log2fix@z+3)& (0+255),w,b
  1896  001704  A0D8               	btfss	status,0,c
  1897  001706  D022               	goto	l2532
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;FixedPoint.c: 49: z >>= 1;
  1901  001708  0100               	movlb	0	; () banked
  1902  00170A  90D8               	bcf	status,0,c
  1903  00170C  0100               	movlb	0	; () banked
  1904  00170E  33CE               	rrcf	(log2fix@z+3)& (0+255),f,b
  1905  001710  0100               	movlb	0	; () banked
  1906  001712  33CD               	rrcf	(log2fix@z+2)& (0+255),f,b
  1907  001714  0100               	movlb	0	; () banked
  1908  001716  33CC               	rrcf	(log2fix@z+1)& (0+255),f,b
  1909  001718  0100               	movlb	0	; () banked
  1910  00171A  33CB               	rrcf	log2fix@z& (0+255),f,b
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;FixedPoint.c: 50: y += b;
  1914  00171C  0100               	movlb	0	; () banked
  1915  00171E  0100               	movlb	0	; () banked
  1916  001720  51CF               	movf	log2fix@b& (0+255),w,b	;volatile
  1917  001722  0100               	movlb	0	; () banked
  1918  001724  0100               	movlb	0	; () banked
  1919  001726  27D3               	addwf	log2fix@y& (0+255),f,b	;volatile
  1920  001728  0100               	movlb	0	; () banked
  1921  00172A  0100               	movlb	0	; () banked
  1922  00172C  51D0               	movf	(log2fix@b+1)& (0+255),w,b	;volatile
  1923  00172E  0100               	movlb	0	; () banked
  1924  001730  0100               	movlb	0	; () banked
  1925  001732  23D4               	addwfc	(log2fix@y+1)& (0+255),f,b	;volatile
  1926  001734  0100               	movlb	0	; () banked
  1927  001736  0100               	movlb	0	; () banked
  1928  001738  51D1               	movf	(log2fix@b+2)& (0+255),w,b	;volatile
  1929  00173A  0100               	movlb	0	; () banked
  1930  00173C  0100               	movlb	0	; () banked
  1931  00173E  23D5               	addwfc	(log2fix@y+2)& (0+255),f,b	;volatile
  1932  001740  0100               	movlb	0	; () banked
  1933  001742  0100               	movlb	0	; () banked
  1934  001744  51D2               	movf	(log2fix@b+3)& (0+255),w,b	;volatile
  1935  001746  0100               	movlb	0	; () banked
  1936  001748  0100               	movlb	0	; () banked
  1937  00174A  23D6               	addwfc	(log2fix@y+3)& (0+255),f,b	;volatile
  1938  00174C                     l2532:
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;FixedPoint.c: 51: }
  1942                           ;FixedPoint.c: 52: b >>= 1;
  1943  00174C  0100               	movlb	0	; () banked
  1944  00174E  0100               	movlb	0	; () banked
  1945  001750  35D2               	rlcf	(log2fix@b+3)& (0+255),w,b	;volatile
  1946  001752  0100               	movlb	0	; () banked
  1947  001754  33D2               	rrcf	(log2fix@b+3)& (0+255),f,b	;volatile
  1948  001756  0100               	movlb	0	; () banked
  1949  001758  33D1               	rrcf	(log2fix@b+2)& (0+255),f,b	;volatile
  1950  00175A  0100               	movlb	0	; () banked
  1951  00175C  33D0               	rrcf	(log2fix@b+1)& (0+255),f,b	;volatile
  1952  00175E  0100               	movlb	0	; () banked
  1953  001760  33CF               	rrcf	log2fix@b& (0+255),f,b	;volatile
  1954  001762  0100               	movlb	0	; () banked
  1955  001764  0100               	movlb	0	; () banked
  1956  001766  4BC9               	infsnz	log2fix@i& (0+255),f,b
  1957  001768  2BCA               	incf	(log2fix@i+1)& (0+255),f,b
  1958  00176A                     l2534:
  1959                           
  1960                           ; BSR set to: 0
  1961  00176A  0100               	movlb	0	; () banked
  1962  00176C  0100               	movlb	0	; () banked
  1963  00176E  51C6               	movf	log2fix@precision& (0+255),w,b
  1964  001770  0100               	movlb	0	; () banked
  1965  001772  0100               	movlb	0	; () banked
  1966  001774  5DC9               	subwf	log2fix@i& (0+255),w,b
  1967  001776  0100               	movlb	0	; () banked
  1968  001778  0100               	movlb	0	; () banked
  1969  00177A  51C7               	movf	(log2fix@precision+1)& (0+255),w,b
  1970  00177C  0100               	movlb	0	; () banked
  1971  00177E  0100               	movlb	0	; () banked
  1972  001780  59CA               	subwfb	(log2fix@i+1)& (0+255),w,b
  1973  001782  A0D8               	btfss	status,0,c
  1974  001784  D77B               	goto	l2524
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;FixedPoint.c: 53: }
  1978                           ;FixedPoint.c: 55: return y;
  1979  001786  C0D3  F0C2         	movff	log2fix@y,?_log2fix	;volatile
  1980  00178A  C0D4  F0C3         	movff	log2fix@y+1,?_log2fix+1	;volatile
  1981  00178E  C0D5  F0C4         	movff	log2fix@y+2,?_log2fix+2	;volatile
  1982  001792  C0D6  F0C5         	movff	log2fix@y+3,?_log2fix+3	;volatile
  1983                           
  1984                           ; BSR set to: 0
  1985  001796  0012               	return	
  1986  001798                     __end_of_log2fix:
  1987                           	opt stack 0
  1988                           tblptru	equ	0xFF8
  1989                           tblptrh	equ	0xFF7
  1990                           tblptrl	equ	0xFF6
  1991                           tablat	equ	0xFF5
  1992                           intcon	equ	0xFF2
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           postdec1	equ	0xFE5
  1996                           fsr1l	equ	0xFE1
  1997                           status	equ	0xFD8
  1998                           
  1999 ;; *************** function ___lmul *****************
  2000 ;; Defined at:
  2001 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v1.20\sources\common\lmul.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2004 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  product         4   34[COMRAM] unsigned long 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  4    0[BANK0 ] unsigned long 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2016 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2017 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2019 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2020 ;;Total ram usage:       12 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    4
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_log2fix
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text2
  2031  0025E8                     __ptext2:
  2032                           	opt stack 0
  2033  0025E8                     ___lmul:
  2034                           	opt stack 25
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;incstack = 0
  2038                           ;incstack = 0
  2039  0025E8  0E00               	movlw	0
  2040  0025EA  6E23               	movwf	___lmul@product,c
  2041  0025EC  0E00               	movlw	0
  2042  0025EE  6E24               	movwf	___lmul@product+1,c
  2043  0025F0  0E00               	movlw	0
  2044  0025F2  6E25               	movwf	___lmul@product+2,c
  2045  0025F4  0E00               	movlw	0
  2046  0025F6  6E26               	movwf	___lmul@product+3,c
  2047  0025F8                     l2606:
  2048  0025F8  0100               	movlb	0	; () banked
  2049  0025FA  0100               	movlb	0	; () banked
  2050  0025FC  A1BA               	btfss	___lmul@multiplier& (0+255),0,b
  2051  0025FE  D010               	goto	l2610
  2052                           
  2053                           ; BSR set to: 0
  2054  002600  0100               	movlb	0	; () banked
  2055  002602  0100               	movlb	0	; () banked
  2056  002604  51BE               	movf	___lmul@multiplicand& (0+255),w,b
  2057  002606  2623               	addwf	___lmul@product,f,c
  2058  002608  0100               	movlb	0	; () banked
  2059  00260A  0100               	movlb	0	; () banked
  2060  00260C  51BF               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  2061  00260E  2224               	addwfc	___lmul@product+1,f,c
  2062  002610  0100               	movlb	0	; () banked
  2063  002612  0100               	movlb	0	; () banked
  2064  002614  51C0               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  2065  002616  2225               	addwfc	___lmul@product+2,f,c
  2066  002618  0100               	movlb	0	; () banked
  2067  00261A  0100               	movlb	0	; () banked
  2068  00261C  51C1               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  2069  00261E  2226               	addwfc	___lmul@product+3,f,c
  2070  002620                     l2610:
  2071                           
  2072                           ; BSR set to: 0
  2073  002620  0100               	movlb	0	; () banked
  2074  002622  90D8               	bcf	status,0,c
  2075  002624  0100               	movlb	0	; () banked
  2076  002626  37BE               	rlcf	___lmul@multiplicand& (0+255),f,b
  2077  002628  0100               	movlb	0	; () banked
  2078  00262A  37BF               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  2079  00262C  0100               	movlb	0	; () banked
  2080  00262E  37C0               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  2081  002630  0100               	movlb	0	; () banked
  2082  002632  37C1               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  2083                           
  2084                           ; BSR set to: 0
  2085  002634  0100               	movlb	0	; () banked
  2086  002636  90D8               	bcf	status,0,c
  2087  002638  0100               	movlb	0	; () banked
  2088  00263A  33BD               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  2089  00263C  0100               	movlb	0	; () banked
  2090  00263E  33BC               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  2091  002640  0100               	movlb	0	; () banked
  2092  002642  33BB               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  2093  002644  0100               	movlb	0	; () banked
  2094  002646  33BA               	rrcf	___lmul@multiplier& (0+255),f,b
  2095  002648  0100               	movlb	0	; () banked
  2096  00264A  0100               	movlb	0	; () banked
  2097  00264C  51BD               	movf	(___lmul@multiplier+3)& (0+255),w,b
  2098  00264E  11BA               	iorwf	___lmul@multiplier& (0+255),w,b
  2099  002650  11BB               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  2100  002652  11BC               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  2101  002654  A4D8               	btfss	status,2,c
  2102  002656  D7D0               	goto	l2606
  2103                           
  2104                           ; BSR set to: 0
  2105  002658  C023  F0BA         	movff	___lmul@product,?___lmul
  2106  00265C  C024  F0BB         	movff	___lmul@product+1,?___lmul+1
  2107  002660  C025  F0BC         	movff	___lmul@product+2,?___lmul+2
  2108  002664  C026  F0BD         	movff	___lmul@product+3,?___lmul+3
  2109                           
  2110                           ; BSR set to: 0
  2111  002668  0012               	return	
  2112  00266A                     __end_of___lmul:
  2113                           	opt stack 0
  2114                           tblptru	equ	0xFF8
  2115                           tblptrh	equ	0xFF7
  2116                           tblptrl	equ	0xFF6
  2117                           tablat	equ	0xFF5
  2118                           intcon	equ	0xFF2
  2119                           postinc0	equ	0xFEE
  2120                           wreg	equ	0xFE8
  2121                           postdec1	equ	0xFE5
  2122                           fsr1l	equ	0xFE1
  2123                           status	equ	0xFD8
  2124                           
  2125 ;; *************** function _ProcessAC *****************
  2126 ;; Defined at:
  2127 ;;		line 132 in file "../init_ADC.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  samples         2   12[BANK0 ] PTR unsigned int 
  2130 ;;		 -> BufferB(96), BufferA(96), 
  2131 ;;  bias            2   14[BANK0 ] PTR unsigned int 
  2132 ;;		 -> BufferB(96), BufferA(96), 
  2133 ;;  c               2   16[BANK0 ] PTR struct MeterChannel
  2134 ;;		 -> ChnlB(45), ChnlA(45), 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  t1              4   40[BANK0 ] volatile long 
  2137 ;;  t2              4   36[BANK0 ] volatile long 
  2138 ;;  PPM_Attack      4   30[BANK0 ] long 
  2139 ;;  VU_Attack       4   26[BANK0 ] long 
  2140 ;;  i               2   34[BANK0 ] int 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;		None               void
  2143 ;; Registers used:
  2144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2150 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2151 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2152 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2153 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2154 ;;Total ram usage:       32 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    5
  2157 ;; This function calls:
  2158 ;;		_sm16x16
  2159 ;;		_sm24x24
  2160 ;;		_makeInt24
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text3
  2167  001798                     __ptext3:
  2168                           	opt stack 0
  2169  001798                     _ProcessAC:
  2170                           	opt stack 25
  2171                           
  2172                           ;init_ADC.c: 134: int i = 0;
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;incstack = 0
  2176                           ;incstack = 0
  2177  001798  0E00               	movlw	0
  2178  00179A  0100               	movlb	0	; () banked
  2179  00179C  0100               	movlb	0	; () banked
  2180  00179E  6FDD               	movwf	(ProcessAC@i+1)& (0+255),b
  2181  0017A0  0E00               	movlw	0
  2182  0017A2  0100               	movlb	0	; () banked
  2183  0017A4  6FDC               	movwf	ProcessAC@i& (0+255),b
  2184                           
  2185                           ;init_ADC.c: 135: volatile int32_t t1;
  2186                           ;init_ADC.c: 136: volatile int32_t t2;
  2187                           ;init_ADC.c: 138: int32_t VU_Attack = (long)0x00FFFBA2;
  2188  0017A6  0EA2               	movlw	162
  2189  0017A8  0100               	movlb	0	; () banked
  2190  0017AA  0100               	movlb	0	; () banked
  2191  0017AC  6FD4               	movwf	ProcessAC@VU_Attack& (0+255),b
  2192  0017AE  0EFB               	movlw	251
  2193  0017B0  0100               	movlb	0	; () banked
  2194  0017B2  6FD5               	movwf	(ProcessAC@VU_Attack+1)& (0+255),b
  2195  0017B4  0EFF               	movlw	255
  2196  0017B6  0100               	movlb	0	; () banked
  2197  0017B8  6FD6               	movwf	(ProcessAC@VU_Attack+2)& (0+255),b
  2198  0017BA  0E00               	movlw	0
  2199  0017BC  0100               	movlb	0	; () banked
  2200  0017BE  6FD7               	movwf	(ProcessAC@VU_Attack+3)& (0+255),b
  2201                           
  2202                           ;init_ADC.c: 140: int32_t PPM_Attack = (long)0x00FEFA61;
  2203  0017C0  0E61               	movlw	97
  2204  0017C2  0100               	movlb	0	; () banked
  2205  0017C4  0100               	movlb	0	; () banked
  2206  0017C6  6FD8               	movwf	ProcessAC@PPM_Attack& (0+255),b
  2207  0017C8  0EFA               	movlw	250
  2208  0017CA  0100               	movlb	0	; () banked
  2209  0017CC  6FD9               	movwf	(ProcessAC@PPM_Attack+1)& (0+255),b
  2210  0017CE  0EFE               	movlw	254
  2211  0017D0  0100               	movlb	0	; () banked
  2212  0017D2  6FDA               	movwf	(ProcessAC@PPM_Attack+2)& (0+255),b
  2213  0017D4  0E00               	movlw	0
  2214  0017D6  0100               	movlb	0	; () banked
  2215  0017D8  6FDB               	movwf	(ProcessAC@PPM_Attack+3)& (0+255),b
  2216                           
  2217                           ;init_ADC.c: 143: for(i = 0; i < 8; i++){
  2218  0017DA  0E00               	movlw	0
  2219  0017DC  0100               	movlb	0	; () banked
  2220  0017DE  0100               	movlb	0	; () banked
  2221  0017E0  6FDD               	movwf	(ProcessAC@i+1)& (0+255),b
  2222  0017E2  0E00               	movlw	0
  2223  0017E4  0100               	movlb	0	; () banked
  2224  0017E6  6FDC               	movwf	ProcessAC@i& (0+255),b
  2225  0017E8                     
  2226                           ; BSR set to: 0
  2227  0017E8  0100               	movlb	0	; () banked
  2228  0017EA  0100               	movlb	0	; () banked
  2229  0017EC  51DD               	movf	(ProcessAC@i+1)& (0+255),w,b
  2230  0017EE  0A80               	xorlw	128
  2231  0017F0  0F80               	addlw	-128
  2232  0017F2  0E08               	movlw	8
  2233  0017F4  B4D8               	btfsc	status,2,c
  2234  0017F6  5DDC               	subwf	ProcessAC@i& (0+255),w,b
  2235  0017F8  B0D8               	btfsc	status,0,c
  2236  0017FA  0012               	return	
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;init_ADC.c: 145: t1 = samples[i];
  2240                           
  2241                           ; BSR set to: 0
  2242                           
  2243                           ; BSR set to: 0
  2244  0017FC  90D8               	bcf	status,0,c
  2245  0017FE  0100               	movlb	0	; () banked
  2246  001800  0100               	movlb	0	; () banked
  2247  001802  35DC               	rlcf	ProcessAC@i& (0+255),w,b
  2248  001804  0100               	movlb	0	; () banked
  2249  001806  6FCC               	movwf	??_ProcessAC& (0+255),b
  2250  001808  0100               	movlb	0	; () banked
  2251  00180A  0100               	movlb	0	; () banked
  2252  00180C  35DD               	rlcf	(ProcessAC@i+1)& (0+255),w,b
  2253  00180E  0100               	movlb	0	; () banked
  2254  001810  6FCD               	movwf	(??_ProcessAC+1)& (0+255),b
  2255  001812  0100               	movlb	0	; () banked
  2256  001814  51CC               	movf	??_ProcessAC& (0+255),w,b
  2257  001816  0100               	movlb	0	; () banked
  2258  001818  0100               	movlb	0	; () banked
  2259  00181A  25C6               	addwf	ProcessAC@samples& (0+255),w,b
  2260  00181C  6ED9               	movwf	fsr2l,c
  2261  00181E  0100               	movlb	0	; () banked
  2262  001820  51CD               	movf	(??_ProcessAC+1)& (0+255),w,b
  2263  001822  0100               	movlb	0	; () banked
  2264  001824  0100               	movlb	0	; () banked
  2265  001826  21C7               	addwfc	(ProcessAC@samples+1)& (0+255),w,b
  2266  001828  6EDA               	movwf	fsr2h,c
  2267  00182A  CFDE F0CE          	movff	postinc2,??_ProcessAC+2
  2268  00182E  CFDD F0CF          	movff	postdec2,??_ProcessAC+3
  2269  001832  0100               	movlb	0	; () banked
  2270  001834  C0CE  F0E2         	movff	??_ProcessAC+2,ProcessAC@t1	;volatile
  2271  001838  0100               	movlb	0	; () banked
  2272  00183A  C0CF  F0E3         	movff	??_ProcessAC+3,ProcessAC@t1+1	;volatile
  2273  00183E  0100               	movlb	0	; () banked
  2274  001840  0100               	movlb	0	; () banked
  2275  001842  6BE4               	clrf	(ProcessAC@t1+2)& (0+255),b	;volatile
  2276  001844  0100               	movlb	0	; () banked
  2277  001846  6BE5               	clrf	(ProcessAC@t1+3)& (0+255),b	;volatile
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;init_ADC.c: 146: t1 = sm16x16(t1, t1);
  2281  001848  C0E2  F023         	movff	ProcessAC@t1,?_sm16x16	;volatile
  2282  00184C  C0E3  F024         	movff	ProcessAC@t1+1,?_sm16x16+1	;volatile
  2283  001850  C0E2  F025         	movff	ProcessAC@t1,?_sm16x16+2	;volatile
  2284  001854  C0E3  F026         	movff	ProcessAC@t1+1,?_sm16x16+3	;volatile
  2285  001858  EC26  F012         	call	_sm16x16	;wreg free
  2286  00185C  C026  F0E5         	movff	?_sm16x16+3,ProcessAC@t1+3	;volatile
  2287  001860  C025  F0E4         	movff	?_sm16x16+2,ProcessAC@t1+2	;volatile
  2288  001864  C024  F0E3         	movff	?_sm16x16+1,ProcessAC@t1+1	;volatile
  2289  001868  C023  F0E2         	movff	?_sm16x16,ProcessAC@t1	;volatile
  2290                           
  2291                           ;init_ADC.c: 153: x = PPM_Attack;
  2292  00186C  C0D8  F027         	movff	ProcessAC@PPM_Attack,_x	;volatile
  2293  001870  C0D9  F028         	movff	ProcessAC@PPM_Attack+1,_x+1	;volatile
  2294  001874  C0DA  F029         	movff	ProcessAC@PPM_Attack+2,_x+2	;volatile
  2295  001878  C0DB  F02A         	movff	ProcessAC@PPM_Attack+3,_x+3	;volatile
  2296                           
  2297                           ;init_ADC.c: 154: y = (c->nPeak - t1);
  2298  00187C  0100               	movlb	0	; () banked
  2299  00187E  EE20 F008          	lfsr	2,8
  2300  001882  0100               	movlb	0	; () banked
  2301  001884  51CA               	movf	ProcessAC@c& (0+255),w,b
  2302  001886  26D9               	addwf	fsr2l,f,c
  2303  001888  0100               	movlb	0	; () banked
  2304  00188A  51CB               	movf	(ProcessAC@c+1)& (0+255),w,b
  2305  00188C  22DA               	addwfc	fsr2h,f,c
  2306  00188E  CFDE F0CC          	movff	postinc2,??_ProcessAC
  2307  001892  CFDE F0CD          	movff	postinc2,??_ProcessAC+1
  2308  001896  CFDE F0CE          	movff	postinc2,??_ProcessAC+2
  2309  00189A  CFDE F0CF          	movff	postinc2,??_ProcessAC+3
  2310  00189E  0100               	movlb	0	; () banked
  2311  0018A0  C0E2  F0D0         	movff	ProcessAC@t1,??_ProcessAC+4	;volatile
  2312  0018A4  0100               	movlb	0	; () banked
  2313  0018A6  C0E3  F0D1         	movff	ProcessAC@t1+1,??_ProcessAC+5	;volatile
  2314  0018AA  0100               	movlb	0	; () banked
  2315  0018AC  C0E4  F0D2         	movff	ProcessAC@t1+2,??_ProcessAC+6	;volatile
  2316  0018B0  0100               	movlb	0	; () banked
  2317  0018B2  C0E5  F0D3         	movff	ProcessAC@t1+3,??_ProcessAC+7	;volatile
  2318  0018B6  0100               	movlb	0	; () banked
  2319  0018B8  1FD0               	comf	(??_ProcessAC+4)& (0+255),f,b
  2320  0018BA  1FD1               	comf	(??_ProcessAC+5)& (0+255),f,b
  2321  0018BC  1FD2               	comf	(??_ProcessAC+6)& (0+255),f,b
  2322  0018BE  1FD3               	comf	(??_ProcessAC+7)& (0+255),f,b
  2323  0018C0  2BD0               	incf	(??_ProcessAC+4)& (0+255),f,b
  2324  0018C2  0E00               	movlw	0
  2325  0018C4  23D1               	addwfc	(??_ProcessAC+5)& (0+255),f,b
  2326  0018C6  23D2               	addwfc	(??_ProcessAC+6)& (0+255),f,b
  2327  0018C8  23D3               	addwfc	(??_ProcessAC+7)& (0+255),f,b
  2328  0018CA  0100               	movlb	0	; () banked
  2329  0018CC  51CC               	movf	??_ProcessAC& (0+255),w,b
  2330  0018CE  0100               	movlb	0	; () banked
  2331  0018D0  25D0               	addwf	(??_ProcessAC+4)& (0+255),w,b
  2332  0018D2  6E2B               	movwf	_y,c	;volatile
  2333  0018D4  0100               	movlb	0	; () banked
  2334  0018D6  51CD               	movf	(??_ProcessAC+1)& (0+255),w,b
  2335  0018D8  0100               	movlb	0	; () banked
  2336  0018DA  21D1               	addwfc	(??_ProcessAC+5)& (0+255),w,b
  2337  0018DC  6E2C               	movwf	_y+1,c	;volatile
  2338  0018DE  0100               	movlb	0	; () banked
  2339  0018E0  51CE               	movf	(??_ProcessAC+2)& (0+255),w,b
  2340  0018E2  0100               	movlb	0	; () banked
  2341  0018E4  21D2               	addwfc	(??_ProcessAC+6)& (0+255),w,b
  2342  0018E6  6E2D               	movwf	_y+2,c	;volatile
  2343  0018E8  0100               	movlb	0	; () banked
  2344  0018EA  51CF               	movf	(??_ProcessAC+3)& (0+255),w,b
  2345  0018EC  0100               	movlb	0	; () banked
  2346  0018EE  21D3               	addwfc	(??_ProcessAC+7)& (0+255),w,b
  2347  0018F0  6E2E               	movwf	_y+3,c	;volatile
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;init_ADC.c: 155: sm24x24(x, y);
  2351  0018F2  C027  F0BA         	movff	_x,?_sm24x24	;volatile
  2352  0018F6  C028  F0BB         	movff	_x+1,?_sm24x24+1	;volatile
  2353  0018FA  C029  F0BC         	movff	_x+2,?_sm24x24+2	;volatile
  2354  0018FE  C02A  F0BD         	movff	_x+3,?_sm24x24+3	;volatile
  2355  001902  C02B  F0BE         	movff	_y,?_sm24x24+4	;volatile
  2356  001906  C02C  F0BF         	movff	_y+1,?_sm24x24+5	;volatile
  2357  00190A  C02D  F0C0         	movff	_y+2,?_sm24x24+6	;volatile
  2358  00190E  C02E  F0C1         	movff	_y+3,?_sm24x24+7	;volatile
  2359  001912  EC00  F011         	call	_sm24x24	;wreg free
  2360                           
  2361                           ;init_ADC.c: 156: t2 = makeInt24(p);
  2362  001916  0E00               	movlw	high _p
  2363  001918  6E24               	movwf	?_makeInt24+1,c
  2364  00191A  0E37               	movlw	low _p
  2365  00191C  6E23               	movwf	?_makeInt24,c
  2366  00191E  EC5D  F00D         	call	_makeInt24	;wreg free
  2367  001922  C026  F0E1         	movff	?_makeInt24+3,ProcessAC@t2+3	;volatile
  2368  001926  C025  F0E0         	movff	?_makeInt24+2,ProcessAC@t2+2	;volatile
  2369  00192A  C024  F0DF         	movff	?_makeInt24+1,ProcessAC@t2+1	;volatile
  2370  00192E  C023  F0DE         	movff	?_makeInt24,ProcessAC@t2	;volatile
  2371                           
  2372                           ;init_ADC.c: 157: c->nPeak = t1 + t2;
  2373  001932  0100               	movlb	0	; () banked
  2374  001934  0100               	movlb	0	; () banked
  2375  001936  51DE               	movf	ProcessAC@t2& (0+255),w,b	;volatile
  2376  001938  0100               	movlb	0	; () banked
  2377  00193A  0100               	movlb	0	; () banked
  2378  00193C  25E2               	addwf	ProcessAC@t1& (0+255),w,b	;volatile
  2379  00193E  0100               	movlb	0	; () banked
  2380  001940  6FCC               	movwf	??_ProcessAC& (0+255),b
  2381  001942  0100               	movlb	0	; () banked
  2382  001944  0100               	movlb	0	; () banked
  2383  001946  51DF               	movf	(ProcessAC@t2+1)& (0+255),w,b
  2384  001948  0100               	movlb	0	; () banked
  2385  00194A  0100               	movlb	0	; () banked
  2386  00194C  21E3               	addwfc	(ProcessAC@t1+1)& (0+255),w,b
  2387  00194E  0100               	movlb	0	; () banked
  2388  001950  6FCD               	movwf	(??_ProcessAC+1)& (0+255),b	;volatile
  2389  001952  0100               	movlb	0	; () banked
  2390  001954  0100               	movlb	0	; () banked
  2391  001956  51E0               	movf	(ProcessAC@t2+2)& (0+255),w,b
  2392  001958  0100               	movlb	0	; () banked
  2393  00195A  0100               	movlb	0	; () banked
  2394  00195C  21E4               	addwfc	(ProcessAC@t1+2)& (0+255),w,b
  2395  00195E  0100               	movlb	0	; () banked
  2396  001960  6FCE               	movwf	(??_ProcessAC+2)& (0+255),b	;volatile
  2397  001962  0100               	movlb	0	; () banked
  2398  001964  0100               	movlb	0	; () banked
  2399  001966  51E1               	movf	(ProcessAC@t2+3)& (0+255),w,b
  2400  001968  0100               	movlb	0	; () banked
  2401  00196A  0100               	movlb	0	; () banked
  2402  00196C  21E5               	addwfc	(ProcessAC@t1+3)& (0+255),w,b
  2403  00196E  0100               	movlb	0	; () banked
  2404  001970  6FCF               	movwf	(??_ProcessAC+3)& (0+255),b	;volatile
  2405  001972  0100               	movlb	0	; () banked
  2406  001974  EE20 F008          	lfsr	2,8
  2407  001978  0100               	movlb	0	; () banked
  2408  00197A  51CA               	movf	ProcessAC@c& (0+255),w,b
  2409  00197C  26D9               	addwf	fsr2l,f,c
  2410  00197E  0100               	movlb	0	; () banked
  2411  001980  51CB               	movf	(ProcessAC@c+1)& (0+255),w,b
  2412  001982  22DA               	addwfc	fsr2h,f,c
  2413  001984  C0CC  FFDE         	movff	??_ProcessAC,postinc2
  2414  001988  C0CD  FFDE         	movff	??_ProcessAC+1,postinc2
  2415  00198C  C0CE  FFDE         	movff	??_ProcessAC+2,postinc2
  2416  001990  C0CF  FFDD         	movff	??_ProcessAC+3,postdec2
  2417  001994  06D9               	decf	fsr2l,f,c
  2418  001996  06D9               	decf	fsr2l,f,c
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;init_ADC.c: 159: x = VU_Attack;
  2422  001998  C0D4  F027         	movff	ProcessAC@VU_Attack,_x	;volatile
  2423  00199C  C0D5  F028         	movff	ProcessAC@VU_Attack+1,_x+1	;volatile
  2424  0019A0  C0D6  F029         	movff	ProcessAC@VU_Attack+2,_x+2	;volatile
  2425  0019A4  C0D7  F02A         	movff	ProcessAC@VU_Attack+3,_x+3	;volatile
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;init_ADC.c: 160: y = (c->nAVG - t1);
  2429  0019A8  C0CA  FFD9         	movff	ProcessAC@c,fsr2l
  2430  0019AC  C0CB  FFDA         	movff	ProcessAC@c+1,fsr2h
  2431  0019B0  CFDE F0CC          	movff	postinc2,??_ProcessAC
  2432  0019B4  CFDE F0CD          	movff	postinc2,??_ProcessAC+1
  2433  0019B8  CFDE F0CE          	movff	postinc2,??_ProcessAC+2
  2434  0019BC  CFDE F0CF          	movff	postinc2,??_ProcessAC+3
  2435  0019C0  0100               	movlb	0	; () banked
  2436  0019C2  C0E2  F0D0         	movff	ProcessAC@t1,??_ProcessAC+4	;volatile
  2437  0019C6  0100               	movlb	0	; () banked
  2438  0019C8  C0E3  F0D1         	movff	ProcessAC@t1+1,??_ProcessAC+5	;volatile
  2439  0019CC  0100               	movlb	0	; () banked
  2440  0019CE  C0E4  F0D2         	movff	ProcessAC@t1+2,??_ProcessAC+6	;volatile
  2441  0019D2  0100               	movlb	0	; () banked
  2442  0019D4  C0E5  F0D3         	movff	ProcessAC@t1+3,??_ProcessAC+7	;volatile
  2443  0019D8  0100               	movlb	0	; () banked
  2444  0019DA  1FD0               	comf	(??_ProcessAC+4)& (0+255),f,b
  2445  0019DC  1FD1               	comf	(??_ProcessAC+5)& (0+255),f,b
  2446  0019DE  1FD2               	comf	(??_ProcessAC+6)& (0+255),f,b
  2447  0019E0  1FD3               	comf	(??_ProcessAC+7)& (0+255),f,b
  2448  0019E2  2BD0               	incf	(??_ProcessAC+4)& (0+255),f,b
  2449  0019E4  0E00               	movlw	0
  2450  0019E6  23D1               	addwfc	(??_ProcessAC+5)& (0+255),f,b
  2451  0019E8  23D2               	addwfc	(??_ProcessAC+6)& (0+255),f,b
  2452  0019EA  23D3               	addwfc	(??_ProcessAC+7)& (0+255),f,b
  2453  0019EC  0100               	movlb	0	; () banked
  2454  0019EE  51CC               	movf	??_ProcessAC& (0+255),w,b
  2455  0019F0  0100               	movlb	0	; () banked
  2456  0019F2  25D0               	addwf	(??_ProcessAC+4)& (0+255),w,b
  2457  0019F4  6E2B               	movwf	_y,c	;volatile
  2458  0019F6  0100               	movlb	0	; () banked
  2459  0019F8  51CD               	movf	(??_ProcessAC+1)& (0+255),w,b
  2460  0019FA  0100               	movlb	0	; () banked
  2461  0019FC  21D1               	addwfc	(??_ProcessAC+5)& (0+255),w,b
  2462  0019FE  6E2C               	movwf	_y+1,c	;volatile
  2463  001A00  0100               	movlb	0	; () banked
  2464  001A02  51CE               	movf	(??_ProcessAC+2)& (0+255),w,b
  2465  001A04  0100               	movlb	0	; () banked
  2466  001A06  21D2               	addwfc	(??_ProcessAC+6)& (0+255),w,b
  2467  001A08  6E2D               	movwf	_y+2,c	;volatile
  2468  001A0A  0100               	movlb	0	; () banked
  2469  001A0C  51CF               	movf	(??_ProcessAC+3)& (0+255),w,b
  2470  001A0E  0100               	movlb	0	; () banked
  2471  001A10  21D3               	addwfc	(??_ProcessAC+7)& (0+255),w,b
  2472  001A12  6E2E               	movwf	_y+3,c	;volatile
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;init_ADC.c: 161: sm24x24(x, y);
  2476  001A14  C027  F0BA         	movff	_x,?_sm24x24	;volatile
  2477  001A18  C028  F0BB         	movff	_x+1,?_sm24x24+1	;volatile
  2478  001A1C  C029  F0BC         	movff	_x+2,?_sm24x24+2	;volatile
  2479  001A20  C02A  F0BD         	movff	_x+3,?_sm24x24+3	;volatile
  2480  001A24  C02B  F0BE         	movff	_y,?_sm24x24+4	;volatile
  2481  001A28  C02C  F0BF         	movff	_y+1,?_sm24x24+5	;volatile
  2482  001A2C  C02D  F0C0         	movff	_y+2,?_sm24x24+6	;volatile
  2483  001A30  C02E  F0C1         	movff	_y+3,?_sm24x24+7	;volatile
  2484  001A34  EC00  F011         	call	_sm24x24	;wreg free
  2485                           
  2486                           ;init_ADC.c: 162: t2 = makeInt24(p);
  2487  001A38  0E00               	movlw	high _p
  2488  001A3A  6E24               	movwf	?_makeInt24+1,c
  2489  001A3C  0E37               	movlw	low _p
  2490  001A3E  6E23               	movwf	?_makeInt24,c
  2491  001A40  EC5D  F00D         	call	_makeInt24	;wreg free
  2492  001A44  C026  F0E1         	movff	?_makeInt24+3,ProcessAC@t2+3	;volatile
  2493  001A48  C025  F0E0         	movff	?_makeInt24+2,ProcessAC@t2+2	;volatile
  2494  001A4C  C024  F0DF         	movff	?_makeInt24+1,ProcessAC@t2+1	;volatile
  2495  001A50  C023  F0DE         	movff	?_makeInt24,ProcessAC@t2	;volatile
  2496                           
  2497                           ;init_ADC.c: 163: c->nAVG = t1 + t2;
  2498  001A54  0100               	movlb	0	; () banked
  2499  001A56  0100               	movlb	0	; () banked
  2500  001A58  51DE               	movf	ProcessAC@t2& (0+255),w,b	;volatile
  2501  001A5A  0100               	movlb	0	; () banked
  2502  001A5C  0100               	movlb	0	; () banked
  2503  001A5E  25E2               	addwf	ProcessAC@t1& (0+255),w,b	;volatile
  2504  001A60  0100               	movlb	0	; () banked
  2505  001A62  6FCC               	movwf	??_ProcessAC& (0+255),b
  2506  001A64  0100               	movlb	0	; () banked
  2507  001A66  0100               	movlb	0	; () banked
  2508  001A68  51DF               	movf	(ProcessAC@t2+1)& (0+255),w,b
  2509  001A6A  0100               	movlb	0	; () banked
  2510  001A6C  0100               	movlb	0	; () banked
  2511  001A6E  21E3               	addwfc	(ProcessAC@t1+1)& (0+255),w,b
  2512  001A70  0100               	movlb	0	; () banked
  2513  001A72  6FCD               	movwf	(??_ProcessAC+1)& (0+255),b	;volatile
  2514  001A74  0100               	movlb	0	; () banked
  2515  001A76  0100               	movlb	0	; () banked
  2516  001A78  51E0               	movf	(ProcessAC@t2+2)& (0+255),w,b
  2517  001A7A  0100               	movlb	0	; () banked
  2518  001A7C  0100               	movlb	0	; () banked
  2519  001A7E  21E4               	addwfc	(ProcessAC@t1+2)& (0+255),w,b
  2520  001A80  0100               	movlb	0	; () banked
  2521  001A82  6FCE               	movwf	(??_ProcessAC+2)& (0+255),b	;volatile
  2522  001A84  0100               	movlb	0	; () banked
  2523  001A86  0100               	movlb	0	; () banked
  2524  001A88  51E1               	movf	(ProcessAC@t2+3)& (0+255),w,b
  2525  001A8A  0100               	movlb	0	; () banked
  2526  001A8C  0100               	movlb	0	; () banked
  2527  001A8E  21E5               	addwfc	(ProcessAC@t1+3)& (0+255),w,b
  2528  001A90  0100               	movlb	0	; () banked
  2529  001A92  6FCF               	movwf	(??_ProcessAC+3)& (0+255),b	;volatile
  2530  001A94  C0CA  FFD9         	movff	ProcessAC@c,fsr2l
  2531  001A98  C0CB  FFDA         	movff	ProcessAC@c+1,fsr2h
  2532  001A9C  C0CC  FFDE         	movff	??_ProcessAC,postinc2
  2533  001AA0  C0CD  FFDE         	movff	??_ProcessAC+1,postinc2
  2534  001AA4  C0CE  FFDE         	movff	??_ProcessAC+2,postinc2
  2535  001AA8  C0CF  FFDD         	movff	??_ProcessAC+3,postdec2
  2536  001AAC  06D9               	decf	fsr2l,f,c
  2537  001AAE  06D9               	decf	fsr2l,f,c
  2538                           
  2539                           ; BSR set to: 0
  2540  001AB0  0100               	movlb	0	; () banked
  2541  001AB2  0100               	movlb	0	; () banked
  2542  001AB4  4BDC               	infsnz	ProcessAC@i& (0+255),f,b
  2543  001AB6  2BDD               	incf	(ProcessAC@i+1)& (0+255),f,b
  2544  001AB8  D697               	goto	L1
  2545  001ABA                     __end_of_ProcessAC:
  2546                           	opt stack 0
  2547                           tblptru	equ	0xFF8
  2548                           tblptrh	equ	0xFF7
  2549                           tblptrl	equ	0xFF6
  2550                           tablat	equ	0xFF5
  2551                           intcon	equ	0xFF2
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           postdec1	equ	0xFE5
  2555                           fsr1l	equ	0xFE1
  2556                           postinc2	equ	0xFDE
  2557                           postdec2	equ	0xFDD
  2558                           fsr2h	equ	0xFDA
  2559                           fsr2l	equ	0xFD9
  2560                           status	equ	0xFD8
  2561                           
  2562 ;; *************** function _makeInt24 *****************
  2563 ;; Defined at:
  2564 ;;		line 260 in file "../FixedPoint.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  p               2   34[COMRAM] PTR unsigned char 
  2567 ;;		 -> p(6), 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  t               4    8[BANK0 ] long 
  2570 ;;  r               4    4[BANK0 ] long 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  4   34[COMRAM] long 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2582 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2583 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2584 ;;Total ram usage:       16 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    4
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_ProcessAC
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text4
  2595  001ABA                     __ptext4:
  2596                           	opt stack 0
  2597  001ABA                     _makeInt24:
  2598                           	opt stack 25
  2599                           
  2600                           ;FixedPoint.c: 262: int32_t t = 0;
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;incstack = 0
  2604                           ;incstack = 0
  2605  001ABA  0E00               	movlw	0
  2606  001ABC  0100               	movlb	0	; () banked
  2607  001ABE  0100               	movlb	0	; () banked
  2608  001AC0  6FC2               	movwf	makeInt24@t& (0+255),b
  2609  001AC2  0E00               	movlw	0
  2610  001AC4  0100               	movlb	0	; () banked
  2611  001AC6  6FC3               	movwf	(makeInt24@t+1)& (0+255),b
  2612  001AC8  0E00               	movlw	0
  2613  001ACA  0100               	movlb	0	; () banked
  2614  001ACC  6FC4               	movwf	(makeInt24@t+2)& (0+255),b
  2615  001ACE  0E00               	movlw	0
  2616  001AD0  0100               	movlb	0	; () banked
  2617  001AD2  6FC5               	movwf	(makeInt24@t+3)& (0+255),b
  2618                           
  2619                           ;FixedPoint.c: 263: int32_t r = 0;
  2620  001AD4  0E00               	movlw	0
  2621  001AD6  0100               	movlb	0	; () banked
  2622  001AD8  0100               	movlb	0	; () banked
  2623  001ADA  6FBE               	movwf	makeInt24@r& (0+255),b
  2624  001ADC  0E00               	movlw	0
  2625  001ADE  0100               	movlb	0	; () banked
  2626  001AE0  6FBF               	movwf	(makeInt24@r+1)& (0+255),b
  2627  001AE2  0E00               	movlw	0
  2628  001AE4  0100               	movlb	0	; () banked
  2629  001AE6  6FC0               	movwf	(makeInt24@r+2)& (0+255),b
  2630  001AE8  0E00               	movlw	0
  2631  001AEA  0100               	movlb	0	; () banked
  2632  001AEC  6FC1               	movwf	(makeInt24@r+3)& (0+255),b
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;FixedPoint.c: 265: if(p[5] & 0x80) {
  2636  001AEE  EE20 F005          	lfsr	2,5
  2637  001AF2  5023               	movf	makeInt24@p,w,c
  2638  001AF4  26D9               	addwf	fsr2l,f,c
  2639  001AF6  5024               	movf	makeInt24@p+1,w,c
  2640  001AF8  22DA               	addwfc	fsr2h,f,c
  2641  001AFA  50DF               	movf	indf2,w,c
  2642  001AFC  0100               	movlb	0	; () banked
  2643  001AFE  6FBA               	movwf	??_makeInt24& (0+255),b
  2644  001B00  0100               	movlb	0	; () banked
  2645  001B02  AFBA               	btfss	??_makeInt24& (0+255),7,b
  2646  001B04  D01C               	goto	l2558
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;FixedPoint.c: 266: t = 0xFF;
  2650  001B06  0EFF               	movlw	255
  2651  001B08  0100               	movlb	0	; () banked
  2652  001B0A  0100               	movlb	0	; () banked
  2653  001B0C  6FC2               	movwf	makeInt24@t& (0+255),b
  2654  001B0E  0E00               	movlw	0
  2655  001B10  0100               	movlb	0	; () banked
  2656  001B12  6FC3               	movwf	(makeInt24@t+1)& (0+255),b
  2657  001B14  0E00               	movlw	0
  2658  001B16  0100               	movlb	0	; () banked
  2659  001B18  6FC4               	movwf	(makeInt24@t+2)& (0+255),b
  2660  001B1A  0E00               	movlw	0
  2661  001B1C  0100               	movlb	0	; () banked
  2662  001B1E  6FC5               	movwf	(makeInt24@t+3)& (0+255),b
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;FixedPoint.c: 267: t <<= 8;
  2666  001B20  0100               	movlb	0	; () banked
  2667  001B22  0100               	movlb	0	; () banked
  2668  001B24  C0C4  F0C5         	movff	makeInt24@t+2,makeInt24@t+3
  2669  001B28  0100               	movlb	0	; () banked
  2670  001B2A  0100               	movlb	0	; () banked
  2671  001B2C  C0C3  F0C4         	movff	makeInt24@t+1,makeInt24@t+2
  2672  001B30  0100               	movlb	0	; () banked
  2673  001B32  0100               	movlb	0	; () banked
  2674  001B34  C0C2  F0C3         	movff	makeInt24@t,makeInt24@t+1
  2675  001B38  0100               	movlb	0	; () banked
  2676  001B3A  0100               	movlb	0	; () banked
  2677  001B3C  6BC2               	clrf	makeInt24@t& (0+255),b
  2678  001B3E                     l2558:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;FixedPoint.c: 268: }
  2682                           ;FixedPoint.c: 270: t |= p[5];
  2683  001B3E  EE20 F005          	lfsr	2,5
  2684  001B42  5023               	movf	makeInt24@p,w,c
  2685  001B44  26D9               	addwf	fsr2l,f,c
  2686  001B46  5024               	movf	makeInt24@p+1,w,c
  2687  001B48  22DA               	addwfc	fsr2h,f,c
  2688  001B4A  50DF               	movf	indf2,w,c
  2689  001B4C  0100               	movlb	0	; () banked
  2690  001B4E  6FBA               	movwf	??_makeInt24& (0+255),b
  2691  001B50  0100               	movlb	0	; () banked
  2692  001B52  51BA               	movf	??_makeInt24& (0+255),w,b
  2693  001B54  0100               	movlb	0	; () banked
  2694  001B56  0100               	movlb	0	; () banked
  2695  001B58  13C2               	iorwf	makeInt24@t& (0+255),f,b
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;FixedPoint.c: 271: t <<= 8; t |= p[4];
  2699  001B5A  0100               	movlb	0	; () banked
  2700  001B5C  0100               	movlb	0	; () banked
  2701  001B5E  C0C4  F0C5         	movff	makeInt24@t+2,makeInt24@t+3
  2702  001B62  0100               	movlb	0	; () banked
  2703  001B64  0100               	movlb	0	; () banked
  2704  001B66  C0C3  F0C4         	movff	makeInt24@t+1,makeInt24@t+2
  2705  001B6A  0100               	movlb	0	; () banked
  2706  001B6C  0100               	movlb	0	; () banked
  2707  001B6E  C0C2  F0C3         	movff	makeInt24@t,makeInt24@t+1
  2708  001B72  0100               	movlb	0	; () banked
  2709  001B74  0100               	movlb	0	; () banked
  2710  001B76  6BC2               	clrf	makeInt24@t& (0+255),b
  2711                           
  2712                           ; BSR set to: 0
  2713  001B78  EE20 F004          	lfsr	2,4
  2714  001B7C  5023               	movf	makeInt24@p,w,c
  2715  001B7E  26D9               	addwf	fsr2l,f,c
  2716  001B80  5024               	movf	makeInt24@p+1,w,c
  2717  001B82  22DA               	addwfc	fsr2h,f,c
  2718  001B84  50DF               	movf	indf2,w,c
  2719  001B86  0100               	movlb	0	; () banked
  2720  001B88  6FBA               	movwf	??_makeInt24& (0+255),b
  2721  001B8A  0100               	movlb	0	; () banked
  2722  001B8C  51BA               	movf	??_makeInt24& (0+255),w,b
  2723  001B8E  0100               	movlb	0	; () banked
  2724  001B90  0100               	movlb	0	; () banked
  2725  001B92  13C2               	iorwf	makeInt24@t& (0+255),f,b
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;FixedPoint.c: 272: t <<= 8; t |= p[3];
  2729  001B94  0100               	movlb	0	; () banked
  2730  001B96  0100               	movlb	0	; () banked
  2731  001B98  C0C4  F0C5         	movff	makeInt24@t+2,makeInt24@t+3
  2732  001B9C  0100               	movlb	0	; () banked
  2733  001B9E  0100               	movlb	0	; () banked
  2734  001BA0  C0C3  F0C4         	movff	makeInt24@t+1,makeInt24@t+2
  2735  001BA4  0100               	movlb	0	; () banked
  2736  001BA6  0100               	movlb	0	; () banked
  2737  001BA8  C0C2  F0C3         	movff	makeInt24@t,makeInt24@t+1
  2738  001BAC  0100               	movlb	0	; () banked
  2739  001BAE  0100               	movlb	0	; () banked
  2740  001BB0  6BC2               	clrf	makeInt24@t& (0+255),b
  2741                           
  2742                           ; BSR set to: 0
  2743  001BB2  EE20 F003          	lfsr	2,3
  2744  001BB6  5023               	movf	makeInt24@p,w,c
  2745  001BB8  26D9               	addwf	fsr2l,f,c
  2746  001BBA  5024               	movf	makeInt24@p+1,w,c
  2747  001BBC  22DA               	addwfc	fsr2h,f,c
  2748  001BBE  50DF               	movf	indf2,w,c
  2749  001BC0  0100               	movlb	0	; () banked
  2750  001BC2  6FBA               	movwf	??_makeInt24& (0+255),b
  2751  001BC4  0100               	movlb	0	; () banked
  2752  001BC6  51BA               	movf	??_makeInt24& (0+255),w,b
  2753  001BC8  0100               	movlb	0	; () banked
  2754  001BCA  0100               	movlb	0	; () banked
  2755  001BCC  13C2               	iorwf	makeInt24@t& (0+255),f,b
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;FixedPoint.c: 274: r = p[2];
  2759  001BCE  EE20 F002          	lfsr	2,2
  2760  001BD2  5023               	movf	makeInt24@p,w,c
  2761  001BD4  26D9               	addwf	fsr2l,f,c
  2762  001BD6  5024               	movf	makeInt24@p+1,w,c
  2763  001BD8  22DA               	addwfc	fsr2h,f,c
  2764  001BDA  50DF               	movf	indf2,w,c
  2765  001BDC  0100               	movlb	0	; () banked
  2766  001BDE  6FBA               	movwf	??_makeInt24& (0+255),b
  2767  001BE0  0100               	movlb	0	; () banked
  2768  001BE2  51BA               	movf	??_makeInt24& (0+255),w,b
  2769  001BE4  0100               	movlb	0	; () banked
  2770  001BE6  0100               	movlb	0	; () banked
  2771  001BE8  6FBE               	movwf	makeInt24@r& (0+255),b
  2772  001BEA  0100               	movlb	0	; () banked
  2773  001BEC  6BBF               	clrf	(makeInt24@r+1)& (0+255),b
  2774  001BEE  0100               	movlb	0	; () banked
  2775  001BF0  6BC0               	clrf	(makeInt24@r+2)& (0+255),b
  2776  001BF2  0100               	movlb	0	; () banked
  2777  001BF4  6BC1               	clrf	(makeInt24@r+3)& (0+255),b
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;FixedPoint.c: 275: r <<= 8; r |= p[1];
  2781  001BF6  0100               	movlb	0	; () banked
  2782  001BF8  0100               	movlb	0	; () banked
  2783  001BFA  C0C0  F0C1         	movff	makeInt24@r+2,makeInt24@r+3
  2784  001BFE  0100               	movlb	0	; () banked
  2785  001C00  0100               	movlb	0	; () banked
  2786  001C02  C0BF  F0C0         	movff	makeInt24@r+1,makeInt24@r+2
  2787  001C06  0100               	movlb	0	; () banked
  2788  001C08  0100               	movlb	0	; () banked
  2789  001C0A  C0BE  F0BF         	movff	makeInt24@r,makeInt24@r+1
  2790  001C0E  0100               	movlb	0	; () banked
  2791  001C10  0100               	movlb	0	; () banked
  2792  001C12  6BBE               	clrf	makeInt24@r& (0+255),b
  2793                           
  2794                           ; BSR set to: 0
  2795  001C14  EE20 F001          	lfsr	2,1
  2796  001C18  5023               	movf	makeInt24@p,w,c
  2797  001C1A  26D9               	addwf	fsr2l,f,c
  2798  001C1C  5024               	movf	makeInt24@p+1,w,c
  2799  001C1E  22DA               	addwfc	fsr2h,f,c
  2800  001C20  50DF               	movf	indf2,w,c
  2801  001C22  0100               	movlb	0	; () banked
  2802  001C24  6FBA               	movwf	??_makeInt24& (0+255),b
  2803  001C26  0100               	movlb	0	; () banked
  2804  001C28  51BA               	movf	??_makeInt24& (0+255),w,b
  2805  001C2A  0100               	movlb	0	; () banked
  2806  001C2C  0100               	movlb	0	; () banked
  2807  001C2E  13BE               	iorwf	makeInt24@r& (0+255),f,b
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;FixedPoint.c: 276: r <<= 8; r |= p[0];
  2811  001C30  0100               	movlb	0	; () banked
  2812  001C32  0100               	movlb	0	; () banked
  2813  001C34  C0C0  F0C1         	movff	makeInt24@r+2,makeInt24@r+3
  2814  001C38  0100               	movlb	0	; () banked
  2815  001C3A  0100               	movlb	0	; () banked
  2816  001C3C  C0BF  F0C0         	movff	makeInt24@r+1,makeInt24@r+2
  2817  001C40  0100               	movlb	0	; () banked
  2818  001C42  0100               	movlb	0	; () banked
  2819  001C44  C0BE  F0BF         	movff	makeInt24@r,makeInt24@r+1
  2820  001C48  0100               	movlb	0	; () banked
  2821  001C4A  0100               	movlb	0	; () banked
  2822  001C4C  6BBE               	clrf	makeInt24@r& (0+255),b
  2823                           
  2824                           ; BSR set to: 0
  2825  001C4E  C023  FFD9         	movff	makeInt24@p,fsr2l
  2826  001C52  C024  FFDA         	movff	makeInt24@p+1,fsr2h
  2827  001C56  50DF               	movf	indf2,w,c
  2828  001C58  0100               	movlb	0	; () banked
  2829  001C5A  6FBA               	movwf	??_makeInt24& (0+255),b
  2830  001C5C  0100               	movlb	0	; () banked
  2831  001C5E  51BA               	movf	??_makeInt24& (0+255),w,b
  2832  001C60  0100               	movlb	0	; () banked
  2833  001C62  0100               	movlb	0	; () banked
  2834  001C64  13BE               	iorwf	makeInt24@r& (0+255),f,b
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;FixedPoint.c: 278: r += 1;
  2838  001C66  0E01               	movlw	1
  2839  001C68  0100               	movlb	0	; () banked
  2840  001C6A  0100               	movlb	0	; () banked
  2841  001C6C  27BE               	addwf	makeInt24@r& (0+255),f,b
  2842  001C6E  0E00               	movlw	0
  2843  001C70  0100               	movlb	0	; () banked
  2844  001C72  23BF               	addwfc	(makeInt24@r+1)& (0+255),f,b
  2845  001C74  0E00               	movlw	0
  2846  001C76  0100               	movlb	0	; () banked
  2847  001C78  23C0               	addwfc	(makeInt24@r+2)& (0+255),f,b
  2848  001C7A  0E00               	movlw	0
  2849  001C7C  0100               	movlb	0	; () banked
  2850  001C7E  23C1               	addwfc	(makeInt24@r+3)& (0+255),f,b
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;FixedPoint.c: 279: r >>= 23;
  2854  001C80  0E17               	movlw	23
  2855  001C82  0100               	movlb	0	; () banked
  2856  001C84  6FBA               	movwf	??_makeInt24& (0+255),b
  2857  001C86                     u2085:
  2858  001C86  0100               	movlb	0	; () banked
  2859  001C88  0100               	movlb	0	; () banked
  2860  001C8A  35C1               	rlcf	(makeInt24@r+3)& (0+255),w,b
  2861  001C8C  0100               	movlb	0	; () banked
  2862  001C8E  33C1               	rrcf	(makeInt24@r+3)& (0+255),f,b
  2863  001C90  0100               	movlb	0	; () banked
  2864  001C92  33C0               	rrcf	(makeInt24@r+2)& (0+255),f,b
  2865  001C94  0100               	movlb	0	; () banked
  2866  001C96  33BF               	rrcf	(makeInt24@r+1)& (0+255),f,b
  2867  001C98  0100               	movlb	0	; () banked
  2868  001C9A  33BE               	rrcf	makeInt24@r& (0+255),f,b
  2869  001C9C  0100               	movlb	0	; () banked
  2870  001C9E  2FBA               	decfsz	??_makeInt24& (0+255),f,b
  2871  001CA0  D7F2               	goto	u2085
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;FixedPoint.c: 280: t += r;
  2875  001CA2  0100               	movlb	0	; () banked
  2876  001CA4  0100               	movlb	0	; () banked
  2877  001CA6  51BE               	movf	makeInt24@r& (0+255),w,b
  2878  001CA8  0100               	movlb	0	; () banked
  2879  001CAA  0100               	movlb	0	; () banked
  2880  001CAC  27C2               	addwf	makeInt24@t& (0+255),f,b
  2881  001CAE  0100               	movlb	0	; () banked
  2882  001CB0  0100               	movlb	0	; () banked
  2883  001CB2  51BF               	movf	(makeInt24@r+1)& (0+255),w,b
  2884  001CB4  0100               	movlb	0	; () banked
  2885  001CB6  0100               	movlb	0	; () banked
  2886  001CB8  23C3               	addwfc	(makeInt24@t+1)& (0+255),f,b
  2887  001CBA  0100               	movlb	0	; () banked
  2888  001CBC  0100               	movlb	0	; () banked
  2889  001CBE  51C0               	movf	(makeInt24@r+2)& (0+255),w,b
  2890  001CC0  0100               	movlb	0	; () banked
  2891  001CC2  0100               	movlb	0	; () banked
  2892  001CC4  23C4               	addwfc	(makeInt24@t+2)& (0+255),f,b
  2893  001CC6  0100               	movlb	0	; () banked
  2894  001CC8  0100               	movlb	0	; () banked
  2895  001CCA  51C1               	movf	(makeInt24@r+3)& (0+255),w,b
  2896  001CCC  0100               	movlb	0	; () banked
  2897  001CCE  0100               	movlb	0	; () banked
  2898  001CD0  23C5               	addwfc	(makeInt24@t+3)& (0+255),f,b
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;FixedPoint.c: 282: return t;
  2902  001CD2  C0C2  F023         	movff	makeInt24@t,?_makeInt24
  2903  001CD6  C0C3  F024         	movff	makeInt24@t+1,?_makeInt24+1
  2904  001CDA  C0C4  F025         	movff	makeInt24@t+2,?_makeInt24+2
  2905  001CDE  C0C5  F026         	movff	makeInt24@t+3,?_makeInt24+3
  2906  001CE2  0012               	return	
  2907  001CE4                     __end_of_makeInt24:
  2908                           	opt stack 0
  2909                           tblptru	equ	0xFF8
  2910                           tblptrh	equ	0xFF7
  2911                           tblptrl	equ	0xFF6
  2912                           tablat	equ	0xFF5
  2913                           intcon	equ	0xFF2
  2914                           postinc0	equ	0xFEE
  2915                           wreg	equ	0xFE8
  2916                           postdec1	equ	0xFE5
  2917                           fsr1l	equ	0xFE1
  2918                           indf2	equ	0xFDF
  2919                           postinc2	equ	0xFDE
  2920                           postdec2	equ	0xFDD
  2921                           fsr2h	equ	0xFDA
  2922                           fsr2l	equ	0xFD9
  2923                           status	equ	0xFD8
  2924                           
  2925 ;; *************** function _sm24x24 *****************
  2926 ;; Defined at:
  2927 ;;		line 132 in file "../FixedPoint.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  x               4    0[BANK0 ] long 
  2930 ;;  y               4    4[BANK0 ] long 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;		None               void
  2935 ;; Registers used:
  2936 ;;		None
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2942 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;Total ram usage:        8 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    4
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_ProcessAC
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text5
  2957  002200                     __ptext5:
  2958                           	opt stack 0
  2959  002200                     _sm24x24:
  2960                           	opt stack 25
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;incstack = 0
  2964                           ;incstack = 0
  2965  002200  0E00               	movlw	high sm24x24@x	;# 
  2966  002202  6EEA               	movwf	fsr0h,c	;# 
  2967  002204  0EBA               	movlw	low sm24x24@x	;# 
  2968  002206  6EE9               	movwf	fsr0l,c	;# 
  2969  002208  0E00               	movlw	high sm24x24@y	;# 
  2970  00220A  6EE2               	movwf	fsr1h,c	;# 
  2971  00220C  0EBE               	movlw	low sm24x24@y	;# 
  2972  00220E  6EE1               	movwf	fsr1l,c	;# 
  2973  002210  50EE               	movf	postinc0,w,c	;# 
  2974  002212  02E6               	mulwf	postinc1,c	;# 
  2975  002214  CFF3 F037          	movff	prodl,_p	;# 
  2976  002218  CFF4 F038          	movff	prodh,_p+1	;# 
  2977  00221C  50EE               	movf	postinc0,w,c	;# 
  2978  00221E  02E6               	mulwf	postinc1,c	;# 
  2979  002220  CFF3 F039          	movff	prodl,_p+2	;# 
  2980  002224  CFF4 F03A          	movff	prodh,_p+3	;# 
  2981  002228  50EF               	movf	indf0,w,c	;# 
  2982  00222A  02E5               	mulwf	postdec1,c	;# 
  2983  00222C  CFF3 F03B          	movff	prodl,_p+4	;# 
  2984  002230  CFF4 F03C          	movff	prodh,_p+5	;# 
  2985  002234  50ED               	movf	postdec0,w,c	;# 
  2986  002236  02E6               	mulwf	postinc1,c	;# 
  2987  002238  50F3               	movf	prodl,w,c	;# 
  2988  00223A  273A               	addwf	_p+3,f,b	;# 
  2989  00223C  50F4               	movf	prodh,w,c	;# 
  2990  00223E  233B               	addwfc	_p+4,f,b	;# 
  2991  002240  6AE8               	clrf	wreg,c	;# 
  2992  002242  233C               	addwfc	_p+5,f,b	;# 
  2993  002244  50ED               	movf	postdec0,w,c	;# 
  2994  002246  02E7               	mulwf	indf1,c	;# 
  2995  002248  50F3               	movf	prodl,w,c	;# 
  2996  00224A  273A               	addwf	_p+3,f,b	;# 
  2997  00224C  50F4               	movf	prodh,w,c	;# 
  2998  00224E  233B               	addwfc	_p+4,f,b	;# 
  2999  002250  6AE8               	clrf	wreg,c	;# 
  3000  002252  233C               	addwfc	_p+5,f,b	;# 
  3001  002254  50EE               	movf	postinc0,w,c	;# 
  3002  002256  02E5               	mulwf	postdec1,c	;# 
  3003  002258  50F3               	movf	prodl,w,c	;# 
  3004  00225A  2739               	addwf	_p+2,f,b	;# 
  3005  00225C  50F4               	movf	prodh,w,c	;# 
  3006  00225E  233A               	addwfc	_p+3,f,b	;# 
  3007  002260  6AE8               	clrf	wreg,c	;# 
  3008  002262  233B               	addwfc	_p+4,f,b	;# 
  3009  002264  6AE8               	clrf	wreg,c	;# 
  3010  002266  233C               	addwfc	_p+5,f,b	;# 
  3011  002268  50EE               	movf	postinc0,w,c	;# 
  3012  00226A  50E5               	movf	postdec1,w,c	;# 
  3013  00226C  50ED               	movf	postdec0,w,c	;# 
  3014  00226E  02E7               	mulwf	indf1,c	;# 
  3015  002270  50F3               	movf	prodl,w,c	;# 
  3016  002272  2739               	addwf	_p+2,f,b	;# 
  3017  002274  50F4               	movf	prodh,w,c	;# 
  3018  002276  233A               	addwfc	_p+3,f,b	;# 
  3019  002278  6AE8               	clrf	wreg,c	;# 
  3020  00227A  233B               	addwfc	_p+4,f,b	;# 
  3021  00227C  6AE8               	clrf	wreg,c	;# 
  3022  00227E  233C               	addwfc	_p+5,f,b	;# 
  3023  002280  50ED               	movf	postdec0,w,c	;# 
  3024  002282  02E6               	mulwf	postinc1,c	;# 
  3025  002284  50F3               	movf	prodl,w,c	;# 
  3026  002286  2738               	addwf	_p+1,f,b	;# 
  3027  002288  50F4               	movf	prodh,w,c	;# 
  3028  00228A  2339               	addwfc	_p+2,f,b	;# 
  3029  00228C  6AE8               	clrf	wreg,c	;# 
  3030  00228E  233A               	addwfc	_p+3,f,b	;# 
  3031  002290  6AE8               	clrf	wreg,c	;# 
  3032  002292  233B               	addwfc	_p+4,f,b	;# 
  3033  002294  6AE8               	clrf	wreg,c	;# 
  3034  002296  233C               	addwfc	_p+5,f,b	;# 
  3035  002298  50EF               	movf	indf0,w,c	;# 
  3036  00229A  02E7               	mulwf	indf1,c	;# 
  3037  00229C  50F3               	movf	prodl,w,c	;# 
  3038  00229E  2738               	addwf	_p+1,f,b	;# 
  3039  0022A0  50F4               	movf	prodh,w,c	;# 
  3040  0022A2  2339               	addwfc	_p+2,f,b	;# 
  3041  0022A4  6AE8               	clrf	wreg,c	;# 
  3042  0022A6  233A               	addwfc	_p+3,f,b	;# 
  3043  0022A8  6AE8               	clrf	wreg,c	;# 
  3044  0022AA  233B               	addwfc	_p+4,f,b	;# 
  3045  0022AC  6AE8               	clrf	wreg,c	;# 
  3046  0022AE  233C               	addwfc	_p+5,f,b	;# 
  3047                           
  3048                           ;FixedPoint.c: 240: if(y < 0) {
  3049  0022B0  0100               	movlb	0	; () banked
  3050  0022B2  0100               	movlb	0	; () banked
  3051  0022B4  AFC1               	btfss	(sm24x24@y+3)& (0+255),7,b
  3052  0022B6  D006               	goto	l458
  3053                           
  3054                           ; BSR set to: 0
  3055  0022B8  51BA               	movf	sm24x24@x,w,b	;# 
  3056  0022BA  5F3A               	subwf	_p+3,f,b	;# 
  3057  0022BC  51BB               	movf	sm24x24@x+1,w,b	;# 
  3058  0022BE  5B3B               	subwfb	_p+4,f,b	;# 
  3059  0022C0  51BC               	movf	sm24x24@x+2,w,b	;# 
  3060  0022C2  5B3C               	subwfb	_p+5,f,b	;# 
  3061  0022C4                     l458:
  3062                           
  3063                           ;FixedPoint.c: 247: }
  3064                           ;FixedPoint.c: 249: if(x < 0) {
  3065  0022C4  0100               	movlb	0	; () banked
  3066  0022C6  0100               	movlb	0	; () banked
  3067  0022C8  AFBD               	btfss	(sm24x24@x+3)& (0+255),7,b
  3068  0022CA  0012               	return	
  3069                           
  3070                           ; BSR set to: 0
  3071  0022CC  51BE               	movf	sm24x24@y,w,b	;# 
  3072  0022CE  5F3A               	subwf	_p+3,f,b	;# 
  3073  0022D0  51BF               	movf	sm24x24@y+1,w,b	;# 
  3074  0022D2  5B3B               	subwfb	_p+4,f,b	;# 
  3075  0022D4  51C0               	movf	sm24x24@y+2,w,b	;# 
  3076  0022D6  5B3C               	subwfb	_p+5,f,b	;# 
  3077  0022D8  0012               	return	
  3078  0022DA                     __end_of_sm24x24:
  3079                           	opt stack 0
  3080                           tblptru	equ	0xFF8
  3081                           tblptrh	equ	0xFF7
  3082                           tblptrl	equ	0xFF6
  3083                           tablat	equ	0xFF5
  3084                           prodh	equ	0xFF4
  3085                           prodl	equ	0xFF3
  3086                           intcon	equ	0xFF2
  3087                           indf0	equ	0xFEF
  3088                           postinc0	equ	0xFEE
  3089                           postdec0	equ	0xFED
  3090                           fsr0h	equ	0xFEA
  3091                           fsr0l	equ	0xFE9
  3092                           wreg	equ	0xFE8
  3093                           indf1	equ	0xFE7
  3094                           postinc1	equ	0xFE6
  3095                           postdec1	equ	0xFE5
  3096                           fsr1h	equ	0xFE2
  3097                           fsr1l	equ	0xFE1
  3098                           indf2	equ	0xFDF
  3099                           postinc2	equ	0xFDE
  3100                           postdec2	equ	0xFDD
  3101                           fsr2h	equ	0xFDA
  3102                           fsr2l	equ	0xFD9
  3103                           status	equ	0xFD8
  3104                           
  3105 ;; *************** function _sm16x16 *****************
  3106 ;; Defined at:
  3107 ;;		line 59 in file "../FixedPoint.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  a               2   34[COMRAM] int 
  3110 ;;  b               2   36[COMRAM] int 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  q               4    0[BANK0 ] volatile long 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  4   34[COMRAM] long 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;Total ram usage:        8 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    4
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;;		_ProcessAC
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text6
  3138  00244C                     __ptext6:
  3139                           	opt stack 0
  3140  00244C                     _sm16x16:
  3141                           	opt stack 26
  3142                           
  3143                           ;FixedPoint.c: 73: volatile int32_t q = 0;
  3144                           
  3145                           ;incstack = 0
  3146                           ;incstack = 0
  3147  00244C  0E00               	movlw	0
  3148  00244E  0100               	movlb	0	; () banked
  3149  002450  0100               	movlb	0	; () banked
  3150  002452  6FBA               	movwf	sm16x16@q& (0+255),b	;volatile
  3151  002454  0E00               	movlw	0
  3152  002456  0100               	movlb	0	; () banked
  3153  002458  6FBB               	movwf	(sm16x16@q+1)& (0+255),b	;volatile
  3154  00245A  0E00               	movlw	0
  3155  00245C  0100               	movlb	0	; () banked
  3156  00245E  6FBC               	movwf	(sm16x16@q+2)& (0+255),b	;volatile
  3157  002460  0E00               	movlw	0
  3158  002462  0100               	movlb	0	; () banked
  3159  002464  6FBD               	movwf	(sm16x16@q+3)& (0+255),b	;volatile
  3160  002466  0E00               	movlw	high sm16x16@a	;# 
  3161  002468  6EEA               	movwf	fsr0h,c	;# 
  3162  00246A  0E23               	movlw	low sm16x16@a	;# 
  3163  00246C  6EE9               	movwf	fsr0l,c	;# 
  3164  00246E  0E00               	movlw	high sm16x16@b	;# 
  3165  002470  6EE2               	movwf	fsr1h,c	;# 
  3166  002472  0E25               	movlw	low sm16x16@b	;# 
  3167  002474  6EE1               	movwf	fsr1l,c	;# 
  3168  002476  50EF               	movf	indf0,w,c	;# 
  3169  002478  02E7               	mulwf	indf1,c	;# 
  3170  00247A  CFF4 F0BB          	movff	prodh,sm16x16@q+1	;# 
  3171  00247E  CFF3 F0BA          	movff	prodl,sm16x16@q	;# 
  3172  002482  50EC               	movf	preinc0,w,c	;# 
  3173  002484  02E4               	mulwf	preinc1,c	;# 
  3174  002486  CFF4 F0BD          	movff	prodh,sm16x16@q+3	;# 
  3175  00248A  CFF3 F0BC          	movff	prodl,sm16x16@q+2	;# 
  3176  00248E  50ED               	movf	postdec0,w,c	;# 
  3177  002490  50EF               	movf	indf0,w,c	;# 
  3178  002492  02E5               	mulwf	postdec1,c	;# 
  3179  002494  50F3               	movf	prodl,w,c	;# 
  3180  002496  27BB               	addwf	sm16x16@q+1,f,b	;# 
  3181  002498  50F4               	movf	prodh,w,c	;# 
  3182  00249A  23BC               	addwfc	sm16x16@q+2,f,b	;# 
  3183  00249C  6AE8               	clrf	wreg,c	;# 
  3184  00249E  23BD               	addwfc	sm16x16@q+3,f,b	;# 
  3185  0024A0  50EE               	movf	postinc0,w,c	;# 
  3186  0024A2  50EF               	movf	indf0,w,c	;# 
  3187  0024A4  02E7               	mulwf	indf1,c	;# 
  3188  0024A6  50F3               	movf	prodl,w,c	;# 
  3189  0024A8  27BB               	addwf	sm16x16@q+1,f,b	;# 
  3190  0024AA  50F4               	movf	prodh,w,c	;# 
  3191  0024AC  23BC               	addwfc	sm16x16@q+2,f,b	;# 
  3192  0024AE  6AE8               	clrf	wreg,c	;# 
  3193  0024B0  23BD               	addwfc	sm16x16@q+3,f,b	;# 
  3194                           
  3195                           ;FixedPoint.c: 114: if(b < 0) {
  3196  0024B2  AE26               	btfss	sm16x16@b+1,7,c
  3197  0024B4  D004               	goto	l453
  3198  0024B6  5123               	movf	sm16x16@a,w,b	;# 
  3199  0024B8  5FBC               	subwf	sm16x16@q+2,f,b	;# 
  3200  0024BA  5124               	movf	sm16x16@a+1,w,b	;# 
  3201  0024BC  5BBD               	subwfb	sm16x16@q+3,f,b	;# 
  3202  0024BE                     l453:
  3203                           
  3204                           ;FixedPoint.c: 119: }
  3205                           ;FixedPoint.c: 121: if(a < 0) {
  3206  0024BE  AE24               	btfss	sm16x16@a+1,7,c
  3207  0024C0  D004               	goto	l454
  3208  0024C2  5125               	movf	sm16x16@b,w,b	;# 
  3209  0024C4  5FBC               	subwf	sm16x16@q+2,f,b	;# 
  3210  0024C6  5126               	movf	sm16x16@b+1,w,b	;# 
  3211  0024C8  5BBD               	subwfb	sm16x16@q+3,f,b	;# 
  3212  0024CA                     l454:
  3213                           
  3214                           ;FixedPoint.c: 126: }
  3215                           ;FixedPoint.c: 128: return q;
  3216  0024CA  C0BA  F023         	movff	sm16x16@q,?_sm16x16	;volatile
  3217  0024CE  C0BB  F024         	movff	sm16x16@q+1,?_sm16x16+1	;volatile
  3218  0024D2  C0BC  F025         	movff	sm16x16@q+2,?_sm16x16+2	;volatile
  3219  0024D6  C0BD  F026         	movff	sm16x16@q+3,?_sm16x16+3	;volatile
  3220  0024DA  0012               	return	
  3221  0024DC                     __end_of_sm16x16:
  3222                           	opt stack 0
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           prodh	equ	0xFF4
  3228                           prodl	equ	0xFF3
  3229                           intcon	equ	0xFF2
  3230                           indf0	equ	0xFEF
  3231                           postinc0	equ	0xFEE
  3232                           postdec0	equ	0xFED
  3233                           preinc0	equ	0xFEC
  3234                           fsr0h	equ	0xFEA
  3235                           fsr0l	equ	0xFE9
  3236                           wreg	equ	0xFE8
  3237                           indf1	equ	0xFE7
  3238                           postinc1	equ	0xFE6
  3239                           postdec1	equ	0xFE5
  3240                           preinc1	equ	0xFE4
  3241                           fsr1h	equ	0xFE2
  3242                           fsr1l	equ	0xFE1
  3243                           indf2	equ	0xFDF
  3244                           postinc2	equ	0xFDE
  3245                           postdec2	equ	0xFDD
  3246                           fsr2h	equ	0xFDA
  3247                           fsr2l	equ	0xFD9
  3248                           status	equ	0xFD8
  3249                           
  3250 ;; *************** function _MeterChannel_init *****************
  3251 ;; Defined at:
  3252 ;;		line 170 in file "../init_ADC.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  c               2    6[BANK0 ] PTR struct MeterChannel
  3255 ;;		 -> ChnlB(45), ChnlA(45), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3270 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    5
  3274 ;; This function calls:
  3275 ;;		_strncpy
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text7
  3282  001CE4                     __ptext7:
  3283                           	opt stack 0
  3284  001CE4                     _MeterChannel_init:
  3285                           	opt stack 25
  3286                           
  3287                           ;init_ADC.c: 171: c->nAVG = 0;
  3288                           
  3289                           ;incstack = 0
  3290                           ;incstack = 0
  3291  001CE4  C0C0  FFD9         	movff	MeterChannel_init@c,fsr2l
  3292  001CE8  C0C1  FFDA         	movff	MeterChannel_init@c+1,fsr2h
  3293  001CEC  0E00               	movlw	0
  3294  001CEE  6EDE               	movwf	postinc2,c
  3295  001CF0  0E00               	movlw	0
  3296  001CF2  6EDE               	movwf	postinc2,c
  3297  001CF4  0E00               	movlw	0
  3298  001CF6  6EDE               	movwf	postinc2,c
  3299  001CF8  0E00               	movlw	0
  3300  001CFA  6EDD               	movwf	postdec2,c
  3301  001CFC  52DD               	movf	postdec2,f,c
  3302  001CFE  52DD               	movf	postdec2,f,c
  3303                           
  3304                           ;init_ADC.c: 172: c->dBAVG = 0;
  3305  001D00  0100               	movlb	0	; () banked
  3306  001D02  EE20 F004          	lfsr	2,4
  3307  001D06  0100               	movlb	0	; () banked
  3308  001D08  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3309  001D0A  26D9               	addwf	fsr2l,f,c
  3310  001D0C  0100               	movlb	0	; () banked
  3311  001D0E  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3312  001D10  22DA               	addwfc	fsr2h,f,c
  3313  001D12  0E00               	movlw	0
  3314  001D14  6EDE               	movwf	postinc2,c
  3315  001D16  0E00               	movlw	0
  3316  001D18  6EDE               	movwf	postinc2,c
  3317  001D1A  0E00               	movlw	0
  3318  001D1C  6EDE               	movwf	postinc2,c
  3319  001D1E  0E00               	movlw	0
  3320  001D20  6EDD               	movwf	postdec2,c
  3321  001D22  52DD               	movf	postdec2,f,c
  3322  001D24  52DD               	movf	postdec2,f,c
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;init_ADC.c: 173: c->nPeak = 0;
  3326  001D26  0100               	movlb	0	; () banked
  3327  001D28  EE20 F008          	lfsr	2,8
  3328  001D2C  0100               	movlb	0	; () banked
  3329  001D2E  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3330  001D30  26D9               	addwf	fsr2l,f,c
  3331  001D32  0100               	movlb	0	; () banked
  3332  001D34  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3333  001D36  22DA               	addwfc	fsr2h,f,c
  3334  001D38  0E00               	movlw	0
  3335  001D3A  6EDE               	movwf	postinc2,c
  3336  001D3C  0E00               	movlw	0
  3337  001D3E  6EDE               	movwf	postinc2,c
  3338  001D40  0E00               	movlw	0
  3339  001D42  6EDE               	movwf	postinc2,c
  3340  001D44  0E00               	movlw	0
  3341  001D46  6EDD               	movwf	postdec2,c
  3342  001D48  52DD               	movf	postdec2,f,c
  3343  001D4A  52DD               	movf	postdec2,f,c
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;init_ADC.c: 174: c->dBPeak = 0;
  3347  001D4C  0100               	movlb	0	; () banked
  3348  001D4E  EE20 F00C          	lfsr	2,12
  3349  001D52  0100               	movlb	0	; () banked
  3350  001D54  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3351  001D56  26D9               	addwf	fsr2l,f,c
  3352  001D58  0100               	movlb	0	; () banked
  3353  001D5A  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3354  001D5C  22DA               	addwfc	fsr2h,f,c
  3355  001D5E  0E00               	movlw	0
  3356  001D60  6EDE               	movwf	postinc2,c
  3357  001D62  0E00               	movlw	0
  3358  001D64  6EDE               	movwf	postinc2,c
  3359  001D66  0E00               	movlw	0
  3360  001D68  6EDE               	movwf	postinc2,c
  3361  001D6A  0E00               	movlw	0
  3362  001D6C  6EDD               	movwf	postdec2,c
  3363  001D6E  52DD               	movf	postdec2,f,c
  3364  001D70  52DD               	movf	postdec2,f,c
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;init_ADC.c: 175: c->nBar = 0;
  3368  001D72  0100               	movlb	0	; () banked
  3369  001D74  EE20 F010          	lfsr	2,16
  3370  001D78  0100               	movlb	0	; () banked
  3371  001D7A  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3372  001D7C  26D9               	addwf	fsr2l,f,c
  3373  001D7E  0100               	movlb	0	; () banked
  3374  001D80  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3375  001D82  22DA               	addwfc	fsr2h,f,c
  3376  001D84  0E00               	movlw	0
  3377  001D86  6EDF               	movwf	indf2,c
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;init_ADC.c: 176: c->nDot = 0;
  3381  001D88  0100               	movlb	0	; () banked
  3382  001D8A  EE20 F011          	lfsr	2,17
  3383  001D8E  0100               	movlb	0	; () banked
  3384  001D90  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3385  001D92  26D9               	addwf	fsr2l,f,c
  3386  001D94  0100               	movlb	0	; () banked
  3387  001D96  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3388  001D98  22DA               	addwfc	fsr2h,f,c
  3389  001D9A  0E00               	movlw	0
  3390  001D9C  6EDF               	movwf	indf2,c
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;init_ADC.c: 177: c->last_t1 = 0;
  3394  001D9E  0100               	movlb	0	; () banked
  3395  001DA0  EE20 F012          	lfsr	2,18
  3396  001DA4  0100               	movlb	0	; () banked
  3397  001DA6  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3398  001DA8  26D9               	addwf	fsr2l,f,c
  3399  001DAA  0100               	movlb	0	; () banked
  3400  001DAC  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3401  001DAE  22DA               	addwfc	fsr2h,f,c
  3402  001DB0  0E00               	movlw	0
  3403  001DB2  6EDE               	movwf	postinc2,c
  3404  001DB4  0E00               	movlw	0
  3405  001DB6  6EDE               	movwf	postinc2,c
  3406  001DB8  0E00               	movlw	0
  3407  001DBA  6EDE               	movwf	postinc2,c
  3408  001DBC  0E00               	movlw	0
  3409  001DBE  6EDD               	movwf	postdec2,c
  3410  001DC0  52DD               	movf	postdec2,f,c
  3411  001DC2  52DD               	movf	postdec2,f,c
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;init_ADC.c: 178: c->last_t2 = 0;
  3415  001DC4  0100               	movlb	0	; () banked
  3416  001DC6  EE20 F016          	lfsr	2,22
  3417  001DCA  0100               	movlb	0	; () banked
  3418  001DCC  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3419  001DCE  26D9               	addwf	fsr2l,f,c
  3420  001DD0  0100               	movlb	0	; () banked
  3421  001DD2  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3422  001DD4  22DA               	addwfc	fsr2h,f,c
  3423  001DD6  0E00               	movlw	0
  3424  001DD8  6EDE               	movwf	postinc2,c
  3425  001DDA  0E00               	movlw	0
  3426  001DDC  6EDE               	movwf	postinc2,c
  3427  001DDE  0E00               	movlw	0
  3428  001DE0  6EDE               	movwf	postinc2,c
  3429  001DE2  0E00               	movlw	0
  3430  001DE4  6EDD               	movwf	postdec2,c
  3431  001DE6  52DD               	movf	postdec2,f,c
  3432  001DE8  52DD               	movf	postdec2,f,c
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;init_ADC.c: 179: c->slope_t1 = 0;
  3436  001DEA  0100               	movlb	0	; () banked
  3437  001DEC  EE20 F01A          	lfsr	2,26
  3438  001DF0  0100               	movlb	0	; () banked
  3439  001DF2  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3440  001DF4  26D9               	addwf	fsr2l,f,c
  3441  001DF6  0100               	movlb	0	; () banked
  3442  001DF8  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3443  001DFA  22DA               	addwfc	fsr2h,f,c
  3444  001DFC  0E00               	movlw	0
  3445  001DFE  6EDF               	movwf	indf2,c
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;init_ADC.c: 180: c->slope_t2 = 0;
  3449  001E00  0100               	movlb	0	; () banked
  3450  001E02  EE20 F01B          	lfsr	2,27
  3451  001E06  0100               	movlb	0	; () banked
  3452  001E08  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3453  001E0A  26D9               	addwf	fsr2l,f,c
  3454  001E0C  0100               	movlb	0	; () banked
  3455  001E0E  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3456  001E10  22DA               	addwfc	fsr2h,f,c
  3457  001E12  0E00               	movlw	0
  3458  001E14  6EDF               	movwf	indf2,c
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;init_ADC.c: 182: c->direction = 0;
  3462  001E16  0100               	movlb	0	; () banked
  3463  001E18  EE20 F01C          	lfsr	2,28
  3464  001E1C  0100               	movlb	0	; () banked
  3465  001E1E  51C0               	movf	MeterChannel_init@c& (0+255),w,b
  3466  001E20  26D9               	addwf	fsr2l,f,c
  3467  001E22  0100               	movlb	0	; () banked
  3468  001E24  51C1               	movf	(MeterChannel_init@c+1)& (0+255),w,b
  3469  001E26  22DA               	addwfc	fsr2h,f,c
  3470  001E28  0E00               	movlw	0
  3471  001E2A  6EDF               	movwf	indf2,c
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;init_ADC.c: 183: strncpy(c->red_gradient, init_red, 8);
  3475  001E2C  0E1D               	movlw	29
  3476  001E2E  0100               	movlb	0	; () banked
  3477  001E30  0100               	movlb	0	; () banked
  3478  001E32  25C0               	addwf	MeterChannel_init@c& (0+255),w,b
  3479  001E34  0100               	movlb	0	; () banked
  3480  001E36  0100               	movlb	0	; () banked
  3481  001E38  6FBA               	movwf	?_strncpy& (0+255),b
  3482  001E3A  0E00               	movlw	0
  3483  001E3C  0100               	movlb	0	; () banked
  3484  001E3E  0100               	movlb	0	; () banked
  3485  001E40  21C1               	addwfc	(MeterChannel_init@c+1)& (0+255),w,b
  3486  001E42  0100               	movlb	0	; () banked
  3487  001E44  6FBB               	movwf	(?_strncpy+1)& (0+255),b
  3488  001E46  0E0F               	movlw	high _init_red
  3489  001E48  0100               	movlb	0	; () banked
  3490  001E4A  0100               	movlb	0	; () banked
  3491  001E4C  6FBD               	movwf	(?_strncpy+3)& (0+255),b
  3492  001E4E  0E08               	movlw	low _init_red
  3493  001E50  0100               	movlb	0	; () banked
  3494  001E52  6FBC               	movwf	(?_strncpy+2)& (0+255),b
  3495  001E54  0E00               	movlw	0
  3496  001E56  0100               	movlb	0	; () banked
  3497  001E58  0100               	movlb	0	; () banked
  3498  001E5A  6FBF               	movwf	(?_strncpy+5)& (0+255),b
  3499  001E5C  0E08               	movlw	8
  3500  001E5E  0100               	movlb	0	; () banked
  3501  001E60  6FBE               	movwf	(?_strncpy+4)& (0+255),b
  3502  001E62  ECB2  F012         	call	_strncpy	;wreg free
  3503                           
  3504                           ;init_ADC.c: 184: strncpy(c->grn_gradient, init_grn, 8);
  3505  001E66  0E25               	movlw	37
  3506  001E68  0100               	movlb	0	; () banked
  3507  001E6A  0100               	movlb	0	; () banked
  3508  001E6C  25C0               	addwf	MeterChannel_init@c& (0+255),w,b
  3509  001E6E  0100               	movlb	0	; () banked
  3510  001E70  0100               	movlb	0	; () banked
  3511  001E72  6FBA               	movwf	?_strncpy& (0+255),b
  3512  001E74  0E00               	movlw	0
  3513  001E76  0100               	movlb	0	; () banked
  3514  001E78  0100               	movlb	0	; () banked
  3515  001E7A  21C1               	addwfc	(MeterChannel_init@c+1)& (0+255),w,b
  3516  001E7C  0100               	movlb	0	; () banked
  3517  001E7E  6FBB               	movwf	(?_strncpy+1)& (0+255),b
  3518  001E80  0E0F               	movlw	high _init_grn
  3519  001E82  0100               	movlb	0	; () banked
  3520  001E84  0100               	movlb	0	; () banked
  3521  001E86  6FBD               	movwf	(?_strncpy+3)& (0+255),b
  3522  001E88  0E00               	movlw	low _init_grn
  3523  001E8A  0100               	movlb	0	; () banked
  3524  001E8C  6FBC               	movwf	(?_strncpy+2)& (0+255),b
  3525  001E8E  0E00               	movlw	0
  3526  001E90  0100               	movlb	0	; () banked
  3527  001E92  0100               	movlb	0	; () banked
  3528  001E94  6FBF               	movwf	(?_strncpy+5)& (0+255),b
  3529  001E96  0E08               	movlw	8
  3530  001E98  0100               	movlb	0	; () banked
  3531  001E9A  6FBE               	movwf	(?_strncpy+4)& (0+255),b
  3532  001E9C  ECB2  F012         	call	_strncpy	;wreg free
  3533  001EA0  0012               	return	
  3534  001EA2                     __end_of_MeterChannel_init:
  3535                           	opt stack 0
  3536                           tblptru	equ	0xFF8
  3537                           tblptrh	equ	0xFF7
  3538                           tblptrl	equ	0xFF6
  3539                           tablat	equ	0xFF5
  3540                           prodh	equ	0xFF4
  3541                           prodl	equ	0xFF3
  3542                           intcon	equ	0xFF2
  3543                           indf0	equ	0xFEF
  3544                           postinc0	equ	0xFEE
  3545                           postdec0	equ	0xFED
  3546                           preinc0	equ	0xFEC
  3547                           fsr0h	equ	0xFEA
  3548                           fsr0l	equ	0xFE9
  3549                           wreg	equ	0xFE8
  3550                           indf1	equ	0xFE7
  3551                           postinc1	equ	0xFE6
  3552                           postdec1	equ	0xFE5
  3553                           preinc1	equ	0xFE4
  3554                           fsr1h	equ	0xFE2
  3555                           fsr1l	equ	0xFE1
  3556                           indf2	equ	0xFDF
  3557                           postinc2	equ	0xFDE
  3558                           postdec2	equ	0xFDD
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function _strncpy *****************
  3564 ;; Defined at:
  3565 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v1.20\sources\common\strncpy.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  to              2    0[BANK0 ] PTR unsigned char 
  3568 ;;		 -> ChnlB(45), ChnlA(45), 
  3569 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  3570 ;;		 -> init_grn(8), init_red(8), 
  3571 ;;  size            2    4[BANK0 ] unsigned int 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  cp              2   36[COMRAM] PTR unsigned char 
  3574 ;;		 -> ChnlB(45), ChnlA(45), 
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  2    0[BANK0 ] PTR unsigned char 
  3577 ;; Registers used:
  3578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3584 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3587 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3588 ;;Total ram usage:       10 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    4
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_MeterChannel_init
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text8
  3599  002564                     __ptext8:
  3600                           	opt stack 0
  3601  002564                     _strncpy:
  3602                           	opt stack 25
  3603                           
  3604                           ;incstack = 0
  3605                           ;incstack = 0
  3606  002564  C0BA  F025         	movff	strncpy@to,strncpy@cp
  3607  002568  C0BB  F026         	movff	strncpy@to+1,strncpy@cp+1
  3608  00256C  D022               	goto	l2596
  3609  00256E                     l2590:
  3610  00256E  0100               	movlb	0	; () banked
  3611  002570  0100               	movlb	0	; () banked
  3612  002572  07BE               	decf	strncpy@size& (0+255),f,b
  3613  002574  A0D8               	btfss	status,0,c
  3614  002576  07BF               	decf	(strncpy@size+1)& (0+255),f,b
  3615                           
  3616                           ; BSR set to: 0
  3617  002578  0100               	movlb	0	; () banked
  3618  00257A  0100               	movlb	0	; () banked
  3619  00257C  51BC               	movf	strncpy@from& (0+255),w,b
  3620  00257E  6E23               	movwf	??_strncpy& (0+255),c
  3621  002580  0100               	movlb	0	; () banked
  3622  002582  0100               	movlb	0	; () banked
  3623  002584  51BD               	movf	(strncpy@from+1)& (0+255),w,b
  3624  002586  6E24               	movwf	(??_strncpy+1)& (0+255),c
  3625  002588  0100               	movlb	0	; () banked
  3626  00258A  4BBC               	infsnz	strncpy@from& (0+255),f,b
  3627  00258C  2BBD               	incf	(strncpy@from+1)& (0+255),f,b
  3628  00258E  C023  FFF6         	movff	??_strncpy,tblptrl
  3629  002592  C024  FFF7         	movff	??_strncpy+1,tblptrh
  3630  002596  0E00               	movlw	low (__mediumconst shr (0+16))
  3631  002598  6EF8               	movwf	tblptru,c
  3632  00259A  C025  FFD9         	movff	strncpy@cp,fsr2l
  3633  00259E  C026  FFDA         	movff	strncpy@cp+1,fsr2h
  3634  0025A2  4A25               	infsnz	strncpy@cp,f,c
  3635  0025A4  2A26               	incf	strncpy@cp+1,f,c
  3636  0025A6  0008               	tblrd		*
  3637  0025A8  CFF5 FFDF          	movff	tablat,indf2
  3638  0025AC  50DF               	movf	indf2,w,c
  3639  0025AE  B4D8               	btfsc	status,2,c
  3640  0025B0  D00F               	goto	l2602
  3641  0025B2                     l2596:
  3642  0025B2  0100               	movlb	0	; () banked
  3643  0025B4  0100               	movlb	0	; () banked
  3644  0025B6  51BF               	movf	(strncpy@size+1)& (0+255),w,b
  3645  0025B8  11BE               	iorwf	strncpy@size& (0+255),w,b
  3646  0025BA  B4D8               	btfsc	status,2,c
  3647  0025BC  D009               	goto	l2602
  3648  0025BE  D7D7               	goto	l2590
  3649  0025C0                     l2598:
  3650                           
  3651                           ; BSR set to: 0
  3652  0025C0  C025  FFD9         	movff	strncpy@cp,fsr2l
  3653  0025C4  C026  FFDA         	movff	strncpy@cp+1,fsr2h
  3654  0025C8  0E00               	movlw	0
  3655  0025CA  6EDF               	movwf	indf2,c
  3656                           
  3657                           ; BSR set to: 0
  3658  0025CC  4A25               	infsnz	strncpy@cp,f,c
  3659  0025CE  2A26               	incf	strncpy@cp+1,f,c
  3660  0025D0                     l2602:
  3661                           
  3662                           ; BSR set to: 0
  3663  0025D0  0100               	movlb	0	; () banked
  3664  0025D2  0100               	movlb	0	; () banked
  3665  0025D4  07BE               	decf	strncpy@size& (0+255),f,b
  3666  0025D6  A0D8               	btfss	status,0,c
  3667  0025D8  07BF               	decf	(strncpy@size+1)& (0+255),f,b
  3668  0025DA  0100               	movlb	0	; () banked
  3669  0025DC  29BE               	incf	strncpy@size& (0+255),w,b
  3670  0025DE  B4D8               	btfsc	status,2,c
  3671  0025E0  29BF               	incf	(strncpy@size+1)& (0+255),w,b
  3672  0025E2  B4D8               	btfsc	status,2,c
  3673                           
  3674                           ; BSR set to: 0
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;	Return value of _strncpy is never used
  3678  0025E4  0012               	return	
  3679  0025E6  D7EC               	goto	l2598
  3680  0025E8                     __end_of_strncpy:
  3681                           	opt stack 0
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           prodh	equ	0xFF4
  3687                           prodl	equ	0xFF3
  3688                           intcon	equ	0xFF2
  3689                           indf0	equ	0xFEF
  3690                           postinc0	equ	0xFEE
  3691                           postdec0	equ	0xFED
  3692                           preinc0	equ	0xFEC
  3693                           fsr0h	equ	0xFEA
  3694                           fsr0l	equ	0xFE9
  3695                           wreg	equ	0xFE8
  3696                           indf1	equ	0xFE7
  3697                           postinc1	equ	0xFE6
  3698                           postdec1	equ	0xFE5
  3699                           preinc1	equ	0xFE4
  3700                           fsr1h	equ	0xFE2
  3701                           fsr1l	equ	0xFE1
  3702                           indf2	equ	0xFDF
  3703                           postinc2	equ	0xFDE
  3704                           postdec2	equ	0xFDD
  3705                           fsr2h	equ	0xFDA
  3706                           fsr2l	equ	0xFD9
  3707                           status	equ	0xFD8
  3708                           
  3709 ;; *************** function _SPI1_init *****************
  3710 ;; Defined at:
  3711 ;;		line 22 in file "../init_SPI.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;		None               void
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3729 ;;Total ram usage:        1 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    4
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text9
  3740  002824                     __ptext9:
  3741                           	opt stack 0
  3742  002824                     _SPI1_init:
  3743                           	opt stack 26
  3744                           
  3745                           ;init_SPI.c: 24: SSPCON1bits.SSPEN = 0;
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;incstack = 0
  3749                           ;incstack = 0
  3750  002824  9AC6               	bcf	4038,5,c	;volatile
  3751                           
  3752                           ;init_SPI.c: 26: LATBbits.LATB4 = 0;
  3753  002826  988A               	bcf	3978,4,c	;volatile
  3754  002828                     l2426:
  3755  002828  388A               	swapf	3978,w,c	;volatile
  3756  00282A  0B01               	andlw	1
  3757  00282C  6E23               	movwf	??_SPI1_init& (0+255),c
  3758  00282E  3881               	swapf	3969,w,c	;volatile
  3759  002830  0B01               	andlw	1
  3760  002832  1823               	xorwf	??_SPI1_init,w,c
  3761  002834  A4D8               	btfss	status,2,c
  3762  002836  D7F8               	goto	l2426
  3763                           
  3764                           ;init_SPI.c: 28: TRISBbits.TRISB4 = 0;
  3765  002838  9893               	bcf	3987,4,c	;volatile
  3766                           
  3767                           ;init_SPI.c: 29: TRISBbits.TRISB5 = 1;
  3768  00283A  8A93               	bsf	3987,5,c	;volatile
  3769                           
  3770                           ;init_SPI.c: 30: TRISCbits.TRISC7 = 0;
  3771  00283C  9E94               	bcf	3988,7,c	;volatile
  3772                           
  3773                           ;init_SPI.c: 44: SSP1STATbits.SMP = 1;
  3774  00283E  8EC7               	bsf	4039,7,c	;volatile
  3775                           
  3776                           ;init_SPI.c: 45: SSP1STATbits.CKE = 0;
  3777  002840  9CC7               	bcf	4039,6,c	;volatile
  3778                           
  3779                           ;init_SPI.c: 70: SSPCON1bits.CKP = 1;
  3780  002842  88C6               	bsf	4038,4,c	;volatile
  3781                           
  3782                           ;init_SPI.c: 71: SSPCON1bits.SSPM = 0;
  3783  002844  90C6               	bcf	4038,0,c	;volatile
  3784  002846  92C6               	bcf	4038,1,c	;volatile
  3785  002848  94C6               	bcf	4038,2,c	;volatile
  3786  00284A  96C6               	bcf	4038,3,c	;volatile
  3787                           
  3788                           ;init_SPI.c: 72: SSPCON1bits.SSPEN = 1;
  3789  00284C  8AC6               	bsf	4038,5,c	;volatile
  3790  00284E  0012               	return	
  3791  002850                     __end_of_SPI1_init:
  3792                           	opt stack 0
  3793                           tblptru	equ	0xFF8
  3794                           tblptrh	equ	0xFF7
  3795                           tblptrl	equ	0xFF6
  3796                           tablat	equ	0xFF5
  3797                           prodh	equ	0xFF4
  3798                           prodl	equ	0xFF3
  3799                           intcon	equ	0xFF2
  3800                           indf0	equ	0xFEF
  3801                           postinc0	equ	0xFEE
  3802                           postdec0	equ	0xFED
  3803                           preinc0	equ	0xFEC
  3804                           fsr0h	equ	0xFEA
  3805                           fsr0l	equ	0xFE9
  3806                           wreg	equ	0xFE8
  3807                           indf1	equ	0xFE7
  3808                           postinc1	equ	0xFE6
  3809                           postdec1	equ	0xFE5
  3810                           preinc1	equ	0xFE4
  3811                           fsr1h	equ	0xFE2
  3812                           fsr1l	equ	0xFE1
  3813                           indf2	equ	0xFDF
  3814                           postinc2	equ	0xFDE
  3815                           postdec2	equ	0xFDD
  3816                           fsr2h	equ	0xFDA
  3817                           fsr2l	equ	0xFD9
  3818                           status	equ	0xFD8
  3819                           
  3820 ;; *************** function _TLC59281_init *****************
  3821 ;; Defined at:
  3822 ;;		line 10 in file "../TLC59281.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;		None               void
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3840 ;;Total ram usage:        1 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    4
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_main
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text10
  3851  002396                     __ptext10:
  3852                           	opt stack 0
  3853  002396                     _TLC59281_init:
  3854                           	opt stack 26
  3855                           
  3856                           ;TLC59281.c: 12: LATBbits.LATB2 = 1;
  3857                           
  3858                           ;incstack = 0
  3859                           ;incstack = 0
  3860  002396  848A               	bsf	3978,2,c	;volatile
  3861                           
  3862                           ;TLC59281.c: 13: LATBbits.LATB3 = 1;
  3863  002398  868A               	bsf	3978,3,c	;volatile
  3864                           
  3865                           ;TLC59281.c: 15: TRISBbits.TRISB2 = 0;
  3866  00239A  9493               	bcf	3987,2,c	;volatile
  3867                           
  3868                           ;TLC59281.c: 16: TRISBbits.TRISB3 = 0;
  3869  00239C  9693               	bcf	3987,3,c	;volatile
  3870                           
  3871                           ;TLC59281.c: 18: LATBbits.LATB2 = 0;
  3872  00239E  948A               	bcf	3978,2,c	;volatile
  3873  0023A0                     l2408:
  3874  0023A0  3081               	rrcf	3969,w,c	;volatile
  3875  0023A2  32E8               	rrcf	wreg,f,c
  3876  0023A4  0B01               	andlw	1
  3877  0023A6  6E23               	movwf	??_TLC59281_init& (0+255),c
  3878  0023A8  308A               	rrcf	3978,w,c	;volatile
  3879  0023AA  32E8               	rrcf	wreg,f,c
  3880  0023AC  0B01               	andlw	1
  3881  0023AE  1823               	xorwf	??_TLC59281_init,w,c
  3882  0023B0  A4D8               	btfss	status,2,c
  3883  0023B2  D7F6               	goto	l2408
  3884                           
  3885                           ;TLC59281.c: 20: LATBbits.LATB2 = 1;
  3886  0023B4  848A               	bsf	3978,2,c	;volatile
  3887  0023B6                     l2410:
  3888  0023B6  3081               	rrcf	3969,w,c	;volatile
  3889  0023B8  32E8               	rrcf	wreg,f,c
  3890  0023BA  0B01               	andlw	1
  3891  0023BC  6E23               	movwf	??_TLC59281_init& (0+255),c
  3892  0023BE  308A               	rrcf	3978,w,c	;volatile
  3893  0023C0  32E8               	rrcf	wreg,f,c
  3894  0023C2  0B01               	andlw	1
  3895  0023C4  1823               	xorwf	??_TLC59281_init,w,c
  3896  0023C6  A4D8               	btfss	status,2,c
  3897  0023C8  D7F6               	goto	l2410
  3898                           
  3899                           ;TLC59281.c: 22: LATBbits.LATB3 = 0;
  3900  0023CA  968A               	bcf	3978,3,c	;volatile
  3901  0023CC                     l2412:
  3902  0023CC  3081               	rrcf	3969,w,c	;volatile
  3903  0023CE  32E8               	rrcf	wreg,f,c
  3904  0023D0  32E8               	rrcf	wreg,f,c
  3905  0023D2  0B01               	andlw	1
  3906  0023D4  6E23               	movwf	??_TLC59281_init& (0+255),c
  3907  0023D6  308A               	rrcf	3978,w,c	;volatile
  3908  0023D8  32E8               	rrcf	wreg,f,c
  3909  0023DA  32E8               	rrcf	wreg,f,c
  3910  0023DC  0B01               	andlw	1
  3911  0023DE  1823               	xorwf	??_TLC59281_init,w,c
  3912  0023E0  A4D8               	btfss	status,2,c
  3913  0023E2  D7F4               	goto	l2412
  3914                           
  3915                           ;TLC59281.c: 24: LATBbits.LATB3 = 1;
  3916  0023E4  868A               	bsf	3978,3,c	;volatile
  3917  0023E6                     l2414:
  3918  0023E6  3081               	rrcf	3969,w,c	;volatile
  3919  0023E8  32E8               	rrcf	wreg,f,c
  3920  0023EA  32E8               	rrcf	wreg,f,c
  3921  0023EC  0B01               	andlw	1
  3922  0023EE  6E23               	movwf	??_TLC59281_init& (0+255),c
  3923  0023F0  308A               	rrcf	3978,w,c	;volatile
  3924  0023F2  32E8               	rrcf	wreg,f,c
  3925  0023F4  32E8               	rrcf	wreg,f,c
  3926  0023F6  0B01               	andlw	1
  3927  0023F8  1823               	xorwf	??_TLC59281_init,w,c
  3928  0023FA  A4D8               	btfss	status,2,c
  3929  0023FC  D7F4               	goto	l2414
  3930                           
  3931                           ;TLC59281.c: 27: TRISAbits.TRISA0 = 0;
  3932  0023FE  9092               	bcf	3986,0,c	;volatile
  3933                           
  3934                           ;TLC59281.c: 28: TRISAbits.TRISA1 = 0;
  3935  002400  9292               	bcf	3986,1,c	;volatile
  3936                           
  3937                           ;TLC59281.c: 30: LATAbits.LATA0 = 0;
  3938  002402  9089               	bcf	3977,0,c	;volatile
  3939  002404                     l2416:
  3940  002404  5080               	movf	3968,w,c	;volatile
  3941  002406  0B01               	andlw	1
  3942  002408  6E23               	movwf	??_TLC59281_init& (0+255),c
  3943  00240A  5089               	movf	3977,w,c	;volatile
  3944  00240C  0B01               	andlw	1
  3945  00240E  1823               	xorwf	??_TLC59281_init,w,c
  3946  002410  A4D8               	btfss	status,2,c
  3947  002412  D7F8               	goto	l2416
  3948                           
  3949                           ;TLC59281.c: 32: LATAbits.LATA0 = 1;
  3950  002414  8089               	bsf	3977,0,c	;volatile
  3951  002416                     l2418:
  3952  002416  5080               	movf	3968,w,c	;volatile
  3953  002418  0B01               	andlw	1
  3954  00241A  6E23               	movwf	??_TLC59281_init& (0+255),c
  3955  00241C  5089               	movf	3977,w,c	;volatile
  3956  00241E  0B01               	andlw	1
  3957  002420  1823               	xorwf	??_TLC59281_init,w,c
  3958  002422  A4D8               	btfss	status,2,c
  3959  002424  D7F8               	goto	l2418
  3960                           
  3961                           ;TLC59281.c: 34: LATAbits.LATA1 = 0;
  3962  002426  9289               	bcf	3977,1,c	;volatile
  3963  002428                     l2420:
  3964  002428  3080               	rrcf	3968,w,c	;volatile
  3965  00242A  0B01               	andlw	1
  3966  00242C  6E23               	movwf	??_TLC59281_init& (0+255),c
  3967  00242E  3089               	rrcf	3977,w,c	;volatile
  3968  002430  0B01               	andlw	1
  3969  002432  1823               	xorwf	??_TLC59281_init,w,c
  3970  002434  A4D8               	btfss	status,2,c
  3971  002436  D7F8               	goto	l2420
  3972                           
  3973                           ;TLC59281.c: 36: LATAbits.LATA1 = 1;
  3974  002438  8289               	bsf	3977,1,c	;volatile
  3975  00243A                     l2422:
  3976  00243A  3080               	rrcf	3968,w,c	;volatile
  3977  00243C  0B01               	andlw	1
  3978  00243E  6E23               	movwf	??_TLC59281_init& (0+255),c
  3979  002440  3089               	rrcf	3977,w,c	;volatile
  3980  002442  0B01               	andlw	1
  3981  002444  1823               	xorwf	??_TLC59281_init,w,c
  3982  002446  B4D8               	btfsc	status,2,c
  3983  002448  0012               	return	
  3984  00244A  D7F7               	goto	l2422
  3985  00244C                     __end_of_TLC59281_init:
  3986                           	opt stack 0
  3987                           tblptru	equ	0xFF8
  3988                           tblptrh	equ	0xFF7
  3989                           tblptrl	equ	0xFF6
  3990                           tablat	equ	0xFF5
  3991                           prodh	equ	0xFF4
  3992                           prodl	equ	0xFF3
  3993                           intcon	equ	0xFF2
  3994                           indf0	equ	0xFEF
  3995                           postinc0	equ	0xFEE
  3996                           postdec0	equ	0xFED
  3997                           preinc0	equ	0xFEC
  3998                           fsr0h	equ	0xFEA
  3999                           fsr0l	equ	0xFE9
  4000                           wreg	equ	0xFE8
  4001                           indf1	equ	0xFE7
  4002                           postinc1	equ	0xFE6
  4003                           postdec1	equ	0xFE5
  4004                           preinc1	equ	0xFE4
  4005                           fsr1h	equ	0xFE2
  4006                           fsr1l	equ	0xFE1
  4007                           indf2	equ	0xFDF
  4008                           postinc2	equ	0xFDE
  4009                           postdec2	equ	0xFDD
  4010                           fsr2h	equ	0xFDA
  4011                           fsr2l	equ	0xFD9
  4012                           status	equ	0xFD8
  4013                           
  4014 ;; *************** function _ECCP2_init *****************
  4015 ;; Defined at:
  4016 ;;		line 102 in file "../init_ECCP.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;		None               void
  4023 ;; Registers used:
  4024 ;;		wreg, status,2
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4034 ;;Total ram usage:        0 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    4
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_main
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text11
  4045  002850                     __ptext11:
  4046                           	opt stack 0
  4047  002850                     _ECCP2_init:
  4048                           	opt stack 26
  4049                           
  4050                           ;init_ECCP.c: 104: CCP2CONbits.CCP2M = 0b1011;
  4051                           
  4052                           ;incstack = 0
  4053                           ;incstack = 0
  4054  002850  50B4               	movf	4020,w,c	;volatile
  4055  002852  0BF0               	andlw	-16
  4056  002854  090B               	iorlw	11
  4057  002856  6EB4               	movwf	4020,c	;volatile
  4058                           
  4059                           ;init_ECCP.c: 105: CCP2CONbits.DC2B = 0;
  4060  002858  0ECF               	movlw	-49
  4061  00285A  16B4               	andwf	4020,f,c	;volatile
  4062                           
  4063                           ;init_ECCP.c: 106: CCP2CONbits.P2M = 0;
  4064  00285C  0E3F               	movlw	-193
  4065  00285E  16B4               	andwf	4020,f,c	;volatile
  4066                           
  4067                           ;init_ECCP.c: 108: CCPR2H = 0x04;
  4068  002860  0E04               	movlw	4
  4069  002862  6EB6               	movwf	4022,c	;volatile
  4070                           
  4071                           ;init_ECCP.c: 109: CCPR2L = 0x80;
  4072  002864  0E80               	movlw	128
  4073  002866  6EB5               	movwf	4021,c	;volatile
  4074                           
  4075                           ;init_ECCP.c: 111: CCPTMRS0bits.C2TSEL = 0b001;
  4076  002868  010F               	movlb	15	; () banked
  4077  00286A  010F               	movlb	15	; () banked
  4078  00286C  5152               	movf	82,w,b	;volatile
  4079  00286E  0BC7               	andlw	-57
  4080  002870  0908               	iorlw	8
  4081  002872  010F               	movlb	15	; () banked
  4082  002874  6F52               	movwf	82,b	;volatile
  4083                           
  4084                           ; BSR set to: 15
  4085                           ;init_ECCP.c: 112: PIR2bits.CCP2IF = 0;
  4086  002876  90A1               	bcf	4001,0,c	;volatile
  4087                           
  4088                           ; BSR set to: 15
  4089                           ;init_ECCP.c: 113: PIE2bits.CCP2IE = 1;
  4090  002878  80A0               	bsf	4000,0,c	;volatile
  4091                           
  4092                           ; BSR set to: 15
  4093  00287A  0012               	return	
  4094  00287C                     __end_of_ECCP2_init:
  4095                           	opt stack 0
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           prodh	equ	0xFF4
  4101                           prodl	equ	0xFF3
  4102                           intcon	equ	0xFF2
  4103                           indf0	equ	0xFEF
  4104                           postinc0	equ	0xFEE
  4105                           postdec0	equ	0xFED
  4106                           preinc0	equ	0xFEC
  4107                           fsr0h	equ	0xFEA
  4108                           fsr0l	equ	0xFE9
  4109                           wreg	equ	0xFE8
  4110                           indf1	equ	0xFE7
  4111                           postinc1	equ	0xFE6
  4112                           postdec1	equ	0xFE5
  4113                           preinc1	equ	0xFE4
  4114                           fsr1h	equ	0xFE2
  4115                           fsr1l	equ	0xFE1
  4116                           indf2	equ	0xFDF
  4117                           postinc2	equ	0xFDE
  4118                           postdec2	equ	0xFDD
  4119                           fsr2h	equ	0xFDA
  4120                           fsr2l	equ	0xFD9
  4121                           status	equ	0xFD8
  4122                           
  4123 ;; *************** function _ECCP1_init *****************
  4124 ;; Defined at:
  4125 ;;		line 82 in file "../init_ECCP.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;		None               void
  4132 ;; Registers used:
  4133 ;;		wreg, status,2
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;Total ram usage:        0 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    4
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_main
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text12
  4154  00287C                     __ptext12:
  4155                           	opt stack 0
  4156  00287C                     _ECCP1_init:
  4157                           	opt stack 26
  4158                           
  4159                           ;init_ECCP.c: 84: CCP1CONbits.CCP1M = 0b1011;
  4160                           
  4161                           ; BSR set to: 15
  4162                           ;incstack = 0
  4163                           ;incstack = 0
  4164  00287C  50BA               	movf	4026,w,c	;volatile
  4165  00287E  0BF0               	andlw	-16
  4166  002880  090B               	iorlw	11
  4167  002882  6EBA               	movwf	4026,c	;volatile
  4168                           
  4169                           ;init_ECCP.c: 85: CCP1CONbits.DC1B = 0;
  4170  002884  0ECF               	movlw	-49
  4171  002886  16BA               	andwf	4026,f,c	;volatile
  4172                           
  4173                           ;init_ECCP.c: 86: CCP1CONbits.P1M = 0;
  4174  002888  0E3F               	movlw	-193
  4175  00288A  16BA               	andwf	4026,f,c	;volatile
  4176                           
  4177                           ;init_ECCP.c: 88: CCPR1H = 0x2E;
  4178  00288C  0E2E               	movlw	46
  4179  00288E  6EBC               	movwf	4028,c	;volatile
  4180                           
  4181                           ;init_ECCP.c: 89: CCPR1L = 0xE0;
  4182  002890  0EE0               	movlw	224
  4183  002892  6EBB               	movwf	4027,c	;volatile
  4184                           
  4185                           ;init_ECCP.c: 91: CCPTMRS0bits.C1TSEL = 0b000;
  4186  002894  010F               	movlb	15	; () banked
  4187  002896  9152               	bcf	82,0,b	;volatile
  4188  002898  010F               	movlb	15	; () banked
  4189  00289A  9352               	bcf	82,1,b	;volatile
  4190  00289C  010F               	movlb	15	; () banked
  4191  00289E  9552               	bcf	82,2,b	;volatile
  4192                           
  4193                           ; BSR set to: 15
  4194                           ;init_ECCP.c: 92: PIR1bits.CCP1IF = 0;
  4195  0028A0  949E               	bcf	3998,2,c	;volatile
  4196                           
  4197                           ; BSR set to: 15
  4198                           ;init_ECCP.c: 93: PIE1bits.CCP1IE = 1;
  4199  0028A2  849D               	bsf	3997,2,c	;volatile
  4200                           
  4201                           ; BSR set to: 15
  4202  0028A4  0012               	return	
  4203  0028A6                     __end_of_ECCP1_init:
  4204                           	opt stack 0
  4205                           tblptru	equ	0xFF8
  4206                           tblptrh	equ	0xFF7
  4207                           tblptrl	equ	0xFF6
  4208                           tablat	equ	0xFF5
  4209                           prodh	equ	0xFF4
  4210                           prodl	equ	0xFF3
  4211                           intcon	equ	0xFF2
  4212                           indf0	equ	0xFEF
  4213                           postinc0	equ	0xFEE
  4214                           postdec0	equ	0xFED
  4215                           preinc0	equ	0xFEC
  4216                           fsr0h	equ	0xFEA
  4217                           fsr0l	equ	0xFE9
  4218                           wreg	equ	0xFE8
  4219                           indf1	equ	0xFE7
  4220                           postinc1	equ	0xFE6
  4221                           postdec1	equ	0xFE5
  4222                           preinc1	equ	0xFE4
  4223                           fsr1h	equ	0xFE2
  4224                           fsr1l	equ	0xFE1
  4225                           indf2	equ	0xFDF
  4226                           postinc2	equ	0xFDE
  4227                           postdec2	equ	0xFDD
  4228                           fsr2h	equ	0xFDA
  4229                           fsr2l	equ	0xFD9
  4230                           status	equ	0xFD8
  4231                           
  4232 ;; *************** function _Timer3_init *****************
  4233 ;; Defined at:
  4234 ;;		line 56 in file "../init_ECCP.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;		None               void
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;Total ram usage:        0 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    4
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_main
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text13
  4263  0028A6                     __ptext13:
  4264                           	opt stack 0
  4265  0028A6                     _Timer3_init:
  4266                           	opt stack 26
  4267                           
  4268                           ;init_ECCP.c: 58: T3CONbits.TMR3ON = 0;
  4269                           
  4270                           ; BSR set to: 15
  4271                           ;incstack = 0
  4272                           ;incstack = 0
  4273  0028A6  9079               	bcf	3961,0,c	;volatile
  4274                           
  4275                           ;init_ECCP.c: 59: T3GCONbits.TMR3GE = 0;
  4276  0028A8  9E97               	bcf	3991,7,c	;volatile
  4277                           
  4278                           ;init_ECCP.c: 61: TMR3H = 0;
  4279  0028AA  0E00               	movlw	0
  4280  0028AC  6E7B               	movwf	3963,c	;volatile
  4281                           
  4282                           ;init_ECCP.c: 62: TMR3L = 0;
  4283  0028AE  0E00               	movlw	0
  4284  0028B0  6E7A               	movwf	3962,c	;volatile
  4285                           
  4286                           ;init_ECCP.c: 64: T3CONbits.TMR3CS = 0b00;
  4287  0028B2  0E3F               	movlw	-193
  4288  0028B4  1679               	andwf	3961,f,c	;volatile
  4289                           
  4290                           ;init_ECCP.c: 65: T3CONbits.T3CKPS = 0b00;
  4291  0028B6  0ECF               	movlw	-49
  4292  0028B8  1679               	andwf	3961,f,c	;volatile
  4293                           
  4294                           ;init_ECCP.c: 66: T3CONbits.T3OSCEN = 0;
  4295  0028BA  9679               	bcf	3961,3,c	;volatile
  4296                           
  4297                           ;init_ECCP.c: 67: T3CONbits.NOT_T3SYNC = 1;
  4298  0028BC  8479               	bsf	3961,2,c	;volatile
  4299                           
  4300                           ;init_ECCP.c: 68: T3CON |= 0b00000010;
  4301  0028BE  8279               	bsf	3961,1,c	;volatile
  4302                           
  4303                           ;init_ECCP.c: 70: PIR2bits.TMR3IF = 0;
  4304  0028C0  92A1               	bcf	4001,1,c	;volatile
  4305                           
  4306                           ;init_ECCP.c: 71: PIE2bits.TMR3IE = 0;
  4307  0028C2  92A0               	bcf	4000,1,c	;volatile
  4308                           
  4309                           ;init_ECCP.c: 73: T3CONbits.TMR3ON = 1;
  4310  0028C4  8079               	bsf	3961,0,c	;volatile
  4311  0028C6  0012               	return	
  4312  0028C8                     __end_of_Timer3_init:
  4313                           	opt stack 0
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           prodh	equ	0xFF4
  4319                           prodl	equ	0xFF3
  4320                           intcon	equ	0xFF2
  4321                           indf0	equ	0xFEF
  4322                           postinc0	equ	0xFEE
  4323                           postdec0	equ	0xFED
  4324                           preinc0	equ	0xFEC
  4325                           fsr0h	equ	0xFEA
  4326                           fsr0l	equ	0xFE9
  4327                           wreg	equ	0xFE8
  4328                           indf1	equ	0xFE7
  4329                           postinc1	equ	0xFE6
  4330                           postdec1	equ	0xFE5
  4331                           preinc1	equ	0xFE4
  4332                           fsr1h	equ	0xFE2
  4333                           fsr1l	equ	0xFE1
  4334                           indf2	equ	0xFDF
  4335                           postinc2	equ	0xFDE
  4336                           postdec2	equ	0xFDD
  4337                           fsr2h	equ	0xFDA
  4338                           fsr2l	equ	0xFD9
  4339                           status	equ	0xFD8
  4340                           
  4341 ;; *************** function _Timer1_init *****************
  4342 ;; Defined at:
  4343 ;;		line 30 in file "../init_ECCP.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;		None               void
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4361 ;;Total ram usage:        0 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    4
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text14
  4372  0028C8                     __ptext14:
  4373                           	opt stack 0
  4374  0028C8                     _Timer1_init:
  4375                           	opt stack 26
  4376                           
  4377                           ;init_ECCP.c: 32: T1CONbits.TMR1ON = 0;
  4378                           
  4379                           ;incstack = 0
  4380                           ;incstack = 0
  4381  0028C8  90CD               	bcf	4045,0,c	;volatile
  4382                           
  4383                           ;init_ECCP.c: 33: T1GCONbits.TMR1GE = 0;
  4384  0028CA  9E9A               	bcf	3994,7,c	;volatile
  4385                           
  4386                           ;init_ECCP.c: 35: TMR1H = 0;
  4387  0028CC  0E00               	movlw	0
  4388  0028CE  6ECF               	movwf	4047,c	;volatile
  4389                           
  4390                           ;init_ECCP.c: 36: TMR1L = 0;
  4391  0028D0  0E00               	movlw	0
  4392  0028D2  6ECE               	movwf	4046,c	;volatile
  4393                           
  4394                           ;init_ECCP.c: 38: T1CONbits.TMR1CS = 0b00;
  4395  0028D4  0E3F               	movlw	-193
  4396  0028D6  16CD               	andwf	4045,f,c	;volatile
  4397                           
  4398                           ;init_ECCP.c: 39: T1CONbits.T1CKPS = 0b00;
  4399  0028D8  0ECF               	movlw	-49
  4400  0028DA  16CD               	andwf	4045,f,c	;volatile
  4401                           
  4402                           ;init_ECCP.c: 40: T1CONbits.T1OSCEN = 0;
  4403  0028DC  96CD               	bcf	4045,3,c	;volatile
  4404                           
  4405                           ;init_ECCP.c: 41: T1CONbits.NOT_T1SYNC = 1;
  4406  0028DE  84CD               	bsf	4045,2,c	;volatile
  4407                           
  4408                           ;init_ECCP.c: 42: T1CON |= 0b00000010;
  4409  0028E0  82CD               	bsf	4045,1,c	;volatile
  4410                           
  4411                           ;init_ECCP.c: 44: PIR1bits.TMR1IF = 0;
  4412  0028E2  909E               	bcf	3998,0,c	;volatile
  4413                           
  4414                           ;init_ECCP.c: 45: PIE1bits.TMR1IE = 0;
  4415  0028E4  909D               	bcf	3997,0,c	;volatile
  4416                           
  4417                           ;init_ECCP.c: 47: T1CONbits.TMR1ON = 1;
  4418  0028E6  80CD               	bsf	4045,0,c	;volatile
  4419  0028E8  0012               	return	
  4420  0028EA                     __end_of_Timer1_init:
  4421                           	opt stack 0
  4422                           tblptru	equ	0xFF8
  4423                           tblptrh	equ	0xFF7
  4424                           tblptrl	equ	0xFF6
  4425                           tablat	equ	0xFF5
  4426                           prodh	equ	0xFF4
  4427                           prodl	equ	0xFF3
  4428                           intcon	equ	0xFF2
  4429                           indf0	equ	0xFEF
  4430                           postinc0	equ	0xFEE
  4431                           postdec0	equ	0xFED
  4432                           preinc0	equ	0xFEC
  4433                           fsr0h	equ	0xFEA
  4434                           fsr0l	equ	0xFE9
  4435                           wreg	equ	0xFE8
  4436                           indf1	equ	0xFE7
  4437                           postinc1	equ	0xFE6
  4438                           postdec1	equ	0xFE5
  4439                           preinc1	equ	0xFE4
  4440                           fsr1h	equ	0xFE2
  4441                           fsr1l	equ	0xFE1
  4442                           indf2	equ	0xFDF
  4443                           postinc2	equ	0xFDE
  4444                           postdec2	equ	0xFDD
  4445                           fsr2h	equ	0xFDA
  4446                           fsr2l	equ	0xFD9
  4447                           status	equ	0xFD8
  4448                           
  4449 ;; *************** function _ADC_init *****************
  4450 ;; Defined at:
  4451 ;;		line 61 in file "../init_ADC.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;		None               void
  4458 ;; Registers used:
  4459 ;;		wreg, status,2
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    4
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text15
  4480  00266A                     __ptext15:
  4481                           	opt stack 0
  4482  00266A                     _ADC_init:
  4483                           	opt stack 26
  4484                           
  4485                           ;init_ADC.c: 64: TRISAbits.TRISA2 = 1;
  4486                           
  4487                           ;incstack = 0
  4488                           ;incstack = 0
  4489  00266A  8492               	bsf	3986,2,c	;volatile
  4490                           
  4491                           ;init_ADC.c: 65: TRISAbits.TRISA3 = 1;
  4492  00266C  8692               	bsf	3986,3,c	;volatile
  4493                           
  4494                           ;init_ADC.c: 66: TRISAbits.TRISA5 = 1;
  4495  00266E  8A92               	bsf	3986,5,c	;volatile
  4496                           
  4497                           ;init_ADC.c: 67: TRISBbits.TRISB1 = 1;
  4498  002670  8293               	bsf	3987,1,c	;volatile
  4499                           
  4500                           ;init_ADC.c: 68: TRISCbits.TRISC2 = 1;
  4501  002672  8494               	bsf	3988,2,c	;volatile
  4502                           
  4503                           ;init_ADC.c: 69: TRISBbits.TRISB0 = 1;
  4504  002674  8093               	bsf	3987,0,c	;volatile
  4505                           
  4506                           ;init_ADC.c: 71: ANCON0bits.PCFG0 = 1;
  4507  002676  010F               	movlb	15	; () banked
  4508  002678  010F               	movlb	15	; () banked
  4509  00267A  8148               	bsf	72,0,b	;volatile
  4510                           
  4511                           ;init_ADC.c: 72: ANCON0bits.PCFG1 = 1;
  4512  00267C  010F               	movlb	15	; () banked
  4513  00267E  010F               	movlb	15	; () banked
  4514  002680  8348               	bsf	72,1,b	;volatile
  4515                           
  4516                           ;init_ADC.c: 73: ANCON0bits.PCFG2 = 0;
  4517  002682  010F               	movlb	15	; () banked
  4518  002684  010F               	movlb	15	; () banked
  4519  002686  9548               	bcf	72,2,b	;volatile
  4520                           
  4521                           ;init_ADC.c: 74: ANCON0bits.PCFG3 = 0;
  4522  002688  010F               	movlb	15	; () banked
  4523  00268A  010F               	movlb	15	; () banked
  4524  00268C  9748               	bcf	72,3,b	;volatile
  4525                           
  4526                           ;init_ADC.c: 75: ANCON0bits.PCFG4 = 0;
  4527  00268E  010F               	movlb	15	; () banked
  4528  002690  010F               	movlb	15	; () banked
  4529  002692  9948               	bcf	72,4,b	;volatile
  4530                           
  4531                           ;init_ADC.c: 76: ANCON1bits.PCFG8 = 1;
  4532  002694  010F               	movlb	15	; () banked
  4533  002696  010F               	movlb	15	; () banked
  4534  002698  8149               	bsf	73,0,b	;volatile
  4535                           
  4536                           ;init_ADC.c: 77: ANCON1bits.PCFG9 = 1;
  4537  00269A  010F               	movlb	15	; () banked
  4538  00269C  010F               	movlb	15	; () banked
  4539  00269E  8349               	bsf	73,1,b	;volatile
  4540                           
  4541                           ;init_ADC.c: 78: ANCON1bits.PCFG10 = 0;
  4542  0026A0  010F               	movlb	15	; () banked
  4543  0026A2  010F               	movlb	15	; () banked
  4544  0026A4  9549               	bcf	73,2,b	;volatile
  4545                           
  4546                           ;init_ADC.c: 79: ANCON1bits.PCFG11 = 0;
  4547  0026A6  010F               	movlb	15	; () banked
  4548  0026A8  010F               	movlb	15	; () banked
  4549  0026AA  9749               	bcf	73,3,b	;volatile
  4550                           
  4551                           ;init_ADC.c: 80: ANCON1bits.PCFG12 = 0;
  4552  0026AC  010F               	movlb	15	; () banked
  4553  0026AE  010F               	movlb	15	; () banked
  4554  0026B0  9949               	bcf	73,4,b	;volatile
  4555                           
  4556                           ;init_ADC.c: 82: ADCON0bits.ADON = 0;
  4557  0026B2  90C2               	bcf	4034,0,c	;volatile
  4558                           
  4559                           ; BSR set to: 15
  4560                           ;init_ADC.c: 83: ADCON0bits.VCFG = 0;
  4561  0026B4  0E3F               	movlw	-193
  4562  0026B6  16C2               	andwf	4034,f,c	;volatile
  4563                           
  4564                           ;init_ADC.c: 84: ADCON0bits.CHS = 2;
  4565  0026B8  50C2               	movf	4034,w,c	;volatile
  4566  0026BA  0BC3               	andlw	-61
  4567  0026BC  0908               	iorlw	8
  4568  0026BE  6EC2               	movwf	4034,c	;volatile
  4569                           
  4570                           ; BSR set to: 15
  4571                           ;init_ADC.c: 86: ADCON1bits.ADFM = 1;
  4572  0026C0  8EC1               	bsf	4033,7,c	;volatile
  4573                           
  4574                           ; BSR set to: 15
  4575                           ;init_ADC.c: 87: ADCON1bits.ADCAL = 0;
  4576  0026C2  9CC1               	bcf	4033,6,c	;volatile
  4577                           
  4578                           ;init_ADC.c: 88: ADCON1bits.ACQT = 0b010;
  4579  0026C4  50C1               	movf	4033,w,c	;volatile
  4580  0026C6  0BC7               	andlw	-57
  4581  0026C8  0910               	iorlw	16
  4582  0026CA  6EC1               	movwf	4033,c	;volatile
  4583                           
  4584                           ;init_ADC.c: 89: ADCON1bits.ADCS = 0b110;
  4585  0026CC  50C1               	movf	4033,w,c	;volatile
  4586  0026CE  0BF8               	andlw	-8
  4587  0026D0  0906               	iorlw	6
  4588  0026D2  6EC1               	movwf	4033,c	;volatile
  4589                           
  4590                           ;init_ADC.c: 91: ADCTRIGbits.TRIGSEL = 0;
  4591  0026D4  0EFC               	movlw	-4
  4592  0026D6  010E               	movlb	14	; () banked
  4593  0026D8  010E               	movlb	14	; () banked
  4594  0026DA  17B8               	andwf	184,f,b	;volatile
  4595                           
  4596                           ; BSR set to: 14
  4597                           ;init_ADC.c: 93: PIR1bits.ADIF = 0;
  4598  0026DC  9C9E               	bcf	3998,6,c	;volatile
  4599                           
  4600                           ; BSR set to: 14
  4601                           ;init_ADC.c: 94: PIE1bits.ADIE = 1;
  4602  0026DE  8C9D               	bsf	3997,6,c	;volatile
  4603                           
  4604                           ; BSR set to: 14
  4605                           ;init_ADC.c: 95: ADCON0bits.ADON = 1;
  4606  0026E0  80C2               	bsf	4034,0,c	;volatile
  4607                           
  4608                           ; BSR set to: 14
  4609  0026E2  0012               	return	
  4610  0026E4                     __end_of_ADC_init:
  4611                           	opt stack 0
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           prodh	equ	0xFF4
  4617                           prodl	equ	0xFF3
  4618                           intcon	equ	0xFF2
  4619                           indf0	equ	0xFEF
  4620                           postinc0	equ	0xFEE
  4621                           postdec0	equ	0xFED
  4622                           preinc0	equ	0xFEC
  4623                           fsr0h	equ	0xFEA
  4624                           fsr0l	equ	0xFE9
  4625                           wreg	equ	0xFE8
  4626                           indf1	equ	0xFE7
  4627                           postinc1	equ	0xFE6
  4628                           postdec1	equ	0xFE5
  4629                           preinc1	equ	0xFE4
  4630                           fsr1h	equ	0xFE2
  4631                           fsr1l	equ	0xFE1
  4632                           indf2	equ	0xFDF
  4633                           postinc2	equ	0xFDE
  4634                           postdec2	equ	0xFDD
  4635                           fsr2h	equ	0xFDA
  4636                           fsr2l	equ	0xFD9
  4637                           status	equ	0xFD8
  4638                           
  4639 ;; *************** function _OSC_init *****************
  4640 ;; Defined at:
  4641 ;;		line 155 in file "../main.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;		None               void
  4648 ;; Registers used:
  4649 ;;		wreg, status,2
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    4
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_main
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text16
  4670  0027F2                     __ptext16:
  4671                           	opt stack 0
  4672  0027F2                     _OSC_init:
  4673                           	opt stack 26
  4674                           
  4675                           ;main.c: 157: OSCTUNEbits.INTSRC = 0;
  4676                           
  4677                           ; BSR set to: 14
  4678                           ;incstack = 0
  4679                           ;incstack = 0
  4680  0027F2  9E9B               	bcf	3995,7,c	;volatile
  4681                           
  4682                           ;main.c: 158: OSCTUNEbits.PLLEN = 1;
  4683  0027F4  8C9B               	bsf	3995,6,c	;volatile
  4684                           
  4685                           ;main.c: 159: OSCTUNEbits.TUN = 0;
  4686  0027F6  909B               	bcf	3995,0,c	;volatile
  4687  0027F8  929B               	bcf	3995,1,c	;volatile
  4688  0027FA  949B               	bcf	3995,2,c	;volatile
  4689  0027FC  969B               	bcf	3995,3,c	;volatile
  4690  0027FE  989B               	bcf	3995,4,c	;volatile
  4691  002800  9A9B               	bcf	3995,5,c	;volatile
  4692                           
  4693                           ;main.c: 161: OSCCONbits.SCS = 0b00;
  4694  002802  0EFC               	movlw	-4
  4695  002804  16D3               	andwf	4051,f,c	;volatile
  4696                           
  4697                           ;main.c: 162: OSCCONbits.IDLEN = 0;
  4698  002806  9ED3               	bcf	4051,7,c	;volatile
  4699                           
  4700                           ;main.c: 163: OSCCONbits.IRCF = 0b111;
  4701  002808  88D3               	bsf	4051,4,c	;volatile
  4702  00280A  8AD3               	bsf	4051,5,c	;volatile
  4703  00280C  8CD3               	bsf	4051,6,c	;volatile
  4704                           
  4705                           ;main.c: 165: OSCCON2bits.SOSCDRV = 1;
  4706  00280E  8887               	bsf	3975,4,c	;volatile
  4707                           
  4708                           ;main.c: 166: OSCCON2bits.SOSCGO = 1;
  4709  002810  8687               	bsf	3975,3,c	;volatile
  4710  002812                     l90:
  4711  002812  A6D3               	btfss	4051,3,c	;volatile
  4712  002814  D7FE               	goto	l90
  4713  002816                     l93:
  4714  002816  A4D3               	btfss	4051,2,c	;volatile
  4715  002818  D7FE               	goto	l93
  4716  00281A                     l96:
  4717  00281A  A487               	btfss	3975,2,c	;volatile
  4718  00281C  D7FE               	goto	l96
  4719  00281E                     l99:
  4720  00281E  AC87               	btfss	3975,6,c	;volatile
  4721  002820  0012               	return	
  4722  002822  D7FD               	goto	l99
  4723  002824                     __end_of_OSC_init:
  4724                           	opt stack 0
  4725                           tblptru	equ	0xFF8
  4726                           tblptrh	equ	0xFF7
  4727                           tblptrl	equ	0xFF6
  4728                           tablat	equ	0xFF5
  4729                           prodh	equ	0xFF4
  4730                           prodl	equ	0xFF3
  4731                           intcon	equ	0xFF2
  4732                           indf0	equ	0xFEF
  4733                           postinc0	equ	0xFEE
  4734                           postdec0	equ	0xFED
  4735                           preinc0	equ	0xFEC
  4736                           fsr0h	equ	0xFEA
  4737                           fsr0l	equ	0xFE9
  4738                           wreg	equ	0xFE8
  4739                           indf1	equ	0xFE7
  4740                           postinc1	equ	0xFE6
  4741                           postdec1	equ	0xFE5
  4742                           preinc1	equ	0xFE4
  4743                           fsr1h	equ	0xFE2
  4744                           fsr1l	equ	0xFE1
  4745                           indf2	equ	0xFDF
  4746                           postinc2	equ	0xFDE
  4747                           postdec2	equ	0xFDD
  4748                           fsr2h	equ	0xFDA
  4749                           fsr2l	equ	0xFD9
  4750                           status	equ	0xFD8
  4751                           
  4752 ;; *************** function _ISR_All *****************
  4753 ;; Defined at:
  4754 ;;		line 200 in file "../main.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;		None
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;		None               void
  4761 ;; Registers used:
  4762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4772 ;;Total ram usage:       14 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    3
  4775 ;; This function calls:
  4776 ;;		_ISR_Timer1
  4777 ;;		_ISR_Timer3
  4778 ;;		_ISR_ADC
  4779 ;;		_ISR_ECCP1
  4780 ;;		_ISR_ECCP2
  4781 ;;		_ISR_SPI1
  4782 ;; This function is called by:
  4783 ;;		Interrupt level 2
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	intcode
  4788  000008                     __pintcode:
  4789                           	opt stack 0
  4790  000008                     _ISR_All:
  4791                           	opt stack 25
  4792                           
  4793                           ;incstack = 0
  4794  000008  CFFA F015          	movff	pclath,??_ISR_All
  4795  00000C  CFFB F016          	movff	pclatu,??_ISR_All+1
  4796  000010  CFE9 F017          	movff	fsr0l,??_ISR_All+2
  4797  000014  CFEA F018          	movff	fsr0h,??_ISR_All+3
  4798  000018  CFE1 F019          	movff	fsr1l,??_ISR_All+4
  4799  00001C  CFE2 F01A          	movff	fsr1h,??_ISR_All+5
  4800  000020  CFD9 F01B          	movff	fsr2l,??_ISR_All+6
  4801  000024  CFDA F01C          	movff	fsr2h,??_ISR_All+7
  4802  000028  CFF3 F01D          	movff	prodl,??_ISR_All+8
  4803  00002C  CFF4 F01E          	movff	prodh,??_ISR_All+9
  4804  000030  CFF6 F01F          	movff	tblptrl,??_ISR_All+10
  4805  000034  CFF7 F020          	movff	tblptrh,??_ISR_All+11
  4806  000038  CFF8 F021          	movff	tblptru,??_ISR_All+12
  4807  00003C  CFF5 F022          	movff	tablat,??_ISR_All+13
  4808  000040                     
  4809                           ;main.c: 202: if(PIR1bits.TMR1IF) {
  4810  000040  A09E               	btfss	3998,0,c	;volatile
  4811  000042  D001               	goto	i2u165_41
  4812  000044  D001               	goto	i2u165_40
  4813  000046                     i2u165_41:
  4814  000046  D005               	goto	i2l108
  4815  000048                     i2u165_40:
  4816  000048                     
  4817                           ;main.c: 203: ISR_Timer1();
  4818  000048  EC91  F014         	call	_ISR_Timer1	;wreg free
  4819  00004C                     
  4820                           ;main.c: 204: PIR1bits.TMR1IF = 0;
  4821  00004C  909E               	bcf	3998,0,c	;volatile
  4822  00004E  D02D               	goto	i2l109
  4823  000050                     
  4824                           ;main.c: 205: return;
  4825  000050  D02C               	goto	i2l109
  4826  000052                     i2l108:
  4827                           
  4828                           ;main.c: 206: }
  4829                           ;main.c: 208: if(PIR2bits.TMR3IF) {
  4830  000052  A2A1               	btfss	4001,1,c	;volatile
  4831  000054  D001               	goto	i2u166_41
  4832  000056  D001               	goto	i2u166_40
  4833  000058                     i2u166_41:
  4834  000058  D005               	goto	i2l110
  4835  00005A                     i2u166_40:
  4836  00005A                     
  4837                           ;main.c: 209: ISR_Timer3();
  4838  00005A  EC90  F014         	call	_ISR_Timer3	;wreg free
  4839  00005E                     
  4840                           ;main.c: 210: PIR2bits.TMR3IF = 0;
  4841  00005E  92A1               	bcf	4001,1,c	;volatile
  4842  000060  D024               	goto	i2l109
  4843  000062                     
  4844                           ;main.c: 211: return;
  4845  000062  D023               	goto	i2l109
  4846  000064                     i2l110:
  4847                           
  4848                           ;main.c: 212: }
  4849                           ;main.c: 214: if(PIR1bits.ADIF) {
  4850  000064  AC9E               	btfss	3998,6,c	;volatile
  4851  000066  D001               	goto	i2u167_41
  4852  000068  D001               	goto	i2u167_40
  4853  00006A                     i2u167_41:
  4854  00006A  D007               	goto	i2l111
  4855  00006C                     i2u167_40:
  4856  00006C                     
  4857                           ;main.c: 215: PIE1bits.ADIE = 0;
  4858  00006C  9C9D               	bcf	3997,6,c	;volatile
  4859  00006E                     
  4860                           ;main.c: 216: ISR_ADC();
  4861  00006E  EC08  F010         	call	_ISR_ADC	;wreg free
  4862  000072                     
  4863                           ;main.c: 217: PIR1bits.ADIF = 0;
  4864  000072  9C9E               	bcf	3998,6,c	;volatile
  4865  000074                     
  4866                           ;main.c: 218: PIE1bits.ADIE = 1;
  4867  000074  8C9D               	bsf	3997,6,c	;volatile
  4868  000076  D019               	goto	i2l109
  4869  000078                     
  4870                           ;main.c: 219: return;
  4871  000078  D018               	goto	i2l109
  4872  00007A                     i2l111:
  4873                           
  4874                           ;main.c: 220: }
  4875                           ;main.c: 222: if(PIR1bits.CCP1IF) {
  4876  00007A  A49E               	btfss	3998,2,c	;volatile
  4877  00007C  D001               	goto	i2u168_41
  4878  00007E  D001               	goto	i2u168_40
  4879  000080                     i2u168_41:
  4880  000080  D004               	goto	i2l2218
  4881  000082                     i2u168_40:
  4882  000082                     
  4883                           ;main.c: 223: ISR_ECCP1();
  4884  000082  EC51  F00F         	call	_ISR_ECCP1	;wreg free
  4885  000086                     
  4886                           ;main.c: 224: PIR1bits.CCP1IF = 0;
  4887  000086  949E               	bcf	3998,2,c	;volatile
  4888  000088  D000               	goto	i2l2218
  4889  00008A                     i2l2218:
  4890                           
  4891                           ;main.c: 225: }
  4892                           ;main.c: 227: if(PIR2bits.CCP2IF) {
  4893  00008A  A0A1               	btfss	4001,0,c	;volatile
  4894  00008C  D001               	goto	i2u169_41
  4895  00008E  D001               	goto	i2u169_40
  4896  000090                     i2u169_41:
  4897  000090  D004               	goto	i2l2224
  4898  000092                     i2u169_40:
  4899  000092                     
  4900                           ;main.c: 228: ISR_ECCP2();
  4901  000092  EC8D  F014         	call	_ISR_ECCP2	;wreg free
  4902  000096                     
  4903                           ;main.c: 229: PIR2bits.CCP2IF = 0;
  4904  000096  90A1               	bcf	4001,0,c	;volatile
  4905  000098  D000               	goto	i2l2224
  4906  00009A                     i2l2224:
  4907                           
  4908                           ;main.c: 230: }
  4909                           ;main.c: 232: if(PIR1bits.SSP1IF) {
  4910  00009A  A69E               	btfss	3998,3,c	;volatile
  4911  00009C  D001               	goto	i2u170_41
  4912  00009E  D001               	goto	i2u170_40
  4913  0000A0                     i2u170_41:
  4914  0000A0  D004               	goto	i2l109
  4915  0000A2                     i2u170_40:
  4916  0000A2                     
  4917                           ;main.c: 233: ISR_SPI1();
  4918  0000A2  EC8F  F014         	call	_ISR_SPI1	;wreg free
  4919  0000A6                     
  4920                           ;main.c: 234: PIR1bits.SSP1IF = 0;
  4921  0000A6  969E               	bcf	3998,3,c	;volatile
  4922  0000A8  D000               	goto	i2l109
  4923  0000AA                     i2l109:
  4924  0000AA  C022  FFF5         	movff	??_ISR_All+13,tablat
  4925  0000AE  C021  FFF8         	movff	??_ISR_All+12,tblptru
  4926  0000B2  C020  FFF7         	movff	??_ISR_All+11,tblptrh
  4927  0000B6  C01F  FFF6         	movff	??_ISR_All+10,tblptrl
  4928  0000BA  C01E  FFF4         	movff	??_ISR_All+9,prodh
  4929  0000BE  C01D  FFF3         	movff	??_ISR_All+8,prodl
  4930  0000C2  C01C  FFDA         	movff	??_ISR_All+7,fsr2h
  4931  0000C6  C01B  FFD9         	movff	??_ISR_All+6,fsr2l
  4932  0000CA  C01A  FFE2         	movff	??_ISR_All+5,fsr1h
  4933  0000CE  C019  FFE1         	movff	??_ISR_All+4,fsr1l
  4934  0000D2  C018  FFEA         	movff	??_ISR_All+3,fsr0h
  4935  0000D6  C017  FFE9         	movff	??_ISR_All+2,fsr0l
  4936  0000DA  C016  FFFB         	movff	??_ISR_All+1,pclatu
  4937  0000DE  C015  FFFA         	movff	??_ISR_All,pclath
  4938  0000E2  0011               	retfie		f
  4939  0000E4                     __end_of_ISR_All:
  4940                           	opt stack 0
  4941                           pclatu	equ	0xFFB
  4942                           pclath	equ	0xFFA
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           intcon	equ	0xFF2
  4950                           indf0	equ	0xFEF
  4951                           postinc0	equ	0xFEE
  4952                           postdec0	equ	0xFED
  4953                           preinc0	equ	0xFEC
  4954                           fsr0h	equ	0xFEA
  4955                           fsr0l	equ	0xFE9
  4956                           wreg	equ	0xFE8
  4957                           indf1	equ	0xFE7
  4958                           postinc1	equ	0xFE6
  4959                           postdec1	equ	0xFE5
  4960                           preinc1	equ	0xFE4
  4961                           fsr1h	equ	0xFE2
  4962                           fsr1l	equ	0xFE1
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           fsr2h	equ	0xFDA
  4967                           fsr2l	equ	0xFD9
  4968                           status	equ	0xFD8
  4969                           
  4970 ;; *************** function _ISR_SPI1 *****************
  4971 ;; Defined at:
  4972 ;;		line 101 in file "../init_SPI.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;		None
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;		None               void
  4979 ;; Registers used:
  4980 ;;		None
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4990 ;;Total ram usage:        0 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_ISR_All
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text18
  5000  00291E                     __ptext18:
  5001                           	opt stack 0
  5002  00291E                     _ISR_SPI1:
  5003                           	opt stack 27
  5004                           
  5005                           ;incstack = 0
  5006                           ;incstack = 0
  5007  00291E  0012               	return	
  5008  002920                     __end_of_ISR_SPI1:
  5009                           	opt stack 0
  5010                           pclatu	equ	0xFFB
  5011                           pclath	equ	0xFFA
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           prodh	equ	0xFF4
  5017                           prodl	equ	0xFF3
  5018                           intcon	equ	0xFF2
  5019                           indf0	equ	0xFEF
  5020                           postinc0	equ	0xFEE
  5021                           postdec0	equ	0xFED
  5022                           preinc0	equ	0xFEC
  5023                           fsr0h	equ	0xFEA
  5024                           fsr0l	equ	0xFE9
  5025                           wreg	equ	0xFE8
  5026                           indf1	equ	0xFE7
  5027                           postinc1	equ	0xFE6
  5028                           postdec1	equ	0xFE5
  5029                           preinc1	equ	0xFE4
  5030                           fsr1h	equ	0xFE2
  5031                           fsr1l	equ	0xFE1
  5032                           indf2	equ	0xFDF
  5033                           postinc2	equ	0xFDE
  5034                           postdec2	equ	0xFDD
  5035                           fsr2h	equ	0xFDA
  5036                           fsr2l	equ	0xFD9
  5037                           status	equ	0xFD8
  5038                           
  5039 ;; *************** function _ISR_ECCP2 *****************
  5040 ;; Defined at:
  5041 ;;		line 157 in file "../init_ECCP.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;		None               void
  5048 ;; Registers used:
  5049 ;;		None
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;Total ram usage:        0 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_ISR_All
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text19
  5069  00291A                     __ptext19:
  5070                           	opt stack 0
  5071  00291A                     _ISR_ECCP2:
  5072                           	opt stack 27
  5073                           
  5074                           ;init_ECCP.c: 158: ADCON0bits.GO = 1;
  5075                           
  5076                           ;incstack = 0
  5077                           ;incstack = 0
  5078  00291A  82C2               	bsf	4034,1,c	;volatile
  5079  00291C  0012               	return	
  5080  00291E                     __end_of_ISR_ECCP2:
  5081                           	opt stack 0
  5082                           pclatu	equ	0xFFB
  5083                           pclath	equ	0xFFA
  5084                           tblptru	equ	0xFF8
  5085                           tblptrh	equ	0xFF7
  5086                           tblptrl	equ	0xFF6
  5087                           tablat	equ	0xFF5
  5088                           prodh	equ	0xFF4
  5089                           prodl	equ	0xFF3
  5090                           intcon	equ	0xFF2
  5091                           indf0	equ	0xFEF
  5092                           postinc0	equ	0xFEE
  5093                           postdec0	equ	0xFED
  5094                           preinc0	equ	0xFEC
  5095                           fsr0h	equ	0xFEA
  5096                           fsr0l	equ	0xFE9
  5097                           wreg	equ	0xFE8
  5098                           indf1	equ	0xFE7
  5099                           postinc1	equ	0xFE6
  5100                           postdec1	equ	0xFE5
  5101                           preinc1	equ	0xFE4
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           indf2	equ	0xFDF
  5105                           postinc2	equ	0xFDE
  5106                           postdec2	equ	0xFDD
  5107                           fsr2h	equ	0xFDA
  5108                           fsr2l	equ	0xFD9
  5109                           status	equ	0xFD8
  5110                           
  5111 ;; *************** function _ISR_ECCP1 *****************
  5112 ;; Defined at:
  5113 ;;		line 125 in file "../init_ECCP.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  leds            2   18[COMRAM] unsigned int 
  5118 ;;  grn             1   17[COMRAM] unsigned char 
  5119 ;;  red             1   16[COMRAM] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;		None               void
  5122 ;; Registers used:
  5123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5130 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;Total ram usage:        5 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    2
  5136 ;; This function calls:
  5137 ;;		_interleave
  5138 ;;		_maskBar
  5139 ;;		_maskDot
  5140 ;;		_reverse
  5141 ;;		_write_LEDs
  5142 ;; This function is called by:
  5143 ;;		_ISR_All
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text20
  5148  001EA2                     __ptext20:
  5149                           	opt stack 0
  5150  001EA2                     _ISR_ECCP1:
  5151                           	opt stack 25
  5152                           
  5153                           ;init_ECCP.c: 127: meterbuff leds = 0;
  5154                           
  5155                           ;incstack = 0
  5156                           ;incstack = 0
  5157  001EA2  0E00               	movlw	0
  5158  001EA4  6E14               	movwf	ISR_ECCP1@leds+1,c
  5159  001EA6  0E00               	movlw	0
  5160  001EA8  6E13               	movwf	ISR_ECCP1@leds,c
  5161                           
  5162                           ;init_ECCP.c: 128: uint8_t red, grn;
  5163                           ;init_ECCP.c: 130: if(++channel >= 2) channel = 0;
  5164  001EAA  2A34               	incf	_channel,f,c
  5165  001EAC  0E01               	movlw	1
  5166  001EAE  6434               	cpfsgt	_channel& (0+255),c
  5167  001EB0  D004               	goto	i2l2158
  5168  001EB2  6E10               	movwf	??_ISR_ECCP1& (0+255),c
  5169  001EB4  0E00               	movlw	0
  5170  001EB6  6E34               	movwf	_channel,c
  5171  001EB8  5010               	movf	??_ISR_ECCP1& (0+255),w,c
  5172  001EBA                     i2l2158:
  5173                           
  5174                           ;init_ECCP.c: 131: if(channel == 0)
  5175  001EBA  6634               	tstfsz	_channel,c
  5176  001EBC  D008               	goto	i2l2164
  5177                           
  5178                           ;init_ECCP.c: 132: if(++slice >= 8) slice = 0;
  5179  001EBE  2A36               	incf	_slice,f,c
  5180  001EC0  0E07               	movlw	7
  5181  001EC2  6436               	cpfsgt	_slice& (0+255),c
  5182  001EC4  D004               	goto	i2l2164
  5183  001EC6  6E10               	movwf	??_ISR_ECCP1& (0+255),c
  5184  001EC8  0E00               	movlw	0
  5185  001ECA  6E36               	movwf	_slice,c
  5186  001ECC  5010               	movf	??_ISR_ECCP1& (0+255),w,c
  5187  001ECE                     i2l2164:
  5188                           
  5189                           ;init_ECCP.c: 134: if(channel) {
  5190  001ECE  5034               	movf	_channel,w,c
  5191  001ED0  B4D8               	btfsc	status,2,c
  5192  001ED2  D04A               	goto	i2l2178
  5193                           
  5194                           ;init_ECCP.c: 135: red = ChnlB.red_gradient[slice];
  5195  001ED4  5036               	movf	_slice,w,c
  5196  001ED6  0D01               	mullw	1
  5197  001ED8  0100               	movlb	0	; () banked
  5198  001EDA  0EAA               	movlw	low (_ChnlB+29)
  5199  001EDC  24F3               	addwf	prodl,w,c
  5200  001EDE  6ED9               	movwf	fsr2l,c
  5201  001EE0  0100               	movlb	0	; () banked
  5202  001EE2  0E00               	movlw	high (_ChnlB+29)
  5203  001EE4  20F4               	addwfc	prodh,w,c
  5204  001EE6  6EDA               	movwf	fsr2h,c
  5205  001EE8  50DF               	movf	indf2,w,c
  5206  001EEA  6E11               	movwf	ISR_ECCP1@red,c
  5207                           
  5208                           ;init_ECCP.c: 136: grn = ChnlB.grn_gradient[slice];
  5209  001EEC  5036               	movf	_slice,w,c
  5210  001EEE  0D01               	mullw	1
  5211  001EF0  0100               	movlb	0	; () banked
  5212  001EF2  0EB2               	movlw	low (_ChnlB+37)
  5213  001EF4  24F3               	addwf	prodl,w,c
  5214  001EF6  6ED9               	movwf	fsr2l,c
  5215  001EF8  0100               	movlb	0	; () banked
  5216  001EFA  0E00               	movlw	high (_ChnlB+37)
  5217  001EFC  20F4               	addwfc	prodh,w,c
  5218  001EFE  6EDA               	movwf	fsr2h,c
  5219  001F00  50DF               	movf	indf2,w,c
  5220  001F02  6E12               	movwf	ISR_ECCP1@grn,c
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;init_ECCP.c: 137: leds = interleave(red, grn);
  5224  001F04  C011  F001         	movff	ISR_ECCP1@red,?_interleave
  5225  001F08  C012  F002         	movff	ISR_ECCP1@grn,?_interleave+1
  5226  001F0C  EC6D  F011         	call	_interleave	;wreg free
  5227  001F10  C001  F013         	movff	?_interleave,ISR_ECCP1@leds
  5228  001F14  C002  F014         	movff	?_interleave+1,ISR_ECCP1@leds+1
  5229                           
  5230                           ;init_ECCP.c: 138: leds = maskBar(ChnlB.nBar, leds);
  5231  001F18  0100               	movlb	0	; () banked
  5232  001F1A  C09D  F001         	movff	_ChnlB+16,?_maskBar
  5233  001F1E  6A02               	clrf	?_maskBar+1,c
  5234  001F20  C013  F003         	movff	ISR_ECCP1@leds,?_maskBar+2
  5235  001F24  C014  F004         	movff	ISR_ECCP1@leds+1,?_maskBar+3
  5236  001F28  ECD1  F013         	call	_maskBar	;wreg free
  5237  001F2C  C001  F013         	movff	?_maskBar,ISR_ECCP1@leds
  5238  001F30  C002  F014         	movff	?_maskBar+1,ISR_ECCP1@leds+1
  5239                           
  5240                           ;init_ECCP.c: 139: leds = maskDot(ChnlB.nDot, leds);
  5241  001F34  0100               	movlb	0	; () banked
  5242  001F36  C09E  F001         	movff	_ChnlB+17,?_maskDot
  5243  001F3A  6A02               	clrf	?_maskDot+1,c
  5244  001F3C  C013  F003         	movff	ISR_ECCP1@leds,?_maskDot+2
  5245  001F40  C014  F004         	movff	ISR_ECCP1@leds+1,?_maskDot+3
  5246  001F44  EC6E  F012         	call	_maskDot	;wreg free
  5247  001F48  C001  F013         	movff	?_maskDot,ISR_ECCP1@leds
  5248  001F4C  C002  F014         	movff	?_maskDot+1,ISR_ECCP1@leds+1
  5249                           
  5250                           ;init_ECCP.c: 140: if(ChnlB.direction)
  5251  001F50  0100               	movlb	0	; () banked
  5252  001F52  0100               	movlb	0	; () banked
  5253  001F54  51A9               	movf	(_ChnlB+28)& (0+255),w,b
  5254  001F56  B4D8               	btfsc	status,2,c
  5255  001F58  D054               	goto	i2l376
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;init_ECCP.c: 141: leds = reverse(leds);
  5259  001F5A  C013  F001         	movff	ISR_ECCP1@leds,?_reverse
  5260  001F5E  C014  F002         	movff	ISR_ECCP1@leds+1,?_reverse+1
  5261  001F62  EC72  F013         	call	_reverse	;wreg free
  5262  001F66  D049               	goto	L2
  5263  001F68                     i2l2178:
  5264                           
  5265                           ;init_ECCP.c: 143: red = ChnlA.red_gradient[slice];
  5266  001F68  5036               	movf	_slice,w,c
  5267  001F6A  0D01               	mullw	1
  5268  001F6C  0100               	movlb	0	; () banked
  5269  001F6E  0E7D               	movlw	low (_ChnlA+29)
  5270  001F70  24F3               	addwf	prodl,w,c
  5271  001F72  6ED9               	movwf	fsr2l,c
  5272  001F74  0100               	movlb	0	; () banked
  5273  001F76  0E00               	movlw	high (_ChnlA+29)
  5274  001F78  20F4               	addwfc	prodh,w,c
  5275  001F7A  6EDA               	movwf	fsr2h,c
  5276  001F7C  50DF               	movf	indf2,w,c
  5277  001F7E  6E11               	movwf	ISR_ECCP1@red,c
  5278                           
  5279                           ;init_ECCP.c: 144: grn = ChnlA.grn_gradient[slice];
  5280  001F80  5036               	movf	_slice,w,c
  5281  001F82  0D01               	mullw	1
  5282  001F84  0100               	movlb	0	; () banked
  5283  001F86  0E85               	movlw	low (_ChnlA+37)
  5284  001F88  24F3               	addwf	prodl,w,c
  5285  001F8A  6ED9               	movwf	fsr2l,c
  5286  001F8C  0100               	movlb	0	; () banked
  5287  001F8E  0E00               	movlw	high (_ChnlA+37)
  5288  001F90  20F4               	addwfc	prodh,w,c
  5289  001F92  6EDA               	movwf	fsr2h,c
  5290  001F94  50DF               	movf	indf2,w,c
  5291  001F96  6E12               	movwf	ISR_ECCP1@grn,c
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;init_ECCP.c: 145: leds = interleave(red, grn);
  5295  001F98  C011  F001         	movff	ISR_ECCP1@red,?_interleave
  5296  001F9C  C012  F002         	movff	ISR_ECCP1@grn,?_interleave+1
  5297  001FA0  EC6D  F011         	call	_interleave	;wreg free
  5298  001FA4  C001  F013         	movff	?_interleave,ISR_ECCP1@leds
  5299  001FA8  C002  F014         	movff	?_interleave+1,ISR_ECCP1@leds+1
  5300                           
  5301                           ;init_ECCP.c: 146: leds = maskBar(ChnlA.nBar, leds);
  5302  001FAC  0100               	movlb	0	; () banked
  5303  001FAE  C070  F001         	movff	_ChnlA+16,?_maskBar
  5304  001FB2  6A02               	clrf	?_maskBar+1,c
  5305  001FB4  C013  F003         	movff	ISR_ECCP1@leds,?_maskBar+2
  5306  001FB8  C014  F004         	movff	ISR_ECCP1@leds+1,?_maskBar+3
  5307  001FBC  ECD1  F013         	call	_maskBar	;wreg free
  5308  001FC0  C001  F013         	movff	?_maskBar,ISR_ECCP1@leds
  5309  001FC4  C002  F014         	movff	?_maskBar+1,ISR_ECCP1@leds+1
  5310                           
  5311                           ;init_ECCP.c: 147: leds = maskDot(ChnlA.nDot, leds);
  5312  001FC8  0100               	movlb	0	; () banked
  5313  001FCA  C071  F001         	movff	_ChnlA+17,?_maskDot
  5314  001FCE  6A02               	clrf	?_maskDot+1,c
  5315  001FD0  C013  F003         	movff	ISR_ECCP1@leds,?_maskDot+2
  5316  001FD4  C014  F004         	movff	ISR_ECCP1@leds+1,?_maskDot+3
  5317  001FD8  EC6E  F012         	call	_maskDot	;wreg free
  5318  001FDC  C001  F013         	movff	?_maskDot,ISR_ECCP1@leds
  5319  001FE0  C002  F014         	movff	?_maskDot+1,ISR_ECCP1@leds+1
  5320                           
  5321                           ;init_ECCP.c: 148: if(ChnlA.direction)
  5322  001FE4  0100               	movlb	0	; () banked
  5323  001FE6  0100               	movlb	0	; () banked
  5324  001FE8  517C               	movf	(_ChnlA+28)& (0+255),w,b
  5325  001FEA  B4D8               	btfsc	status,2,c
  5326  001FEC  D00A               	goto	i2l376
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;init_ECCP.c: 149: leds = reverse(leds);
  5330  001FEE  C013  F001         	movff	ISR_ECCP1@leds,?_reverse
  5331  001FF2  C014  F002         	movff	ISR_ECCP1@leds+1,?_reverse+1
  5332  001FF6  EC72  F013         	call	_reverse	;wreg free
  5333  001FFA                     L2:
  5334  001FFA  C001  F013         	movff	?_reverse,ISR_ECCP1@leds
  5335  001FFE  C002  F014         	movff	?_reverse+1,ISR_ECCP1@leds+1
  5336  002002                     i2l376:
  5337                           
  5338                           ;init_ECCP.c: 150: }
  5339                           ;init_ECCP.c: 152: write_LEDs(leds);
  5340  002002  C013  F003         	movff	ISR_ECCP1@leds,?_write_LEDs
  5341  002006  C014  F004         	movff	ISR_ECCP1@leds+1,?_write_LEDs+1
  5342  00200A  EC90  F010         	call	_write_LEDs	;wreg free
  5343  00200E  0012               	return	
  5344  002010                     __end_of_ISR_ECCP1:
  5345                           	opt stack 0
  5346                           pclatu	equ	0xFFB
  5347                           pclath	equ	0xFFA
  5348                           tblptru	equ	0xFF8
  5349                           tblptrh	equ	0xFF7
  5350                           tblptrl	equ	0xFF6
  5351                           tablat	equ	0xFF5
  5352                           prodh	equ	0xFF4
  5353                           prodl	equ	0xFF3
  5354                           intcon	equ	0xFF2
  5355                           indf0	equ	0xFEF
  5356                           postinc0	equ	0xFEE
  5357                           postdec0	equ	0xFED
  5358                           preinc0	equ	0xFEC
  5359                           fsr0h	equ	0xFEA
  5360                           fsr0l	equ	0xFE9
  5361                           wreg	equ	0xFE8
  5362                           indf1	equ	0xFE7
  5363                           postinc1	equ	0xFE6
  5364                           postdec1	equ	0xFE5
  5365                           preinc1	equ	0xFE4
  5366                           fsr1h	equ	0xFE2
  5367                           fsr1l	equ	0xFE1
  5368                           indf2	equ	0xFDF
  5369                           postinc2	equ	0xFDE
  5370                           postdec2	equ	0xFDD
  5371                           fsr2h	equ	0xFDA
  5372                           fsr2l	equ	0xFD9
  5373                           status	equ	0xFD8
  5374                           
  5375 ;; *************** function _write_LEDs *****************
  5376 ;; Defined at:
  5377 ;;		line 104 in file "../TLC59281.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  leds            2    2[COMRAM] unsigned int 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  hi8             1    6[COMRAM] unsigned char 
  5382 ;;  lo8             1    5[COMRAM] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;		None               void
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5395 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5396 ;;Total ram usage:        5 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    1
  5399 ;; This function calls:
  5400 ;;		_SPI1_write
  5401 ;; This function is called by:
  5402 ;;		_ISR_ECCP1
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text21
  5407  002120                     __ptext21:
  5408                           	opt stack 0
  5409  002120                     _write_LEDs:
  5410                           	opt stack 25
  5411                           
  5412                           ;TLC59281.c: 106: char lo8 = (char)(leds & 0x00FF);
  5413                           
  5414                           ;incstack = 0
  5415                           ;incstack = 0
  5416  002120  C003  F006         	movff	write_LEDs@leds,write_LEDs@lo8
  5417                           
  5418                           ;TLC59281.c: 107: char hi8 = (char)((leds & 0xFF00) >> 8);
  5419  002124  5004               	movf	write_LEDs@leds+1,w,c
  5420  002126  6E07               	movwf	write_LEDs@hi8,c
  5421                           
  5422                           ;TLC59281.c: 110: LATBbits.LATB3 = 1;
  5423  002128  868A               	bsf	3978,3,c	;volatile
  5424  00212A                     i2l2126:
  5425  00212A  3081               	rrcf	3969,w,c	;volatile
  5426  00212C  32E8               	rrcf	wreg,f,c
  5427  00212E  32E8               	rrcf	wreg,f,c
  5428  002130  0B01               	andlw	1
  5429  002132  6E05               	movwf	??_write_LEDs& (0+255),c
  5430  002134  308A               	rrcf	3978,w,c	;volatile
  5431  002136  32E8               	rrcf	wreg,f,c
  5432  002138  32E8               	rrcf	wreg,f,c
  5433  00213A  0B01               	andlw	1
  5434  00213C  1805               	xorwf	??_write_LEDs,w,c
  5435  00213E  A4D8               	btfss	status,2,c
  5436  002140  D7F4               	goto	i2l2126
  5437                           
  5438                           ;TLC59281.c: 112: SPI1_write(hi8);
  5439  002142  C007  F001         	movff	write_LEDs@hi8,?_SPI1_write
  5440  002146  EC82  F014         	call	_SPI1_write	;wreg free
  5441                           
  5442                           ;TLC59281.c: 113: SPI1_write(lo8);
  5443  00214A  C006  F001         	movff	write_LEDs@lo8,?_SPI1_write
  5444  00214E  EC82  F014         	call	_SPI1_write	;wreg free
  5445                           
  5446                           ;TLC59281.c: 115: LATBbits.LATB2 = 0;
  5447  002152  948A               	bcf	3978,2,c	;volatile
  5448  002154                     i2l2132:
  5449  002154  3081               	rrcf	3969,w,c	;volatile
  5450  002156  32E8               	rrcf	wreg,f,c
  5451  002158  0B01               	andlw	1
  5452  00215A  6E05               	movwf	??_write_LEDs& (0+255),c
  5453  00215C  308A               	rrcf	3978,w,c	;volatile
  5454  00215E  32E8               	rrcf	wreg,f,c
  5455  002160  0B01               	andlw	1
  5456  002162  1805               	xorwf	??_write_LEDs,w,c
  5457  002164  A4D8               	btfss	status,2,c
  5458  002166  D7F6               	goto	i2l2132
  5459                           
  5460                           ;TLC59281.c: 117: LATBbits.LATB2 = 1;
  5461  002168  848A               	bsf	3978,2,c	;volatile
  5462  00216A                     i2l2134:
  5463  00216A  3081               	rrcf	3969,w,c	;volatile
  5464  00216C  32E8               	rrcf	wreg,f,c
  5465  00216E  0B01               	andlw	1
  5466  002170  6E05               	movwf	??_write_LEDs& (0+255),c
  5467  002172  308A               	rrcf	3978,w,c	;volatile
  5468  002174  32E8               	rrcf	wreg,f,c
  5469  002176  0B01               	andlw	1
  5470  002178  1805               	xorwf	??_write_LEDs,w,c
  5471  00217A  A4D8               	btfss	status,2,c
  5472  00217C  D7F6               	goto	i2l2134
  5473                           
  5474                           ;TLC59281.c: 119: LATBbits.LATB2 = 0;
  5475  00217E  948A               	bcf	3978,2,c	;volatile
  5476  002180                     i2l2136:
  5477  002180  3081               	rrcf	3969,w,c	;volatile
  5478  002182  32E8               	rrcf	wreg,f,c
  5479  002184  0B01               	andlw	1
  5480  002186  6E05               	movwf	??_write_LEDs& (0+255),c
  5481  002188  308A               	rrcf	3978,w,c	;volatile
  5482  00218A  32E8               	rrcf	wreg,f,c
  5483  00218C  0B01               	andlw	1
  5484  00218E  1805               	xorwf	??_write_LEDs,w,c
  5485  002190  A4D8               	btfss	status,2,c
  5486  002192  D7F6               	goto	i2l2136
  5487                           
  5488                           ;TLC59281.c: 122: if(channel) {
  5489  002194  5034               	movf	_channel,w,c
  5490  002196  B4D8               	btfsc	status,2,c
  5491  002198  D013               	goto	i2l193
  5492                           
  5493                           ;TLC59281.c: 123: LATAbits.LATA0 = 1;
  5494  00219A  8089               	bsf	3977,0,c	;volatile
  5495  00219C                     i2l2142:
  5496  00219C  5080               	movf	3968,w,c	;volatile
  5497  00219E  0B01               	andlw	1
  5498  0021A0  6E05               	movwf	??_write_LEDs& (0+255),c
  5499  0021A2  5089               	movf	3977,w,c	;volatile
  5500  0021A4  0B01               	andlw	1
  5501  0021A6  1805               	xorwf	??_write_LEDs,w,c
  5502  0021A8  A4D8               	btfss	status,2,c
  5503  0021AA  D7F8               	goto	i2l2142
  5504                           
  5505                           ;TLC59281.c: 125: LATAbits.LATA1 = 0;
  5506  0021AC  9289               	bcf	3977,1,c	;volatile
  5507  0021AE                     i2l2144:
  5508  0021AE  3080               	rrcf	3968,w,c	;volatile
  5509  0021B0  0B01               	andlw	1
  5510  0021B2  6E05               	movwf	??_write_LEDs& (0+255),c
  5511  0021B4  3089               	rrcf	3977,w,c	;volatile
  5512  0021B6  0B01               	andlw	1
  5513  0021B8  1805               	xorwf	??_write_LEDs,w,c
  5514  0021BA  B4D8               	btfsc	status,2,c
  5515  0021BC  D013               	goto	i2l200
  5516  0021BE  D7F7               	goto	i2l2144
  5517  0021C0                     i2l193:
  5518                           
  5519                           ;TLC59281.c: 128: LATAbits.LATA0 = 0;
  5520  0021C0  9089               	bcf	3977,0,c	;volatile
  5521  0021C2                     i2l2146:
  5522  0021C2  5080               	movf	3968,w,c	;volatile
  5523  0021C4  0B01               	andlw	1
  5524  0021C6  6E05               	movwf	??_write_LEDs& (0+255),c
  5525  0021C8  5089               	movf	3977,w,c	;volatile
  5526  0021CA  0B01               	andlw	1
  5527  0021CC  1805               	xorwf	??_write_LEDs,w,c
  5528  0021CE  A4D8               	btfss	status,2,c
  5529  0021D0  D7F8               	goto	i2l2146
  5530                           
  5531                           ;TLC59281.c: 130: LATAbits.LATA1 = 1;
  5532  0021D2  8289               	bsf	3977,1,c	;volatile
  5533  0021D4                     i2l2148:
  5534  0021D4  3080               	rrcf	3968,w,c	;volatile
  5535  0021D6  0B01               	andlw	1
  5536  0021D8  6E05               	movwf	??_write_LEDs& (0+255),c
  5537  0021DA  3089               	rrcf	3977,w,c	;volatile
  5538  0021DC  0B01               	andlw	1
  5539  0021DE  1805               	xorwf	??_write_LEDs,w,c
  5540  0021E0  A4D8               	btfss	status,2,c
  5541  0021E2  D7F8               	goto	i2l2148
  5542  0021E4                     i2l200:
  5543                           
  5544                           ;TLC59281.c: 132: }
  5545                           ;TLC59281.c: 134: LATBbits.LATB3 = 0;
  5546  0021E4  968A               	bcf	3978,3,c	;volatile
  5547  0021E6                     i2l2150:
  5548  0021E6  3081               	rrcf	3969,w,c	;volatile
  5549  0021E8  32E8               	rrcf	wreg,f,c
  5550  0021EA  32E8               	rrcf	wreg,f,c
  5551  0021EC  0B01               	andlw	1
  5552  0021EE  6E05               	movwf	??_write_LEDs& (0+255),c
  5553  0021F0  308A               	rrcf	3978,w,c	;volatile
  5554  0021F2  32E8               	rrcf	wreg,f,c
  5555  0021F4  32E8               	rrcf	wreg,f,c
  5556  0021F6  0B01               	andlw	1
  5557  0021F8  1805               	xorwf	??_write_LEDs,w,c
  5558  0021FA  B4D8               	btfsc	status,2,c
  5559                           
  5560                           ;TLC59281.c: 137: return;
  5561  0021FC  0012               	return	
  5562  0021FE  D7F3               	goto	i2l2150
  5563  002200                     __end_of_write_LEDs:
  5564                           	opt stack 0
  5565                           pclatu	equ	0xFFB
  5566                           pclath	equ	0xFFA
  5567                           tblptru	equ	0xFF8
  5568                           tblptrh	equ	0xFF7
  5569                           tblptrl	equ	0xFF6
  5570                           tablat	equ	0xFF5
  5571                           prodh	equ	0xFF4
  5572                           prodl	equ	0xFF3
  5573                           intcon	equ	0xFF2
  5574                           indf0	equ	0xFEF
  5575                           postinc0	equ	0xFEE
  5576                           postdec0	equ	0xFED
  5577                           preinc0	equ	0xFEC
  5578                           fsr0h	equ	0xFEA
  5579                           fsr0l	equ	0xFE9
  5580                           wreg	equ	0xFE8
  5581                           indf1	equ	0xFE7
  5582                           postinc1	equ	0xFE6
  5583                           postdec1	equ	0xFE5
  5584                           preinc1	equ	0xFE4
  5585                           fsr1h	equ	0xFE2
  5586                           fsr1l	equ	0xFE1
  5587                           indf2	equ	0xFDF
  5588                           postinc2	equ	0xFDE
  5589                           postdec2	equ	0xFDD
  5590                           fsr2h	equ	0xFDA
  5591                           fsr2l	equ	0xFD9
  5592                           status	equ	0xFD8
  5593                           
  5594 ;; *************** function _SPI1_write *****************
  5595 ;; Defined at:
  5596 ;;		line 76 in file "../init_SPI.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  d               1    0[COMRAM] unsigned char 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  TempVar         1    1[COMRAM] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      char 
  5603 ;; Registers used:
  5604 ;;		None
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5610 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5614 ;;Total ram usage:        2 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_write_LEDs
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text22
  5624  002904                     __ptext22:
  5625                           	opt stack 0
  5626  002904                     _SPI1_write:
  5627                           	opt stack 25
  5628                           
  5629                           ;init_SPI.c: 78: unsigned char TempVar;
  5630                           ;init_SPI.c: 80: TempVar = SSP1BUF;
  5631                           
  5632                           ;incstack = 0
  5633                           ;incstack = 0
  5634  002904  CFC9 F002          	movff	4041,SPI1_write@TempVar	;volatile
  5635                           
  5636                           ;init_SPI.c: 81: PIR1bits.SSP1IF = 0;
  5637  002908  969E               	bcf	3998,3,c	;volatile
  5638                           
  5639                           ;init_SPI.c: 82: SSP1CON1bits.WCOL = 0;
  5640  00290A  9EC6               	bcf	4038,7,c	;volatile
  5641                           
  5642                           ;init_SPI.c: 83: SSP1BUF = d;
  5643  00290C  C001  FFC9         	movff	SPI1_write@d,4041	;volatile
  5644                           
  5645                           ;init_SPI.c: 84: if (SSP1CON1 & 0x80)
  5646  002910  BEC6               	btfsc	4038,7,c	;volatile
  5647  002912  0012               	return	
  5648  002914                     i2l419:
  5649  002914  B69E               	btfsc	3998,3,c	;volatile
  5650                           
  5651                           ;init_SPI.c: 89: return (0);
  5652                           ;	Return value of _SPI1_write is never used
  5653  002916  0012               	return	
  5654  002918  D7FD               	goto	i2l419
  5655  00291A                     __end_of_SPI1_write:
  5656                           	opt stack 0
  5657                           pclatu	equ	0xFFB
  5658                           pclath	equ	0xFFA
  5659                           tblptru	equ	0xFF8
  5660                           tblptrh	equ	0xFF7
  5661                           tblptrl	equ	0xFF6
  5662                           tablat	equ	0xFF5
  5663                           prodh	equ	0xFF4
  5664                           prodl	equ	0xFF3
  5665                           intcon	equ	0xFF2
  5666                           indf0	equ	0xFEF
  5667                           postinc0	equ	0xFEE
  5668                           postdec0	equ	0xFED
  5669                           preinc0	equ	0xFEC
  5670                           fsr0h	equ	0xFEA
  5671                           fsr0l	equ	0xFE9
  5672                           wreg	equ	0xFE8
  5673                           indf1	equ	0xFE7
  5674                           postinc1	equ	0xFE6
  5675                           postdec1	equ	0xFE5
  5676                           preinc1	equ	0xFE4
  5677                           fsr1h	equ	0xFE2
  5678                           fsr1l	equ	0xFE1
  5679                           indf2	equ	0xFDF
  5680                           postinc2	equ	0xFDE
  5681                           postdec2	equ	0xFDD
  5682                           fsr2h	equ	0xFDA
  5683                           fsr2l	equ	0xFD9
  5684                           status	equ	0xFD8
  5685                           
  5686 ;; *************** function _reverse *****************
  5687 ;; Defined at:
  5688 ;;		line 87 in file "../TLC59281.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  v               2    0[COMRAM] unsigned int 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  s               2    6[COMRAM] int 
  5693 ;;  r               2    4[COMRAM] unsigned int 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  2    0[COMRAM] unsigned int 
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5704 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5706 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5707 ;;Total ram usage:        8 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; This function calls:
  5710 ;;		Nothing
  5711 ;; This function is called by:
  5712 ;;		_ISR_ECCP1
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text23
  5717  0026E4                     __ptext23:
  5718                           	opt stack 0
  5719  0026E4                     _reverse:
  5720                           	opt stack 26
  5721                           
  5722                           ;TLC59281.c: 89: meterbuff r = v & 0b11;
  5723                           
  5724                           ;incstack = 0
  5725                           ;incstack = 0
  5726  0026E4  0E03               	movlw	3
  5727  0026E6  1401               	andwf	reverse@v,w,c
  5728  0026E8  6E05               	movwf	reverse@r,c
  5729  0026EA  0E00               	movlw	0
  5730  0026EC  1402               	andwf	reverse@v+1,w,c
  5731  0026EE  6E06               	movwf	reverse@r+1,c
  5732                           
  5733                           ;TLC59281.c: 90: int s = sizeof(v) * 8 / 2 - 1;
  5734  0026F0  0E00               	movlw	0
  5735  0026F2  6E08               	movwf	reverse@s+1,c
  5736  0026F4  0E07               	movlw	7
  5737  0026F6  6E07               	movwf	reverse@s,c
  5738  0026F8  5008               	movf	reverse@s+1,w,c
  5739  0026FA  0A80               	xorlw	128
  5740  0026FC  0F80               	addlw	-128
  5741  0026FE  0E01               	movlw	1
  5742  002700  B4D8               	btfsc	status,2,c
  5743  002702  5C07               	subwf	reverse@s,w,c
  5744  002704  A0D8               	btfss	status,0,c
  5745  002706  D01A               	goto	i2l177
  5746                           
  5747                           ;TLC59281.c: 93: {
  5748                           ;TLC59281.c: 94: r <<= 2;
  5749  002708  90D8               	bcf	status,0,c
  5750  00270A  3605               	rlcf	reverse@r,f,c
  5751  00270C  3606               	rlcf	reverse@r+1,f,c
  5752  00270E  90D8               	bcf	status,0,c
  5753  002710  3605               	rlcf	reverse@r,f,c
  5754  002712  3606               	rlcf	reverse@r+1,f,c
  5755                           
  5756                           ;TLC59281.c: 95: v >>= 2;
  5757  002714  90D8               	bcf	status,0,c
  5758  002716  3202               	rrcf	reverse@v+1,f,c
  5759  002718  3201               	rrcf	reverse@v,f,c
  5760  00271A  90D8               	bcf	status,0,c
  5761  00271C  3202               	rrcf	reverse@v+1,f,c
  5762  00271E  3201               	rrcf	reverse@v,f,c
  5763                           
  5764                           ;TLC59281.c: 96: r |= v & 0b11;
  5765  002720  0E03               	movlw	3
  5766  002722  1401               	andwf	reverse@v,w,c
  5767  002724  6E03               	movwf	??_reverse& (0+255),c
  5768  002726  0E00               	movlw	0
  5769  002728  1402               	andwf	reverse@v+1,w,c
  5770  00272A  6E04               	movwf	(??_reverse+1)& (0+255),c
  5771  00272C  5003               	movf	??_reverse,w,c
  5772  00272E  1205               	iorwf	reverse@r,f,c
  5773  002730  5004               	movf	??_reverse+1,w,c
  5774  002732  1206               	iorwf	reverse@r+1,f,c
  5775  002734  0607               	decf	reverse@s,f,c
  5776  002736  A0D8               	btfss	status,0,c
  5777  002738  0608               	decf	reverse@s+1,f,c
  5778  00273A  D7DE               	goto	L3
  5779  00273C                     i2l177:
  5780                           
  5781                           ;TLC59281.c: 97: }
  5782                           ;TLC59281.c: 99: return r;
  5783  00273C  C005  F001         	movff	reverse@r,?_reverse
  5784  002740  C006  F002         	movff	reverse@r+1,?_reverse+1
  5785  002744  0012               	return	
  5786  002746                     __end_of_reverse:
  5787                           	opt stack 0
  5788                           pclatu	equ	0xFFB
  5789                           pclath	equ	0xFFA
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           prodh	equ	0xFF4
  5795                           prodl	equ	0xFF3
  5796                           intcon	equ	0xFF2
  5797                           indf0	equ	0xFEF
  5798                           postinc0	equ	0xFEE
  5799                           postdec0	equ	0xFED
  5800                           preinc0	equ	0xFEC
  5801                           fsr0h	equ	0xFEA
  5802                           fsr0l	equ	0xFE9
  5803                           wreg	equ	0xFE8
  5804                           indf1	equ	0xFE7
  5805                           postinc1	equ	0xFE6
  5806                           postdec1	equ	0xFE5
  5807                           preinc1	equ	0xFE4
  5808                           fsr1h	equ	0xFE2
  5809                           fsr1l	equ	0xFE1
  5810                           indf2	equ	0xFDF
  5811                           postinc2	equ	0xFDE
  5812                           postdec2	equ	0xFDD
  5813                           fsr2h	equ	0xFDA
  5814                           fsr2l	equ	0xFD9
  5815                           status	equ	0xFD8
  5816                           
  5817 ;; *************** function _maskDot *****************
  5818 ;; Defined at:
  5819 ;;		line 72 in file "../TLC59281.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  a               2    0[COMRAM] int 
  5822 ;;  leds            2    2[COMRAM] unsigned int 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  mask            2   11[COMRAM] unsigned int 
  5825 ;;  bitnum          2    9[COMRAM] int 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  2    0[COMRAM] unsigned int 
  5828 ;; Registers used:
  5829 ;;		wreg, status,2, status,0
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;Total ram usage:       13 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_ISR_ECCP1
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text24
  5849  0024DC                     __ptext24:
  5850                           	opt stack 0
  5851  0024DC                     _maskDot:
  5852                           	opt stack 26
  5853                           
  5854                           ;TLC59281.c: 74: int bitnum = 8 * sizeof(int);
  5855                           
  5856                           ;incstack = 0
  5857                           ;incstack = 0
  5858  0024DC  0E00               	movlw	0
  5859  0024DE  6E0B               	movwf	maskDot@bitnum+1,c
  5860  0024E0  0E10               	movlw	16
  5861  0024E2  6E0A               	movwf	maskDot@bitnum,c
  5862                           
  5863                           ;TLC59281.c: 75: meterbuff mask = 1;
  5864  0024E4  0E00               	movlw	0
  5865  0024E6  6E0D               	movwf	maskDot@mask+1,c
  5866  0024E8  0E01               	movlw	1
  5867  0024EA  6E0C               	movwf	maskDot@mask,c
  5868                           
  5869                           ;TLC59281.c: 76: a--;
  5870  0024EC  0601               	decf	maskDot@a,f,c
  5871  0024EE  A0D8               	btfss	status,0,c
  5872  0024F0  0602               	decf	maskDot@a+1,f,c
  5873                           
  5874                           ;TLC59281.c: 78: if(a < bitnum) {
  5875  0024F2  5002               	movf	maskDot@a+1,w,c
  5876  0024F4  0A80               	xorlw	128
  5877  0024F6  6E05               	movwf	??_maskDot& (0+255),c
  5878  0024F8  500A               	movf	maskDot@bitnum,w,c
  5879  0024FA  5C01               	subwf	maskDot@a,w,c
  5880  0024FC  500B               	movf	maskDot@bitnum+1,w,c
  5881  0024FE  0A80               	xorlw	128
  5882  002500  5805               	subwfb	??_maskDot& (0+255),w,c
  5883  002502  B0D8               	btfsc	status,0,c
  5884  002504  D02A               	goto	i2l2026
  5885                           
  5886                           ;TLC59281.c: 79: leds &= ~(mask << (a*2));
  5887  002506  90D8               	bcf	status,0,c
  5888  002508  3401               	rlcf	maskDot@a,w,c
  5889  00250A  6E05               	movwf	??_maskDot& (0+255),c
  5890  00250C  C00C  F006         	movff	maskDot@mask,??_maskDot+1
  5891  002510  C00D  F007         	movff	maskDot@mask+1,??_maskDot+2
  5892  002514  2A05               	incf	??_maskDot,f,c
  5893  002516  D003               	goto	i2u134_44
  5894  002518                     i2u134_45:
  5895  002518  90D8               	bcf	status,0,c
  5896  00251A  3606               	rlcf	??_maskDot+1,f,c
  5897  00251C  3607               	rlcf	??_maskDot+2,f,c
  5898  00251E                     i2u134_44:
  5899  00251E  2E05               	decfsz	??_maskDot,f,c
  5900  002520  D7FB               	goto	i2u134_45
  5901  002522  1C06               	comf	??_maskDot+1,w,c
  5902  002524  6E08               	movwf	(??_maskDot+3)& (0+255),c
  5903  002526  1C07               	comf	??_maskDot+2,w,c
  5904  002528  6E09               	movwf	(??_maskDot+4)& (0+255),c
  5905  00252A  5008               	movf	??_maskDot+3,w,c
  5906  00252C  1603               	andwf	maskDot@leds,f,c
  5907  00252E  5009               	movf	??_maskDot+4,w,c
  5908  002530  1604               	andwf	maskDot@leds+1,f,c
  5909                           
  5910                           ;TLC59281.c: 80: leds |= (mask << (a*2+1));
  5911  002532  90D8               	bcf	status,0,c
  5912  002534  3401               	rlcf	maskDot@a,w,c
  5913  002536  6E05               	movwf	??_maskDot& (0+255),c
  5914  002538  0E01               	movlw	1
  5915  00253A  2605               	addwf	??_maskDot,f,c
  5916  00253C  C00C  F006         	movff	maskDot@mask,??_maskDot+1
  5917  002540  C00D  F007         	movff	maskDot@mask+1,??_maskDot+2
  5918  002544  2A05               	incf	??_maskDot,f,c
  5919  002546  D003               	goto	i2u135_44
  5920  002548                     i2u135_45:
  5921  002548  90D8               	bcf	status,0,c
  5922  00254A  3606               	rlcf	??_maskDot+1,f,c
  5923  00254C  3607               	rlcf	??_maskDot+2,f,c
  5924  00254E                     i2u135_44:
  5925  00254E  2E05               	decfsz	??_maskDot,f,c
  5926  002550  D7FB               	goto	i2u135_45
  5927  002552  5006               	movf	??_maskDot+1,w,c
  5928  002554  1203               	iorwf	maskDot@leds,f,c
  5929  002556  5007               	movf	??_maskDot+2,w,c
  5930  002558  1204               	iorwf	maskDot@leds+1,f,c
  5931  00255A                     i2l2026:
  5932                           
  5933                           ;TLC59281.c: 81: }
  5934                           ;TLC59281.c: 83: return leds;
  5935  00255A  C003  F001         	movff	maskDot@leds,?_maskDot
  5936  00255E  C004  F002         	movff	maskDot@leds+1,?_maskDot+1
  5937  002562  0012               	return	
  5938  002564                     __end_of_maskDot:
  5939                           	opt stack 0
  5940                           pclatu	equ	0xFFB
  5941                           pclath	equ	0xFFA
  5942                           tblptru	equ	0xFF8
  5943                           tblptrh	equ	0xFF7
  5944                           tblptrl	equ	0xFF6
  5945                           tablat	equ	0xFF5
  5946                           prodh	equ	0xFF4
  5947                           prodl	equ	0xFF3
  5948                           intcon	equ	0xFF2
  5949                           indf0	equ	0xFEF
  5950                           postinc0	equ	0xFEE
  5951                           postdec0	equ	0xFED
  5952                           preinc0	equ	0xFEC
  5953                           fsr0h	equ	0xFEA
  5954                           fsr0l	equ	0xFE9
  5955                           wreg	equ	0xFE8
  5956                           indf1	equ	0xFE7
  5957                           postinc1	equ	0xFE6
  5958                           postdec1	equ	0xFE5
  5959                           preinc1	equ	0xFE4
  5960                           fsr1h	equ	0xFE2
  5961                           fsr1l	equ	0xFE1
  5962                           indf2	equ	0xFDF
  5963                           postinc2	equ	0xFDE
  5964                           postdec2	equ	0xFDD
  5965                           fsr2h	equ	0xFDA
  5966                           fsr2l	equ	0xFD9
  5967                           status	equ	0xFD8
  5968                           
  5969 ;; *************** function _maskBar *****************
  5970 ;; Defined at:
  5971 ;;		line 58 in file "../TLC59281.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  a               2    0[COMRAM] int 
  5974 ;;  leds            2    2[COMRAM] unsigned int 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  bitnum          2    9[COMRAM] int 
  5977 ;;  mask            2    7[COMRAM] unsigned int 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  2    0[COMRAM] unsigned int 
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5990 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5991 ;;Total ram usage:       11 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_ISR_ECCP1
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text25
  6001  0027A2                     __ptext25:
  6002                           	opt stack 0
  6003  0027A2                     _maskBar:
  6004                           	opt stack 26
  6005                           
  6006                           ;TLC59281.c: 60: int bitnum = sizeof(colorbuff) * 8;
  6007                           
  6008                           ;incstack = 0
  6009                           ;incstack = 0
  6010  0027A2  0E00               	movlw	0
  6011  0027A4  6E0B               	movwf	maskBar@bitnum+1,c
  6012  0027A6  0E08               	movlw	8
  6013  0027A8  6E0A               	movwf	maskBar@bitnum,c
  6014                           
  6015                           ;TLC59281.c: 61: meterbuff mask = 0xFFFF;
  6016  0027AA  6808               	setf	maskBar@mask,c
  6017  0027AC  6809               	setf	maskBar@mask+1,c
  6018                           
  6019                           ;TLC59281.c: 63: if(a <= bitnum) {
  6020  0027AE  500B               	movf	maskBar@bitnum+1,w,c
  6021  0027B0  0A80               	xorlw	128
  6022  0027B2  6E05               	movwf	??_maskBar& (0+255),c
  6023  0027B4  5001               	movf	maskBar@a,w,c
  6024  0027B6  5C0A               	subwf	maskBar@bitnum,w,c
  6025  0027B8  5002               	movf	maskBar@a+1,w,c
  6026  0027BA  0A80               	xorlw	128
  6027  0027BC  5805               	subwfb	??_maskBar& (0+255),w,c
  6028  0027BE  A0D8               	btfss	status,0,c
  6029  0027C0  D013               	goto	i2l2014
  6030                           
  6031                           ;TLC59281.c: 64: mask >>= (bitnum - a) * 2;
  6032  0027C2  5001               	movf	maskBar@a,w,c
  6033  0027C4  0800               	sublw	0
  6034  0027C6  240A               	addwf	maskBar@bitnum,w,c
  6035  0027C8  6E05               	movwf	??_maskBar& (0+255),c
  6036  0027CA  90D8               	bcf	status,0,c
  6037  0027CC  3405               	rlcf	??_maskBar,w,c
  6038  0027CE  6E06               	movwf	(??_maskBar+1)& (0+255),c
  6039  0027D0  2806               	incf	??_maskBar+1,w,c
  6040  0027D2  6E07               	movwf	(??_maskBar+2)& (0+255),c
  6041  0027D4  D003               	goto	i2u132_40
  6042  0027D6                     i2u132_45:
  6043  0027D6  90D8               	bcf	status,0,c
  6044  0027D8  3209               	rrcf	maskBar@mask+1,f,c
  6045  0027DA  3208               	rrcf	maskBar@mask,f,c
  6046  0027DC                     i2u132_40:
  6047  0027DC  2E07               	decfsz	(??_maskBar+2)& (0+255),f,c
  6048  0027DE  D7FB               	goto	i2u132_45
  6049                           
  6050                           ;TLC59281.c: 65: leds &= mask;
  6051  0027E0  5008               	movf	maskBar@mask,w,c
  6052  0027E2  1603               	andwf	maskBar@leds,f,c
  6053  0027E4  5009               	movf	maskBar@mask+1,w,c
  6054  0027E6  1604               	andwf	maskBar@leds+1,f,c
  6055  0027E8                     i2l2014:
  6056                           
  6057                           ;TLC59281.c: 66: }
  6058                           ;TLC59281.c: 68: return leds;
  6059  0027E8  C003  F001         	movff	maskBar@leds,?_maskBar
  6060  0027EC  C004  F002         	movff	maskBar@leds+1,?_maskBar+1
  6061  0027F0  0012               	return	
  6062  0027F2                     __end_of_maskBar:
  6063                           	opt stack 0
  6064                           pclatu	equ	0xFFB
  6065                           pclath	equ	0xFFA
  6066                           tblptru	equ	0xFF8
  6067                           tblptrh	equ	0xFF7
  6068                           tblptrl	equ	0xFF6
  6069                           tablat	equ	0xFF5
  6070                           prodh	equ	0xFF4
  6071                           prodl	equ	0xFF3
  6072                           intcon	equ	0xFF2
  6073                           indf0	equ	0xFEF
  6074                           postinc0	equ	0xFEE
  6075                           postdec0	equ	0xFED
  6076                           preinc0	equ	0xFEC
  6077                           fsr0h	equ	0xFEA
  6078                           fsr0l	equ	0xFE9
  6079                           wreg	equ	0xFE8
  6080                           indf1	equ	0xFE7
  6081                           postinc1	equ	0xFE6
  6082                           postdec1	equ	0xFE5
  6083                           preinc1	equ	0xFE4
  6084                           fsr1h	equ	0xFE2
  6085                           fsr1l	equ	0xFE1
  6086                           indf2	equ	0xFDF
  6087                           postinc2	equ	0xFDE
  6088                           postdec2	equ	0xFDD
  6089                           fsr2h	equ	0xFDA
  6090                           fsr2l	equ	0xFD9
  6091                           status	equ	0xFD8
  6092                           
  6093 ;; *************** function _interleave *****************
  6094 ;; Defined at:
  6095 ;;		line 41 in file "../TLC59281.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  red             1    0[COMRAM] unsigned char 
  6098 ;;  grn             1    1[COMRAM] unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  i               2   13[COMRAM] int 
  6101 ;;  mask            2   11[COMRAM] unsigned int 
  6102 ;;  leds            2    9[COMRAM] unsigned int 
  6103 ;;  bitnum          2    7[COMRAM] int 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  2    0[COMRAM] unsigned int 
  6106 ;; Registers used:
  6107 ;;		wreg, status,2, status,0
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6114 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6115 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;Total ram usage:       15 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_ISR_ECCP1
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text26
  6127  0022DA                     __ptext26:
  6128                           	opt stack 0
  6129  0022DA                     _interleave:
  6130                           	opt stack 26
  6131                           
  6132                           ;TLC59281.c: 43: int bitnum = sizeof(colorbuff) * 8;
  6133                           
  6134                           ;incstack = 0
  6135                           ;incstack = 0
  6136  0022DA  0E00               	movlw	0
  6137  0022DC  6E09               	movwf	interleave@bitnum+1,c
  6138  0022DE  0E08               	movlw	8
  6139  0022E0  6E08               	movwf	interleave@bitnum,c
  6140                           
  6141                           ;TLC59281.c: 44: meterbuff leds = 0;
  6142  0022E2  0E00               	movlw	0
  6143  0022E4  6E0B               	movwf	interleave@leds+1,c
  6144  0022E6  0E00               	movlw	0
  6145  0022E8  6E0A               	movwf	interleave@leds,c
  6146                           
  6147                           ;TLC59281.c: 45: meterbuff mask = 1;
  6148  0022EA  0E00               	movlw	0
  6149  0022EC  6E0D               	movwf	interleave@mask+1,c
  6150  0022EE  0E01               	movlw	1
  6151  0022F0  6E0C               	movwf	interleave@mask,c
  6152                           
  6153                           ;TLC59281.c: 47: int i = 0;
  6154  0022F2  0E00               	movlw	0
  6155  0022F4  6E0F               	movwf	interleave@i+1,c
  6156  0022F6  0E00               	movlw	0
  6157  0022F8  6E0E               	movwf	interleave@i,c
  6158                           
  6159                           ;TLC59281.c: 49: for (i = 0; i < bitnum; i++) {
  6160  0022FA  0E00               	movlw	0
  6161  0022FC  6E0F               	movwf	interleave@i+1,c
  6162  0022FE  0E00               	movlw	0
  6163  002300  6E0E               	movwf	interleave@i,c
  6164  002302  D03A               	goto	i2l2004
  6165  002304                     i2l2000:
  6166                           
  6167                           ;TLC59281.c: 50: leds |= (red & mask << i) << (i + 1);
  6168  002304  C00E  F003         	movff	interleave@i,??_interleave
  6169  002308  0E01               	movlw	1
  6170  00230A  2603               	addwf	??_interleave,f,c
  6171  00230C  C00E  F004         	movff	interleave@i,??_interleave+1
  6172  002310  C00C  F005         	movff	interleave@mask,??_interleave+2
  6173  002314  2A04               	incf	??_interleave+1,f,c
  6174  002316  D002               	goto	i2u126_44
  6175  002318                     i2u126_45:
  6176  002318  90D8               	bcf	status,0,c
  6177  00231A  3605               	rlcf	??_interleave+2,f,c
  6178  00231C                     i2u126_44:
  6179  00231C  2E04               	decfsz	??_interleave+1,f,c
  6180  00231E  D7FC               	goto	i2u126_45
  6181  002320  5005               	movf	??_interleave+2,w,c
  6182  002322  1401               	andwf	interleave@red,w,c
  6183  002324  6E06               	movwf	(??_interleave+3)& (0+255),c
  6184  002326  6A07               	clrf	(??_interleave+4)& (0+255),c
  6185  002328  2A03               	incf	??_interleave,f,c
  6186  00232A  D003               	goto	i2u127_44
  6187  00232C                     i2u127_45:
  6188  00232C  90D8               	bcf	status,0,c
  6189  00232E  3606               	rlcf	??_interleave+3,f,c
  6190  002330  3607               	rlcf	??_interleave+4,f,c
  6191  002332                     i2u127_44:
  6192  002332  2E03               	decfsz	??_interleave,f,c
  6193  002334  D7FB               	goto	i2u127_45
  6194  002336  5006               	movf	??_interleave+3,w,c
  6195  002338  120A               	iorwf	interleave@leds,f,c
  6196  00233A  5007               	movf	??_interleave+4,w,c
  6197  00233C  120B               	iorwf	interleave@leds+1,f,c
  6198                           
  6199                           ;TLC59281.c: 51: leds |= (grn & mask << i) << i;
  6200  00233E  C00E  F003         	movff	interleave@i,??_interleave
  6201  002342  C00E  F004         	movff	interleave@i,??_interleave+1
  6202  002346  C00C  F005         	movff	interleave@mask,??_interleave+2
  6203  00234A  2A04               	incf	??_interleave+1,f,c
  6204  00234C  D002               	goto	i2u128_44
  6205  00234E                     i2u128_45:
  6206  00234E  90D8               	bcf	status,0,c
  6207  002350  3605               	rlcf	??_interleave+2,f,c
  6208  002352                     i2u128_44:
  6209  002352  2E04               	decfsz	??_interleave+1,f,c
  6210  002354  D7FC               	goto	i2u128_45
  6211  002356  5005               	movf	??_interleave+2,w,c
  6212  002358  1402               	andwf	interleave@grn,w,c
  6213  00235A  6E06               	movwf	(??_interleave+3)& (0+255),c
  6214  00235C  6A07               	clrf	(??_interleave+4)& (0+255),c
  6215  00235E  2A03               	incf	??_interleave,f,c
  6216  002360  D003               	goto	i2u129_44
  6217  002362                     i2u129_45:
  6218  002362  90D8               	bcf	status,0,c
  6219  002364  3606               	rlcf	??_interleave+3,f,c
  6220  002366  3607               	rlcf	??_interleave+4,f,c
  6221  002368                     i2u129_44:
  6222  002368  2E03               	decfsz	??_interleave,f,c
  6223  00236A  D7FB               	goto	i2u129_45
  6224  00236C  5006               	movf	??_interleave+3,w,c
  6225  00236E  120A               	iorwf	interleave@leds,f,c
  6226  002370  5007               	movf	??_interleave+4,w,c
  6227  002372  120B               	iorwf	interleave@leds+1,f,c
  6228  002374  4A0E               	infsnz	interleave@i,f,c
  6229  002376  2A0F               	incf	interleave@i+1,f,c
  6230  002378                     i2l2004:
  6231  002378  500F               	movf	interleave@i+1,w,c
  6232  00237A  0A80               	xorlw	128
  6233  00237C  6E03               	movwf	??_interleave& (0+255),c
  6234  00237E  5008               	movf	interleave@bitnum,w,c
  6235  002380  5C0E               	subwf	interleave@i,w,c
  6236  002382  5009               	movf	interleave@bitnum+1,w,c
  6237  002384  0A80               	xorlw	128
  6238  002386  5803               	subwfb	??_interleave& (0+255),w,c
  6239  002388  A0D8               	btfss	status,0,c
  6240  00238A  D7BC               	goto	i2l2000
  6241                           
  6242                           ;TLC59281.c: 52: }
  6243                           ;TLC59281.c: 54: return leds;
  6244  00238C  C00A  F001         	movff	interleave@leds,?_interleave
  6245  002390  C00B  F002         	movff	interleave@leds+1,?_interleave+1
  6246  002394  0012               	return	
  6247  002396                     __end_of_interleave:
  6248                           	opt stack 0
  6249                           pclatu	equ	0xFFB
  6250                           pclath	equ	0xFFA
  6251                           tblptru	equ	0xFF8
  6252                           tblptrh	equ	0xFF7
  6253                           tblptrl	equ	0xFF6
  6254                           tablat	equ	0xFF5
  6255                           prodh	equ	0xFF4
  6256                           prodl	equ	0xFF3
  6257                           intcon	equ	0xFF2
  6258                           indf0	equ	0xFEF
  6259                           postinc0	equ	0xFEE
  6260                           postdec0	equ	0xFED
  6261                           preinc0	equ	0xFEC
  6262                           fsr0h	equ	0xFEA
  6263                           fsr0l	equ	0xFE9
  6264                           wreg	equ	0xFE8
  6265                           indf1	equ	0xFE7
  6266                           postinc1	equ	0xFE6
  6267                           postdec1	equ	0xFE5
  6268                           preinc1	equ	0xFE4
  6269                           fsr1h	equ	0xFE2
  6270                           fsr1l	equ	0xFE1
  6271                           indf2	equ	0xFDF
  6272                           postinc2	equ	0xFDE
  6273                           postdec2	equ	0xFDD
  6274                           fsr2h	equ	0xFDA
  6275                           fsr2l	equ	0xFD9
  6276                           status	equ	0xFD8
  6277                           
  6278 ;; *************** function _ISR_ADC *****************
  6279 ;; Defined at:
  6280 ;;		line 98 in file "../init_ADC.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;		None
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  tmp             2    3[COMRAM] unsigned int 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;		None               void
  6287 ;; Registers used:
  6288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6297 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6298 ;;Total ram usage:        5 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_ISR_All
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text27
  6308  002010                     __ptext27:
  6309                           	opt stack 0
  6310  002010                     _ISR_ADC:
  6311                           	opt stack 27
  6312                           
  6313                           ;init_ADC.c: 100: uint16_t tmp = ADRESH; tmp <<= 8; tmp |= ADRESL;
  6314                           
  6315                           ;incstack = 0
  6316                           ;incstack = 0
  6317  002010  CFC4 F004          	movff	4036,ISR_ADC@tmp	;volatile
  6318  002014  6A05               	clrf	ISR_ADC@tmp+1,c
  6319  002016  5004               	movf	ISR_ADC@tmp,w,c
  6320  002018  6E05               	movwf	ISR_ADC@tmp+1,c
  6321  00201A  6A04               	clrf	ISR_ADC@tmp,c
  6322  00201C  50C3               	movf	4035,w,c	;volatile
  6323  00201E  1204               	iorwf	ISR_ADC@tmp,f,c
  6324                           
  6325                           ;init_ADC.c: 102: switch(channel_num) {
  6326  002020  D009               	goto	i2l1978
  6327  002022                     i2l1972:
  6328  002022  0E07               	movlw	7
  6329  002024  6E05               	movwf	ISR_ADC@tmp+1,c
  6330  002026  0EFF               	movlw	255
  6331  002028  D003               	goto	L4
  6332  00202A                     i2l1974:
  6333  00202A  0E00               	movlw	0
  6334  00202C  6E05               	movwf	ISR_ADC@tmp+1,c
  6335  00202E  0E40               	movlw	64
  6336  002030                     L4:
  6337  002030  6E04               	movwf	ISR_ADC@tmp,c
  6338  002032  D00D               	goto	i2l270
  6339  002034                     i2l1978:
  6340  002034  503D               	movf	_channel_num,w,c
  6341                           
  6342                           ; Switch size 1, requested type "space"
  6343                           ; Number of cases is 4, Range of values is 2 to 12
  6344                           ; switch strategies available:
  6345                           ; Name         Instructions Cycles
  6346                           ; simple_byte           13     7 (average)
  6347                           ;	Chosen strategy is simple_byte
  6348  002036  0A02               	xorlw	2	; case 2
  6349  002038  B4D8               	btfsc	status,2,c
  6350  00203A  D009               	goto	i2l270
  6351  00203C  0A01               	xorlw	1	; case 3
  6352  00203E  B4D8               	btfsc	status,2,c
  6353  002040  D006               	goto	i2l270
  6354  002042  0A09               	xorlw	9	; case 10
  6355  002044  B4D8               	btfsc	status,2,c
  6356  002046  D7ED               	goto	i2l1972
  6357  002048  0A06               	xorlw	6	; case 12
  6358  00204A  B4D8               	btfsc	status,2,c
  6359  00204C  D7EE               	goto	i2l1974
  6360  00204E                     i2l270:
  6361                           
  6362                           ;init_ADC.c: 111: if(buffer_num == 0)
  6363  00204E  6633               	tstfsz	_buffer_num,c
  6364  002050  D015               	goto	i2l1982
  6365                           
  6366                           ;init_ADC.c: 112: BufferA[getBuffer[channel_num]][sample_num] = tmp;
  6367  002052  503D               	movf	_channel_num,w,c
  6368  002054  0D01               	mullw	1
  6369  002056  0100               	movlb	0	; () banked
  6370  002058  0EE6               	movlw	low _getBuffer
  6371  00205A  24F3               	addwf	prodl,w,c
  6372  00205C  6ED9               	movwf	fsr2l,c
  6373  00205E  0100               	movlb	0	; () banked
  6374  002060  0E00               	movlw	high _getBuffer
  6375  002062  20F4               	addwfc	prodh,w,c
  6376  002064  6EDA               	movwf	fsr2h,c
  6377  002066  50DF               	movf	indf2,w,c
  6378  002068  6E01               	movwf	??_ISR_ADC& (0+255),c
  6379  00206A  5001               	movf	??_ISR_ADC,w,c
  6380  00206C  0D10               	mullw	16
  6381  00206E  0101               	movlb	1	; () banked
  6382  002070  0E00               	movlw	low _BufferA
  6383  002072  24F3               	addwf	prodl,w,c
  6384  002074  6E02               	movwf	(??_ISR_ADC+1)& (0+255),c
  6385  002076  0101               	movlb	1	; () banked
  6386  002078  0E01               	movlw	high _BufferA
  6387  00207A  D014               	goto	L5
  6388  00207C                     i2l1982:
  6389                           
  6390                           ;init_ADC.c: 113: else
  6391                           ;init_ADC.c: 114: BufferB[getBuffer[channel_num]][sample_num] = tmp;
  6392  00207C  503D               	movf	_channel_num,w,c
  6393  00207E  0D01               	mullw	1
  6394  002080  0100               	movlb	0	; () banked
  6395  002082  0EE6               	movlw	low _getBuffer
  6396  002084  24F3               	addwf	prodl,w,c
  6397  002086  6ED9               	movwf	fsr2l,c
  6398  002088  0100               	movlb	0	; () banked
  6399  00208A  0E00               	movlw	high _getBuffer
  6400  00208C  20F4               	addwfc	prodh,w,c
  6401  00208E  6EDA               	movwf	fsr2h,c
  6402  002090  50DF               	movf	indf2,w,c
  6403  002092  6E01               	movwf	??_ISR_ADC& (0+255),c
  6404  002094  5001               	movf	??_ISR_ADC,w,c
  6405  002096  0D10               	mullw	16
  6406  002098  0101               	movlb	1	; () banked
  6407  00209A  0E60               	movlw	low _BufferB
  6408  00209C  24F3               	addwf	prodl,w,c
  6409  00209E  6E02               	movwf	(??_ISR_ADC+1)& (0+255),c
  6410  0020A0  0101               	movlb	1	; () banked
  6411  0020A2  0E01               	movlw	high _BufferB
  6412  0020A4                     L5:
  6413  0020A4  20F4               	addwfc	prodh,w,c
  6414  0020A6  6E03               	movwf	(??_ISR_ADC+2)& (0+255),c
  6415  0020A8  5035               	movf	_sample_num,w,c
  6416  0020AA  0D02               	mullw	2
  6417  0020AC  50F3               	movf	prodl,w,c
  6418  0020AE  2402               	addwf	??_ISR_ADC+1,w,c
  6419  0020B0  6ED9               	movwf	fsr2l,c
  6420  0020B2  50F4               	movf	prodh,w,c
  6421  0020B4  2003               	addwfc	??_ISR_ADC+2,w,c
  6422  0020B6  6EDA               	movwf	fsr2h,c
  6423  0020B8  C004  FFDE         	movff	ISR_ADC@tmp,postinc2
  6424  0020BC  C005  FFDD         	movff	ISR_ADC@tmp+1,postdec2
  6425                           
  6426                           ; BSR set to: 1
  6427                           ;init_ADC.c: 116: channel_num = nextChannel[channel_num];
  6428  0020C0  503D               	movf	_channel_num,w,c
  6429  0020C2  0D01               	mullw	1
  6430  0020C4  0100               	movlb	0	; () banked
  6431  0020C6  0EF3               	movlw	low _nextChannel
  6432  0020C8  24F3               	addwf	prodl,w,c
  6433  0020CA  6ED9               	movwf	fsr2l,c
  6434  0020CC  0100               	movlb	0	; () banked
  6435  0020CE  0E00               	movlw	high _nextChannel
  6436  0020D0  20F4               	addwfc	prodh,w,c
  6437  0020D2  6EDA               	movwf	fsr2h,c
  6438  0020D4  50DF               	movf	indf2,w,c
  6439  0020D6  6E3D               	movwf	_channel_num,c
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;init_ADC.c: 117: if(channel_num == 2) {
  6443  0020D8  503D               	movf	_channel_num,w,c
  6444  0020DA  0A02               	xorlw	2
  6445  0020DC  A4D8               	btfss	status,2,c
  6446  0020DE  D016               	goto	i2l1996
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;init_ADC.c: 118: if(++sample_num >= 8) sample_num = 0;
  6450  0020E0  2A35               	incf	_sample_num,f,c
  6451  0020E2  0E07               	movlw	7
  6452  0020E4  6435               	cpfsgt	_sample_num& (0+255),c
  6453  0020E6  D004               	goto	i2l1990
  6454  0020E8  6E01               	movwf	??_ISR_ADC& (0+255),c
  6455  0020EA  0E00               	movlw	0
  6456  0020EC  6E35               	movwf	_sample_num,c
  6457  0020EE  5001               	movf	??_ISR_ADC& (0+255),w,c
  6458  0020F0                     i2l1990:
  6459                           
  6460                           ;init_ADC.c: 119: if(sample_num == 0) {
  6461  0020F0  6635               	tstfsz	_sample_num,c
  6462  0020F2  D00C               	goto	i2l1996
  6463                           
  6464                           ;init_ADC.c: 120: if(++buffer_num >= 2) buffer_num = 0;
  6465  0020F4  2A33               	incf	_buffer_num,f,c
  6466  0020F6  0E01               	movlw	1
  6467  0020F8  6433               	cpfsgt	_buffer_num& (0+255),c
  6468  0020FA  D004               	goto	i2l279
  6469  0020FC  6E01               	movwf	??_ISR_ADC& (0+255),c
  6470  0020FE  0E00               	movlw	0
  6471  002100  6E33               	movwf	_buffer_num,c
  6472  002102  5001               	movf	??_ISR_ADC& (0+255),w,c
  6473  002104                     i2l279:
  6474                           
  6475                           ;init_ADC.c: 121: buffer_full = 1;
  6476  002104  6E01               	movwf	??_ISR_ADC& (0+255),c
  6477  002106  0E01               	movlw	1
  6478  002108  6E32               	movwf	_buffer_full,c
  6479  00210A  5001               	movf	??_ISR_ADC& (0+255),w,c
  6480  00210C                     i2l1996:
  6481                           
  6482                           ;init_ADC.c: 122: }
  6483                           ;init_ADC.c: 123: }
  6484                           ;init_ADC.c: 125: ADCON0bits.CHS = channel_num;
  6485  00210C  C03D  F001         	movff	_channel_num,??_ISR_ADC
  6486  002110  4601               	rlncf	??_ISR_ADC,f,c
  6487  002112  4601               	rlncf	??_ISR_ADC,f,c
  6488  002114  50C2               	movf	4034,w,c	;volatile
  6489  002116  1801               	xorwf	??_ISR_ADC,w,c
  6490  002118  0BC3               	andlw	-61
  6491  00211A  1801               	xorwf	??_ISR_ADC,w,c
  6492  00211C  6EC2               	movwf	4034,c	;volatile
  6493  00211E  0012               	return	
  6494  002120                     __end_of_ISR_ADC:
  6495                           	opt stack 0
  6496                           pclatu	equ	0xFFB
  6497                           pclath	equ	0xFFA
  6498                           tblptru	equ	0xFF8
  6499                           tblptrh	equ	0xFF7
  6500                           tblptrl	equ	0xFF6
  6501                           tablat	equ	0xFF5
  6502                           prodh	equ	0xFF4
  6503                           prodl	equ	0xFF3
  6504                           intcon	equ	0xFF2
  6505                           indf0	equ	0xFEF
  6506                           postinc0	equ	0xFEE
  6507                           postdec0	equ	0xFED
  6508                           preinc0	equ	0xFEC
  6509                           fsr0h	equ	0xFEA
  6510                           fsr0l	equ	0xFE9
  6511                           wreg	equ	0xFE8
  6512                           indf1	equ	0xFE7
  6513                           postinc1	equ	0xFE6
  6514                           postdec1	equ	0xFE5
  6515                           preinc1	equ	0xFE4
  6516                           fsr1h	equ	0xFE2
  6517                           fsr1l	equ	0xFE1
  6518                           indf2	equ	0xFDF
  6519                           postinc2	equ	0xFDE
  6520                           postdec2	equ	0xFDD
  6521                           fsr2h	equ	0xFDA
  6522                           fsr2l	equ	0xFD9
  6523                           status	equ	0xFD8
  6524                           
  6525 ;; *************** function _ISR_Timer3 *****************
  6526 ;; Defined at:
  6527 ;;		line 166 in file "../init_ECCP.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;		None               void
  6534 ;; Registers used:
  6535 ;;		None
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_ISR_All
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text28
  6555  002920                     __ptext28:
  6556                           	opt stack 0
  6557  002920                     _ISR_Timer3:
  6558                           	opt stack 27
  6559                           
  6560                           ;incstack = 0
  6561                           ;incstack = 0
  6562  002920  0012               	return	
  6563  002922                     __end_of_ISR_Timer3:
  6564                           	opt stack 0
  6565                           pclatu	equ	0xFFB
  6566                           pclath	equ	0xFFA
  6567                           tblptru	equ	0xFF8
  6568                           tblptrh	equ	0xFF7
  6569                           tblptrl	equ	0xFF6
  6570                           tablat	equ	0xFF5
  6571                           prodh	equ	0xFF4
  6572                           prodl	equ	0xFF3
  6573                           intcon	equ	0xFF2
  6574                           indf0	equ	0xFEF
  6575                           postinc0	equ	0xFEE
  6576                           postdec0	equ	0xFED
  6577                           preinc0	equ	0xFEC
  6578                           fsr0h	equ	0xFEA
  6579                           fsr0l	equ	0xFE9
  6580                           wreg	equ	0xFE8
  6581                           indf1	equ	0xFE7
  6582                           postinc1	equ	0xFE6
  6583                           postdec1	equ	0xFE5
  6584                           preinc1	equ	0xFE4
  6585                           fsr1h	equ	0xFE2
  6586                           fsr1l	equ	0xFE1
  6587                           indf2	equ	0xFDF
  6588                           postinc2	equ	0xFDE
  6589                           postdec2	equ	0xFDD
  6590                           fsr2h	equ	0xFDA
  6591                           fsr2l	equ	0xFD9
  6592                           status	equ	0xFD8
  6593                           
  6594 ;; *************** function _ISR_Timer1 *****************
  6595 ;; Defined at:
  6596 ;;		line 162 in file "../init_ECCP.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;		None
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;		None
  6601 ;; Return value:  Size  Location     Type
  6602 ;;		None               void
  6603 ;; Registers used:
  6604 ;;		None
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;Total ram usage:        0 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_ISR_All
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text29
  6624  002922                     __ptext29:
  6625                           	opt stack 0
  6626  002922                     _ISR_Timer1:
  6627                           	opt stack 27
  6628                           
  6629                           ;incstack = 0
  6630                           ;incstack = 0
  6631  002922  0012               	return	
  6632  002924                     __end_of_ISR_Timer1:
  6633                           	opt stack 0
  6634                           pclatu	equ	0xFFB
  6635                           pclath	equ	0xFFA
  6636                           tblptru	equ	0xFF8
  6637                           tblptrh	equ	0xFF7
  6638                           tblptrl	equ	0xFF6
  6639                           tablat	equ	0xFF5
  6640                           prodh	equ	0xFF4
  6641                           prodl	equ	0xFF3
  6642                           intcon	equ	0xFF2
  6643                           indf0	equ	0xFEF
  6644                           postinc0	equ	0xFEE
  6645                           postdec0	equ	0xFED
  6646                           preinc0	equ	0xFEC
  6647                           fsr0h	equ	0xFEA
  6648                           fsr0l	equ	0xFE9
  6649                           wreg	equ	0xFE8
  6650                           indf1	equ	0xFE7
  6651                           postinc1	equ	0xFE6
  6652                           postdec1	equ	0xFE5
  6653                           preinc1	equ	0xFE4
  6654                           fsr1h	equ	0xFE2
  6655                           fsr1l	equ	0xFE1
  6656                           indf2	equ	0xFDF
  6657                           postinc2	equ	0xFDE
  6658                           postdec2	equ	0xFDD
  6659                           fsr2h	equ	0xFDA
  6660                           fsr2l	equ	0xFD9
  6661                           status	equ	0xFD8
  6662                           pclatu	equ	0xFFB
  6663                           pclath	equ	0xFFA
  6664                           tblptru	equ	0xFF8
  6665                           tblptrh	equ	0xFF7
  6666                           tblptrl	equ	0xFF6
  6667                           tablat	equ	0xFF5
  6668                           prodh	equ	0xFF4
  6669                           prodl	equ	0xFF3
  6670                           intcon	equ	0xFF2
  6671                           indf0	equ	0xFEF
  6672                           postinc0	equ	0xFEE
  6673                           postdec0	equ	0xFED
  6674                           preinc0	equ	0xFEC
  6675                           fsr0h	equ	0xFEA
  6676                           fsr0l	equ	0xFE9
  6677                           wreg	equ	0xFE8
  6678                           indf1	equ	0xFE7
  6679                           postinc1	equ	0xFE6
  6680                           postdec1	equ	0xFE5
  6681                           preinc1	equ	0xFE4
  6682                           fsr1h	equ	0xFE2
  6683                           fsr1l	equ	0xFE1
  6684                           indf2	equ	0xFDF
  6685                           postinc2	equ	0xFDE
  6686                           postdec2	equ	0xFDD
  6687                           fsr2h	equ	0xFDA
  6688                           fsr2l	equ	0xFD9
  6689                           status	equ	0xFD8
  6690                           
  6691                           	psect	rparam
  6692  0000                     pclatu	equ	0xFFB
  6693                           pclath	equ	0xFFA
  6694                           tblptru	equ	0xFF8
  6695                           tblptrh	equ	0xFF7
  6696                           tblptrl	equ	0xFF6
  6697                           tablat	equ	0xFF5
  6698                           prodh	equ	0xFF4
  6699                           prodl	equ	0xFF3
  6700                           intcon	equ	0xFF2
  6701                           indf0	equ	0xFEF
  6702                           postinc0	equ	0xFEE
  6703                           postdec0	equ	0xFED
  6704                           preinc0	equ	0xFEC
  6705                           fsr0h	equ	0xFEA
  6706                           fsr0l	equ	0xFE9
  6707                           wreg	equ	0xFE8
  6708                           indf1	equ	0xFE7
  6709                           postinc1	equ	0xFE6
  6710                           postdec1	equ	0xFE5
  6711                           preinc1	equ	0xFE4
  6712                           fsr1h	equ	0xFE2
  6713                           fsr1l	equ	0xFE1
  6714                           indf2	equ	0xFDF
  6715                           postinc2	equ	0xFDE
  6716                           postdec2	equ	0xFDD
  6717                           fsr2h	equ	0xFDA
  6718                           fsr2l	equ	0xFD9
  6719                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        27
    BSS         304
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      61
    BANK0           160     44     160
    BANK1           256     17     209
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ?___lmul	unsigned long  size(2) Largest target is 0

    ?_strncpy	PTR unsigned char  size(2) Largest target is 45
		 -> ChnlB(BANK0[45]), ChnlA(BANK0[45]), 

    ?_makeInt24	long  size(2) Largest target is 0

    ?_reverse	unsigned int  size(2) Largest target is 0

    ?_maskDot	unsigned int  size(2) Largest target is 0

    ?_maskBar	unsigned int  size(2) Largest target is 0

    ?_interleave	unsigned int  size(2) Largest target is 0

    ?_sm16x16	long  size(2) Largest target is 0

    ?_log2fix	long  size(2) Largest target is 0

    ProcessAC@bias	PTR unsigned int  size(2) Largest target is 96
		 -> BufferB(BANK1[96]), BufferA(BANK1[96]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 8
		 -> init_grn(CODE[8]), init_red(CODE[8]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 45
		 -> ChnlB(BANK0[45]), ChnlA(BANK0[45]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 45
		 -> ChnlB(BANK0[45]), ChnlA(BANK0[45]), 

    makeInt24@p	PTR unsigned char  size(2) Largest target is 6
		 -> p(COMRAM[6]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 45
		 -> ChnlB(BANK0[45]), ChnlA(BANK0[45]), 

    MeterChannel_init@c	PTR struct MeterChannel size(2) Largest target is 45
		 -> ChnlB(BANK0[45]), ChnlA(BANK0[45]), 

    ProcessAC@c	PTR struct MeterChannel size(2) Largest target is 45
		 -> ChnlB(BANK0[45]), ChnlA(BANK0[45]), 

    ProcessAC@samples	PTR unsigned int  size(2) Largest target is 96
		 -> BufferB(BANK1[96]), BufferA(BANK1[96]), 


Critical Paths under _main in COMRAM

    _main->_sm16x16
    _log2fix->___lmul
    _ProcessAC->_sm16x16
    _ProcessAC->_makeInt24
    _MeterChannel_init->_strncpy

Critical Paths under _ISR_All in COMRAM

    _ISR_All->_ISR_ECCP1
    _ISR_ECCP1->_interleave
    _write_LEDs->_SPI1_write

Critical Paths under _main in BANK0

    _main->_ProcessAC
    _log2fix->___lmul
    _ProcessAC->_makeInt24
    _MeterChannel_init->_strncpy

Critical Paths under _ISR_All in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_All in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_All in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_All in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_All in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_All in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_All in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_All in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_All in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_All in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_All in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_All in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_All in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR_All in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR_All in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    12      5    3335
                                              0 BANK1     17    12      5
                           _OSC_init
                           _ADC_init
                        _Timer1_init
                        _Timer3_init
                         _ECCP1_init
                         _ECCP2_init
                      _TLC59281_init
                          _SPI1_init
                  _MeterChannel_init
                          _ProcessAC
                            _log2fix
                            _sm16x16
 ---------------------------------------------------------------------------------
 (1) _log2fix                                             29    23      6     872
                                              8 BANK0     29    23      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     136
                                             34 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _ProcessAC                                           32    26      6    1073
                                             12 BANK0     32    26      6
                            _sm16x16
                            _sm24x24
                          _makeInt24
 ---------------------------------------------------------------------------------
 (2) _makeInt24                                           16    12      4     330
                                             34 COMRAM     4     0      4
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (2) _sm24x24                                              8     0      8      62
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _sm16x16                                              8     4      4      96
                                             34 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _MeterChannel_init                                    2     0      2     605
                                              6 BANK0      2     0      2
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _strncpy                                             10     4      6     202
                                             34 COMRAM     4     4      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _SPI1_init                                            1     1      0       0
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TLC59281_init                                        1     1      0       0
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ECCP2_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECCP1_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer3_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_All                                             14    14      0    1078
                                             20 COMRAM    14    14      0
                         _ISR_Timer1
                         _ISR_Timer3
                            _ISR_ADC
                          _ISR_ECCP1
                          _ISR_ECCP2
                           _ISR_SPI1
 ---------------------------------------------------------------------------------
 (4) _ISR_SPI1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ISR_ECCP2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ISR_ECCP1                                            5     5      0    1029
                                             15 COMRAM     5     5      0
                         _interleave
                            _maskBar
                            _maskDot
                            _reverse
                         _write_LEDs
 ---------------------------------------------------------------------------------
 (5) _write_LEDs                                           5     3      2     113
                                              2 COMRAM     5     3      2
                         _SPI1_write
 ---------------------------------------------------------------------------------
 (6) _SPI1_write                                           2     1      1      23
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _reverse                                              8     6      2     116
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _maskDot                                             13     9      4     159
                                              0 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (5) _maskBar                                             11     7      4     136
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (5) _interleave                                          15    13      2     250
                                              0 COMRAM    15    13      2
 ---------------------------------------------------------------------------------
 (4) _ISR_ADC                                              5     5      0      49
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSC_init
   _ADC_init
   _Timer1_init
   _Timer3_init
   _ECCP1_init
   _ECCP2_init
   _TLC59281_init
   _SPI1_init
   _MeterChannel_init
     _strncpy
   _ProcessAC
     _sm16x16
     _sm24x24
     _makeInt24
   _log2fix
     ___lmul
   _sm16x16

 _ISR_All (ROOT)
   _ISR_Timer1
   _ISR_Timer3
   _ISR_ADC
   _ISR_ECCP1
     _interleave
     _maskBar
     _maskDot
     _reverse
     _write_LEDs
       _SPI1_write
   _ISR_ECCP2
   _ISR_SPI1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     11      D1       8       81.6%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      3D       1       64.2%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       A       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AE       6        0.0%
DATA                 0      0     1B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Nov 05 17:30:17 2013

                         _p 0037                           _x 0027                           _y 002B  
                        l90 2812                          l93 2816                          l96 281A  
                        l99 281E                __CFG_CP0$OFF 000000         __size_of_ECCP1_init 002A  
       __size_of_ECCP2_init 002C                         l453 24BE                         l454 24CA  
                       WREG 000FE8                         l458 22C4                         fsr2 000FD9  
                       prod 000FF3                         wreg 000FE8                __CFG_IESO$ON 000000  
                      INDF0 000FEF                        INDF1 000FE7                        FSR0H 000FEA  
                      FSR1H 000FE2                        FSR0L 000FE9                        FSR1L 000FE1  
                      PRODH 000FF4                        PRODL 000FF3                        l2320 13A6  
                      l2304 12CA                        l2410 23B6                        l2322 13C0  
                      l2306 12E4                        l2420 2428                        l2412 23CC  
                      l2500 151A                        l2422 243A                        l2414 23E6  
                      l2510 156A                        l2262 101A                        l2416 2404  
                      l2408 23A0                        l2520 1628                        l2504 153E  
                      l2272 1112                        l2264 108E                        l2256 0F98  
                      l2418 2416                        l2426 2828                        l2602 25D0  
                      l2610 2620                        l2514 15AE                        l2290 1208  
                      l2274 112C                        l2532 174C                        l2524 167C  
                      l2516 15E4                        l2606 25F8                        l2534 176A  
                      l2288 11EE                        l2590 256E                        l2558 1B3E  
                      l2596 25B2                        l2598 25C0                        u2000 16BE  
                      u2005 16AA                        u2085 1C86                        u1920 14B0  
                      u1930 14D0                        u1940 14F8                        u1925 149C  
                      u1935 14BC                        u1945 14E4             __end_of_ISR_ADC 2120  
              __CFG_WDTPS$2 000000             __end_of_ISR_All 00E4                        _main 0F12  
             ISR_ECCP1@leds 0013                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9                        pclat 000FFA  
                      prodh 000FF4                        prodl 000FF3                        start 00E4  
          __end_of_ADC_init 26E4               __CFG_PLLDIV$2 000000          __size_of_ISR_ECCP1 016E  
        __size_of_ISR_ECCP2 0004                 ?_ISR_Timer1 0001                 ?_ISR_Timer3 0001  
                     ?_main 01C0                       _T1CON 000FCD                       _T3CON 000F79  
                     i2l110 0064                       i2l111 007A                       i2l200 21E4  
                     i2l112 008A                       i2l113 009A                       i2l114 00AA  
                     i2l108 0052                       i2l109 00AA                       i2l270 204E  
                     i2l177 273C                       i2l193 21C0                       i2l419 2914  
                     i2l279 2104                       i2l376 2002                       _TMR1H 000FCF  
                     _TMR3H 000F7B                       _TMR1L 000FCE                       _TMR3L 000F7A  
           __end_of_sm16x16 24DC             __end_of_sm24x24 22DA            __end_of_ISR_SPI1 2920  
    __size_of_TLC59281_init 00B6                       _ChnlA 0060                       _ChnlB 008D  
       ___lmul@multiplicand 00BE              __CFG_FCMEN$OFF 000000                 ?_SPI1_write 0001  
        __size_of_SPI1_init 002C             __end_of_log2fix 1798             __end_of_maskBar 27F2  
           __end_of_maskDot 2564                 maskBar@leds 0003                 maskBar@mask 0008  
          __end_of_OSC_init 2824                       _errno 002F                       _slice 0036  
                     main@x 01CD                       main@y 01CF                       main@z 01C9  
                     tablat 000FF5             __end_of_reverse 2746                       status 000FD8  
           __end_of_strncpy 25E8                 maskDot@leds 0003                 maskDot@mask 000C  
   __CFG_DSWDTOSC$INTOSCREF 000000             __initialization 2746                __end_of_main 142C  
            __CFG_DSWDTPS$2 000000              __CFG_OSC$HSPLL 000000                      ??_main 01C5  
             interleave@grn 0002               interleave@red 0001               __activetblptr 000003  
                 ??_ISR_ADC 0001                      PREINC0 000FEC                      PREINC1 000FE4  
                 ??_ISR_All 0015                      _ADRESH 000FC4                      _ADRESL 000FC3  
                    _CCPR1H 000FBC                      _CCPR2H 000FB6                      _CCPR1L 000FBB  
                    _CCPR2L 000FB5                      i2l2000 2304                ??_ECCP1_init 0023  
                    i2l2004 2378                      i2l2014 27E8                      i2l2200 005E  
                    i2l2026 255A                      i2l2210 0074                      i2l2202 0062  
                    i2l2132 2154                      i2l2220 0092                      i2l2212 0078  
                    i2l2204 006C                      i2l2150 21E6                      i2l2142 219C  
                    i2l2134 216A                      i2l2126 212A                      i2l2222 0096  
                    i2l2214 0082                      i2l2206 006E                      i2l2144 21AE  
                    i2l2136 2180                      i2l2224 009A                      i2l2216 0086  
                    i2l2208 0072                      i2l2146 21C2                      i2l2226 00A2  
                    i2l2218 008A                      i2l2148 21D4                      i2l2164 1ECE  
                    i2l2228 00A6                      i2l2158 1EBA                      i2l2190 0040  
                    i2l2192 0048                      i2l2178 1F68                      i2l2194 004C  
                    i2l2196 0050                      i2l2198 005A              __CFG_WDTEN$OFF 000000  
              ??_ECCP2_init 0023                      i2l1972 2022                      i2l1990 20F0  
                    i2l1982 207C                      i2l1974 202A                      i2l1978 2034  
                    i2l1996 210C           __end_of_ISR_ECCP1 2010           __end_of_ISR_ECCP2 291E  
            __CFG_WPCFG$OFF 000000         __size_of_ISR_Timer1 0002         __size_of_ISR_Timer3 0002  
             _TLC59281_init 2396              __CFG_XINST$OFF 000000               ??_Timer1_init 0023  
             ??_Timer3_init 0023                _CCPTMRS0bits 000F52           __end_of_SPI1_init 2850  
       __size_of_SPI1_write 0016                      ___lmul 25E8              __CFG_STVREN$ON 000000  
                 ??_sm16x16 0027                   ??_sm24x24 0023            __end_of_init_grn 0F08  
          __end_of_init_red 0F10                      clear_0 274C                      clear_1 2758  
                    clear_2 2764             __CFG_CLKOEC$OFF 000000                  ProcessAC@c 00CA  
                ProcessAC@i 00DC                   ??_log2fix 00C8          __end_of_ECCP1_init 28A6  
        __end_of_ECCP2_init 287C                   ??_maskBar 0005                   ??_maskDot 0005  
              __pdataCOMRAM 003D          __size_of_ProcessAC 0322            interleave@bitnum 0008  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ?_ADC_init 0001                   ??_reverse 0003  
                 ??_strncpy 0023        __CFG_LS48MHZ$SYS48X8 000000                  __accesstop 0060  
   __end_of__initialization 279C              ?_TLC59281_init 0001                   ?_ISR_SPI1 0001  
            __pcstackCOMRAM 0001                __pidataBANK0 28EA                   ?_OSC_init 0001  
       __end_of_Timer1_init 28EA         __end_of_Timer3_init 28C8                 interleave@i 000E  
                ??_ADC_init 0023          __size_of_makeInt24 022A              interleave@leds 000A  
            interleave@mask 000C                  __pbssBANK0 0060                  __pbssBANK1 0100  
         __end_of_ProcessAC 1ABA                  ??_ISR_SPI1 0001                     POSTDEC0 000FED  
                   POSTDEC1 000FE5                     ?___lmul 00BA                     POSTINC0 000FEE  
                   POSTINC1 000FE6                  ??_OSC_init 0023              ___lmul@product 0023  
              ??_ISR_Timer1 0001                ??_ISR_Timer3 0001                ??_SPI1_write 0002  
                   _ISR_ADC 2010                  _buffer_num 0033                     _ISR_All 0008  
                   _SSP1BUF 000FC9            __CFG_CFGPLLEN$ON 000000             ??_TLC59281_init 0023  
                   _BufferA 0100                     _BufferB 0160          __end_of_ISR_Timer1 2924  
        __end_of_ISR_Timer3 2922                     __Hparam 0000                     __Lparam 0000  
               _Timer1_init 28C8                 _Timer3_init 28A6           __end_of_makeInt24 1CE4  
           __size_of___lmul 0082          __end_of_SPI1_write 291A                __psmallconst 0F00  
                   _sm24x24 2200                     _sm16x16 244C       __CFG_RTCOSC$INTOSCREF 000000  
                   _channel 0034                     __pcinit 2746                     __ramtop 0F00  
                   __ptext0 0F12                     __ptext1 142C                     __ptext2 25E8  
                   __ptext3 1798                     __ptext4 1ABA                     __ptext5 2200  
                   __ptext6 244C                     __ptext7 1CE4                     __ptext8 2564  
                   __ptext9 2824               maskBar@bitnum 000A                     _log2fix 142C  
                   _maskBar 27A2                   _T1CONbits 000FCD                     _maskDot 24DC  
                 _T3CONbits 000F79                 ProcessAC@t1 00E2                 ProcessAC@t2 00DE  
                _interleave 22DA                 SPI1_write@d 0001              log2fix@scale_1 00DB  
                   _reverse 26E4              log2fix@scale_2 00D7                     _strncpy 2564  
      end_of_initialization 279C                  _sample_num 0035                   _ISR_ECCP1 1EA2  
                 _ISR_ECCP2 291A                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc2 000FDE                   _TIMERbits 0031  
                 _SPI1_init 2824                   _PORTAbits 000F80                   _PORTBbits 000F81  
          __CFG_DSBOREN$OFF 000000            __CFG_CPUDIV$OSC1 000000                   _TRISAbits 000F92  
                 _TRISBbits 000F93                   _TRISCbits 000F94               maskDot@bitnum 000A  
         __CFG_SOSCSEL$HIGH 000000           __size_of_ADC_init 007A                  makeInt24@p 0023  
                makeInt24@r 00BE                  makeInt24@t 00C2                 _CCP1CONbits 000FBA  
               _CCP2CONbits 000FB4            __CFG_IOL1WAY$OFF 000000                 _ADCTRIGbits 000EB8  
              ISR_ECCP1@grn 0012                ISR_ECCP1@red 0011                  ?_ISR_ECCP1 0001  
                ?_ISR_ECCP2 0001         __CFG_MSSP7B_EN$MSK7 000000                  _write_LEDs 2120  
         __size_of_ISR_SPI1 0002              __end_of___lmul 266A                  ?_SPI1_init 0001  
         _MeterChannel_init 1CE4               __pidataCOMRAM 2924           __size_of_OSC_init 0032  
          __CFG_DSWDTEN$OFF 000000          ?_MeterChannel_init 00C0         start_initialization 2746  
               ?_interleave 0001         ??_MeterChannel_init 0027                    ??___lmul 0023  
 __end_of_MeterChannel_init 1EA2                   _ProcessAC 1798           __CFG_ADCSEL$BIT12 000000  
               __pdataBANK0 00E6           SPI1_write@TempVar 0002                 __pbssCOMRAM 0027  
                ISR_ADC@tmp 0004               __pcstackBANK0 00BA               __pcstackBANK1 01C0  
                  ?_ISR_ADC 0001                    ?_ISR_All 0001                 _channel_num 003D  
               ??_ISR_ECCP1 0010                 ??_ISR_ECCP2 0001                ?_Timer1_init 0001  
       __size_of_interleave 00BC                ?_Timer3_init 0001                   _getBuffer 00E6  
                 __pintcode 0008                 ?_write_LEDs 0003                  ?_ProcessAC 00C6  
                  ?_sm16x16 0023                    ?_sm24x24 00BA                 ??_SPI1_init 0023  
                 _makeInt24 1ABA         ProcessAC@PPM_Attack 00D8                    ?_log2fix 00C2  
                  ?_maskBar 0001                    ?_maskDot 0001                 __smallconst 0F00  
                  _ADC_init 266A                    ?_reverse 0001                    ?_strncpy 00BA  
             ProcessAC@bias 00C8                    _LATAbits 000F89                    _LATBbits 000F8A  
     __end_of_TLC59281_init 244C                 strncpy@from 00BC                    _PIE1bits 000F9D  
                  _PIE2bits 000FA0                 strncpy@size 00BE                    i2u132_40 27DC  
                  i2u132_45 27D6                    i2u126_44 231C                    i2u134_44 251E  
                  i2u126_45 2318                    i2u134_45 2518                    i2u127_44 2332  
                  i2u135_44 254E                    i2u127_45 232C                    i2u135_45 2548  
                  i2u128_44 2352                    i2u128_45 234E                    i2u129_44 2368  
                  i2u129_45 2362                    i2u170_40 00A2                    i2u170_41 00A0  
                  i2u165_40 0048                    i2u165_41 0046                    i2u166_40 005A  
                  i2u166_41 0058                    i2u167_40 006C                    i2u167_41 006A  
                  i2u168_40 0082                    i2u168_41 0080                    i2u169_40 0092  
                  i2u169_41 0090                    _PIR1bits 000F9E                    _PIR2bits 000FA1  
               _buffer_full 0032                    _ISR_SPI1 291E  __size_of_MeterChannel_init 01BE  
                  _SSP1CON1 000FC6                    _OSC_init 27F2                  ?_makeInt24 0023  
                _ADCON0bits 000FC2                  _ADCON1bits 000FC1            log2fix@precision 00C6  
          ProcessAC@samples 00C6            __size_of_ISR_ADC 0110            __size_of_ISR_All 00DC  
         ___lmul@multiplier 00BA                   copy_data0 277E         __size_of_write_LEDs 00E0  
                _ECCP1_init 287C                  _ECCP2_init 2850                  _ANCON0bits 000F48  
                _ANCON1bits 000F49                    __Hrparam 0000                    __Lrparam 0000  
               ??_ProcessAC 00CC            __size_of_sm16x16 0090            __size_of_sm24x24 00DA  
          __size_of_log2fix 036C            __size_of_maskBar 0050            __size_of_maskDot 0088  
              ??_interleave 0003          MeterChannel_init@c 00C0                    __ptext10 2396  
                  __ptext11 2850                    __ptext20 1EA2                    __ptext12 287C  
                  __ptext21 2120                    __ptext13 28A6                  _T1GCONbits 000F9A  
                  __ptext22 2904                    __ptext14 28C8                    __ptext23 26E4  
                  __ptext15 266A                    __ptext24 24DC                    __ptext16 27F2  
                  __ptext25 27A2                    __ptext26 22DA                    __ptext18 291E  
                  __ptext27 2010                    __ptext19 291A                    __ptext28 2920  
                  __ptext29 2922                _SSP1CON1bits 000FC6            __size_of_reverse 0062  
                  sm16x16@a 0023                    sm16x16@b 0025                    sm16x16@q 00BA  
                  sm24x24@x 00BA                    sm24x24@y 00BE                  _T3GCONbits 000F97  
               _OSCCON2bits 000F87            __size_of_strncpy 0084                    _init_grn 0F00  
             __size_of_main 051A                    _init_red 0F08              write_LEDs@leds 0003  
               _nextChannel 00F3          __end_of_interleave 2396        __size_of_Timer1_init 0022  
      __size_of_Timer3_init 0022                    main@argc 01C0                    main@argv 01C2  
              _SSP1STATbits 000FC7                    log2fix@b 00CF                    log2fix@i 00C9  
                  log2fix@x 00C2                    log2fix@y 00D3                    log2fix@z 00CB  
               ??_makeInt24 00BA                    maskBar@a 0001                    maskDot@a 0001  
        ProcessAC@VU_Attack 00D4                 _OSCTUNEbits 000F9B                  _INTCONbits 000FF2  
                  intlevel2 0000                 ?_ECCP1_init 0001                 ?_ECCP2_init 0001  
                _OSCCONbits 000FD3                   strncpy@cp 0025               write_LEDs@hi8 0007  
             write_LEDs@lo8 0006                   strncpy@to 00BA                    reverse@r 0005  
                  reverse@s 0007                    reverse@v 0001                ??_write_LEDs 0005  
                _ISR_Timer1 2922                  _ISR_Timer3 2920                  _SPI1_write 2904  
               _SSPCON1bits 000FC6          __end_of_write_LEDs 2200  
